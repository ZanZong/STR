node {
  name: "input_1"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
        dim {
          size: 3
        }
      }
    }
  }
}
node {
  name: "block1_conv1/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1_conv1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\003\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "block1_conv1/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1_conv1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.09975093603134155
      }
    }
  }
}
node {
  name: "block1_conv1/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1_conv1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09975093603134155
      }
    }
  }
}
node {
  name: "block1_conv1/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "block1_conv1/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1_conv1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "block1_conv1/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "block1_conv1/kernel/Initializer/random_uniform/max"
  input: "block1_conv1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1_conv1/kernel"
      }
    }
  }
}
node {
  name: "block1_conv1/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "block1_conv1/kernel/Initializer/random_uniform/RandomUniform"
  input: "block1_conv1/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1_conv1/kernel"
      }
    }
  }
}
node {
  name: "block1_conv1/kernel/Initializer/random_uniform"
  op: "Add"
  input: "block1_conv1/kernel/Initializer/random_uniform/mul"
  input: "block1_conv1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1_conv1/kernel"
      }
    }
  }
}
node {
  name: "block1_conv1/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1_conv1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block1_conv1/kernel"
    }
  }
}
node {
  name: "block1_conv1/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block1_conv1/kernel"
}
node {
  name: "block1_conv1/kernel/Assign"
  op: "AssignVariableOp"
  input: "block1_conv1/kernel"
  input: "block1_conv1/kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block1_conv1/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block1_conv1/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block1_conv1/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1_conv1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block1_conv1/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1_conv1/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block1_conv1/bias"
    }
  }
}
node {
  name: "block1_conv1/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block1_conv1/bias"
}
node {
  name: "block1_conv1/bias/Assign"
  op: "AssignVariableOp"
  input: "block1_conv1/bias"
  input: "block1_conv1/bias/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block1_conv1/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block1_conv1/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block1_conv1/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block1_conv1/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block1_conv1/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block1_conv1/Conv2D"
  op: "Conv2D"
  input: "input_1"
  input: "block1_conv1/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "block1_conv1/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block1_conv1/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block1_conv1/BiasAdd"
  op: "BiasAdd"
  input: "block1_conv1/Conv2D"
  input: "block1_conv1/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "block1_conv1/Relu"
  op: "Relu"
  input: "block1_conv1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block1_conv2/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1_conv2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "block1_conv2/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1_conv2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.07216878235340118
      }
    }
  }
}
node {
  name: "block1_conv2/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1_conv2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.07216878235340118
      }
    }
  }
}
node {
  name: "block1_conv2/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "block1_conv2/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1_conv2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "block1_conv2/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "block1_conv2/kernel/Initializer/random_uniform/max"
  input: "block1_conv2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1_conv2/kernel"
      }
    }
  }
}
node {
  name: "block1_conv2/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "block1_conv2/kernel/Initializer/random_uniform/RandomUniform"
  input: "block1_conv2/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1_conv2/kernel"
      }
    }
  }
}
node {
  name: "block1_conv2/kernel/Initializer/random_uniform"
  op: "Add"
  input: "block1_conv2/kernel/Initializer/random_uniform/mul"
  input: "block1_conv2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1_conv2/kernel"
      }
    }
  }
}
node {
  name: "block1_conv2/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1_conv2/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block1_conv2/kernel"
    }
  }
}
node {
  name: "block1_conv2/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block1_conv2/kernel"
}
node {
  name: "block1_conv2/kernel/Assign"
  op: "AssignVariableOp"
  input: "block1_conv2/kernel"
  input: "block1_conv2/kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block1_conv2/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block1_conv2/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block1_conv2/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1_conv2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block1_conv2/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1_conv2/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block1_conv2/bias"
    }
  }
}
node {
  name: "block1_conv2/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block1_conv2/bias"
}
node {
  name: "block1_conv2/bias/Assign"
  op: "AssignVariableOp"
  input: "block1_conv2/bias"
  input: "block1_conv2/bias/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block1_conv2/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block1_conv2/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block1_conv2/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block1_conv2/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block1_conv2/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block1_conv2/Conv2D"
  op: "Conv2D"
  input: "block1_conv1/Relu"
  input: "block1_conv2/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "block1_conv2/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block1_conv2/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block1_conv2/BiasAdd"
  op: "BiasAdd"
  input: "block1_conv2/Conv2D"
  input: "block1_conv2/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "block1_conv2/Relu"
  op: "Relu"
  input: "block1_conv2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block1_pool/MaxPool"
  op: "MaxPool"
  input: "block1_conv2/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "block2_conv1/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2_conv1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "block2_conv1/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2_conv1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0589255653321743
      }
    }
  }
}
node {
  name: "block2_conv1/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2_conv1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0589255653321743
      }
    }
  }
}
node {
  name: "block2_conv1/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "block2_conv1/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2_conv1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "block2_conv1/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "block2_conv1/kernel/Initializer/random_uniform/max"
  input: "block2_conv1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2_conv1/kernel"
      }
    }
  }
}
node {
  name: "block2_conv1/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "block2_conv1/kernel/Initializer/random_uniform/RandomUniform"
  input: "block2_conv1/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2_conv1/kernel"
      }
    }
  }
}
node {
  name: "block2_conv1/kernel/Initializer/random_uniform"
  op: "Add"
  input: "block2_conv1/kernel/Initializer/random_uniform/mul"
  input: "block2_conv1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2_conv1/kernel"
      }
    }
  }
}
node {
  name: "block2_conv1/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2_conv1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block2_conv1/kernel"
    }
  }
}
node {
  name: "block2_conv1/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block2_conv1/kernel"
}
node {
  name: "block2_conv1/kernel/Assign"
  op: "AssignVariableOp"
  input: "block2_conv1/kernel"
  input: "block2_conv1/kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block2_conv1/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block2_conv1/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block2_conv1/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2_conv1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block2_conv1/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2_conv1/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block2_conv1/bias"
    }
  }
}
node {
  name: "block2_conv1/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block2_conv1/bias"
}
node {
  name: "block2_conv1/bias/Assign"
  op: "AssignVariableOp"
  input: "block2_conv1/bias"
  input: "block2_conv1/bias/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block2_conv1/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block2_conv1/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block2_conv1/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block2_conv1/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block2_conv1/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block2_conv1/Conv2D"
  op: "Conv2D"
  input: "block1_pool/MaxPool"
  input: "block2_conv1/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "block2_conv1/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block2_conv1/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block2_conv1/BiasAdd"
  op: "BiasAdd"
  input: "block2_conv1/Conv2D"
  input: "block2_conv1/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "block2_conv1/Relu"
  op: "Relu"
  input: "block2_conv1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block2_conv2/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2_conv2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "block2_conv2/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2_conv2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.05103103816509247
      }
    }
  }
}
node {
  name: "block2_conv2/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2_conv2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.05103103816509247
      }
    }
  }
}
node {
  name: "block2_conv2/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "block2_conv2/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2_conv2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "block2_conv2/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "block2_conv2/kernel/Initializer/random_uniform/max"
  input: "block2_conv2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2_conv2/kernel"
      }
    }
  }
}
node {
  name: "block2_conv2/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "block2_conv2/kernel/Initializer/random_uniform/RandomUniform"
  input: "block2_conv2/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2_conv2/kernel"
      }
    }
  }
}
node {
  name: "block2_conv2/kernel/Initializer/random_uniform"
  op: "Add"
  input: "block2_conv2/kernel/Initializer/random_uniform/mul"
  input: "block2_conv2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2_conv2/kernel"
      }
    }
  }
}
node {
  name: "block2_conv2/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2_conv2/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block2_conv2/kernel"
    }
  }
}
node {
  name: "block2_conv2/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block2_conv2/kernel"
}
node {
  name: "block2_conv2/kernel/Assign"
  op: "AssignVariableOp"
  input: "block2_conv2/kernel"
  input: "block2_conv2/kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block2_conv2/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block2_conv2/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block2_conv2/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2_conv2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block2_conv2/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2_conv2/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block2_conv2/bias"
    }
  }
}
node {
  name: "block2_conv2/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block2_conv2/bias"
}
node {
  name: "block2_conv2/bias/Assign"
  op: "AssignVariableOp"
  input: "block2_conv2/bias"
  input: "block2_conv2/bias/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block2_conv2/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block2_conv2/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block2_conv2/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block2_conv2/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block2_conv2/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block2_conv2/Conv2D"
  op: "Conv2D"
  input: "block2_conv1/Relu"
  input: "block2_conv2/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "block2_conv2/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block2_conv2/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block2_conv2/BiasAdd"
  op: "BiasAdd"
  input: "block2_conv2/Conv2D"
  input: "block2_conv2/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "block2_conv2/Relu"
  op: "Relu"
  input: "block2_conv2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block2_pool/MaxPool"
  op: "MaxPool"
  input: "block2_conv2/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "block3_conv1/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "block3_conv1/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0416666679084301
      }
    }
  }
}
node {
  name: "block3_conv1/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0416666679084301
      }
    }
  }
}
node {
  name: "block3_conv1/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "block3_conv1/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "block3_conv1/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "block3_conv1/kernel/Initializer/random_uniform/max"
  input: "block3_conv1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv1/kernel"
      }
    }
  }
}
node {
  name: "block3_conv1/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "block3_conv1/kernel/Initializer/random_uniform/RandomUniform"
  input: "block3_conv1/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv1/kernel"
      }
    }
  }
}
node {
  name: "block3_conv1/kernel/Initializer/random_uniform"
  op: "Add"
  input: "block3_conv1/kernel/Initializer/random_uniform/mul"
  input: "block3_conv1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv1/kernel"
      }
    }
  }
}
node {
  name: "block3_conv1/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block3_conv1/kernel"
    }
  }
}
node {
  name: "block3_conv1/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block3_conv1/kernel"
}
node {
  name: "block3_conv1/kernel/Assign"
  op: "AssignVariableOp"
  input: "block3_conv1/kernel"
  input: "block3_conv1/kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block3_conv1/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block3_conv1/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block3_conv1/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block3_conv1/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv1/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block3_conv1/bias"
    }
  }
}
node {
  name: "block3_conv1/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block3_conv1/bias"
}
node {
  name: "block3_conv1/bias/Assign"
  op: "AssignVariableOp"
  input: "block3_conv1/bias"
  input: "block3_conv1/bias/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block3_conv1/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block3_conv1/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block3_conv1/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block3_conv1/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block3_conv1/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block3_conv1/Conv2D"
  op: "Conv2D"
  input: "block2_pool/MaxPool"
  input: "block3_conv1/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "block3_conv1/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block3_conv1/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block3_conv1/BiasAdd"
  op: "BiasAdd"
  input: "block3_conv1/Conv2D"
  input: "block3_conv1/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "block3_conv1/Relu"
  op: "Relu"
  input: "block3_conv1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block3_conv2/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "block3_conv2/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.03608439117670059
      }
    }
  }
}
node {
  name: "block3_conv2/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03608439117670059
      }
    }
  }
}
node {
  name: "block3_conv2/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "block3_conv2/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "block3_conv2/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "block3_conv2/kernel/Initializer/random_uniform/max"
  input: "block3_conv2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv2/kernel"
      }
    }
  }
}
node {
  name: "block3_conv2/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "block3_conv2/kernel/Initializer/random_uniform/RandomUniform"
  input: "block3_conv2/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv2/kernel"
      }
    }
  }
}
node {
  name: "block3_conv2/kernel/Initializer/random_uniform"
  op: "Add"
  input: "block3_conv2/kernel/Initializer/random_uniform/mul"
  input: "block3_conv2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv2/kernel"
      }
    }
  }
}
node {
  name: "block3_conv2/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv2/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block3_conv2/kernel"
    }
  }
}
node {
  name: "block3_conv2/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block3_conv2/kernel"
}
node {
  name: "block3_conv2/kernel/Assign"
  op: "AssignVariableOp"
  input: "block3_conv2/kernel"
  input: "block3_conv2/kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block3_conv2/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block3_conv2/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block3_conv2/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block3_conv2/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv2/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block3_conv2/bias"
    }
  }
}
node {
  name: "block3_conv2/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block3_conv2/bias"
}
node {
  name: "block3_conv2/bias/Assign"
  op: "AssignVariableOp"
  input: "block3_conv2/bias"
  input: "block3_conv2/bias/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block3_conv2/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block3_conv2/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block3_conv2/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block3_conv2/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block3_conv2/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block3_conv2/Conv2D"
  op: "Conv2D"
  input: "block3_conv1/Relu"
  input: "block3_conv2/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "block3_conv2/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block3_conv2/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block3_conv2/BiasAdd"
  op: "BiasAdd"
  input: "block3_conv2/Conv2D"
  input: "block3_conv2/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "block3_conv2/Relu"
  op: "Relu"
  input: "block3_conv2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block3_conv3/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv3/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "block3_conv3/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv3/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.03608439117670059
      }
    }
  }
}
node {
  name: "block3_conv3/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv3/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03608439117670059
      }
    }
  }
}
node {
  name: "block3_conv3/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "block3_conv3/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv3/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "block3_conv3/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "block3_conv3/kernel/Initializer/random_uniform/max"
  input: "block3_conv3/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv3/kernel"
      }
    }
  }
}
node {
  name: "block3_conv3/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "block3_conv3/kernel/Initializer/random_uniform/RandomUniform"
  input: "block3_conv3/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv3/kernel"
      }
    }
  }
}
node {
  name: "block3_conv3/kernel/Initializer/random_uniform"
  op: "Add"
  input: "block3_conv3/kernel/Initializer/random_uniform/mul"
  input: "block3_conv3/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv3/kernel"
      }
    }
  }
}
node {
  name: "block3_conv3/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv3/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block3_conv3/kernel"
    }
  }
}
node {
  name: "block3_conv3/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block3_conv3/kernel"
}
node {
  name: "block3_conv3/kernel/Assign"
  op: "AssignVariableOp"
  input: "block3_conv3/kernel"
  input: "block3_conv3/kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block3_conv3/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block3_conv3/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block3_conv3/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv3/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block3_conv3/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv3/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block3_conv3/bias"
    }
  }
}
node {
  name: "block3_conv3/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block3_conv3/bias"
}
node {
  name: "block3_conv3/bias/Assign"
  op: "AssignVariableOp"
  input: "block3_conv3/bias"
  input: "block3_conv3/bias/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block3_conv3/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block3_conv3/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block3_conv3/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block3_conv3/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block3_conv3/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block3_conv3/Conv2D"
  op: "Conv2D"
  input: "block3_conv2/Relu"
  input: "block3_conv3/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "block3_conv3/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block3_conv3/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block3_conv3/BiasAdd"
  op: "BiasAdd"
  input: "block3_conv3/Conv2D"
  input: "block3_conv3/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "block3_conv3/Relu"
  op: "Relu"
  input: "block3_conv3/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block3_pool/MaxPool"
  op: "MaxPool"
  input: "block3_conv3/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "block4_conv1/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "block4_conv1/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.02946278266608715
      }
    }
  }
}
node {
  name: "block4_conv1/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.02946278266608715
      }
    }
  }
}
node {
  name: "block4_conv1/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "block4_conv1/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "block4_conv1/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "block4_conv1/kernel/Initializer/random_uniform/max"
  input: "block4_conv1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv1/kernel"
      }
    }
  }
}
node {
  name: "block4_conv1/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "block4_conv1/kernel/Initializer/random_uniform/RandomUniform"
  input: "block4_conv1/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv1/kernel"
      }
    }
  }
}
node {
  name: "block4_conv1/kernel/Initializer/random_uniform"
  op: "Add"
  input: "block4_conv1/kernel/Initializer/random_uniform/mul"
  input: "block4_conv1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv1/kernel"
      }
    }
  }
}
node {
  name: "block4_conv1/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block4_conv1/kernel"
    }
  }
}
node {
  name: "block4_conv1/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block4_conv1/kernel"
}
node {
  name: "block4_conv1/kernel/Assign"
  op: "AssignVariableOp"
  input: "block4_conv1/kernel"
  input: "block4_conv1/kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block4_conv1/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block4_conv1/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block4_conv1/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block4_conv1/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv1/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block4_conv1/bias"
    }
  }
}
node {
  name: "block4_conv1/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block4_conv1/bias"
}
node {
  name: "block4_conv1/bias/Assign"
  op: "AssignVariableOp"
  input: "block4_conv1/bias"
  input: "block4_conv1/bias/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block4_conv1/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block4_conv1/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block4_conv1/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block4_conv1/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block4_conv1/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block4_conv1/Conv2D"
  op: "Conv2D"
  input: "block3_pool/MaxPool"
  input: "block4_conv1/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "block4_conv1/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block4_conv1/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block4_conv1/BiasAdd"
  op: "BiasAdd"
  input: "block4_conv1/Conv2D"
  input: "block4_conv1/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "block4_conv1/Relu"
  op: "Relu"
  input: "block4_conv1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block4_conv2/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "block4_conv2/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.025515519082546234
      }
    }
  }
}
node {
  name: "block4_conv2/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.025515519082546234
      }
    }
  }
}
node {
  name: "block4_conv2/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "block4_conv2/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "block4_conv2/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "block4_conv2/kernel/Initializer/random_uniform/max"
  input: "block4_conv2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv2/kernel"
      }
    }
  }
}
node {
  name: "block4_conv2/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "block4_conv2/kernel/Initializer/random_uniform/RandomUniform"
  input: "block4_conv2/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv2/kernel"
      }
    }
  }
}
node {
  name: "block4_conv2/kernel/Initializer/random_uniform"
  op: "Add"
  input: "block4_conv2/kernel/Initializer/random_uniform/mul"
  input: "block4_conv2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv2/kernel"
      }
    }
  }
}
node {
  name: "block4_conv2/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv2/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block4_conv2/kernel"
    }
  }
}
node {
  name: "block4_conv2/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block4_conv2/kernel"
}
node {
  name: "block4_conv2/kernel/Assign"
  op: "AssignVariableOp"
  input: "block4_conv2/kernel"
  input: "block4_conv2/kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block4_conv2/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block4_conv2/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block4_conv2/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block4_conv2/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv2/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block4_conv2/bias"
    }
  }
}
node {
  name: "block4_conv2/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block4_conv2/bias"
}
node {
  name: "block4_conv2/bias/Assign"
  op: "AssignVariableOp"
  input: "block4_conv2/bias"
  input: "block4_conv2/bias/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block4_conv2/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block4_conv2/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block4_conv2/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block4_conv2/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block4_conv2/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block4_conv2/Conv2D"
  op: "Conv2D"
  input: "block4_conv1/Relu"
  input: "block4_conv2/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "block4_conv2/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block4_conv2/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block4_conv2/BiasAdd"
  op: "BiasAdd"
  input: "block4_conv2/Conv2D"
  input: "block4_conv2/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "block4_conv2/Relu"
  op: "Relu"
  input: "block4_conv2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block4_conv3/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv3/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "block4_conv3/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv3/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.025515519082546234
      }
    }
  }
}
node {
  name: "block4_conv3/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv3/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.025515519082546234
      }
    }
  }
}
node {
  name: "block4_conv3/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "block4_conv3/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv3/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "block4_conv3/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "block4_conv3/kernel/Initializer/random_uniform/max"
  input: "block4_conv3/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv3/kernel"
      }
    }
  }
}
node {
  name: "block4_conv3/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "block4_conv3/kernel/Initializer/random_uniform/RandomUniform"
  input: "block4_conv3/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv3/kernel"
      }
    }
  }
}
node {
  name: "block4_conv3/kernel/Initializer/random_uniform"
  op: "Add"
  input: "block4_conv3/kernel/Initializer/random_uniform/mul"
  input: "block4_conv3/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv3/kernel"
      }
    }
  }
}
node {
  name: "block4_conv3/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv3/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block4_conv3/kernel"
    }
  }
}
node {
  name: "block4_conv3/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block4_conv3/kernel"
}
node {
  name: "block4_conv3/kernel/Assign"
  op: "AssignVariableOp"
  input: "block4_conv3/kernel"
  input: "block4_conv3/kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block4_conv3/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block4_conv3/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block4_conv3/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv3/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block4_conv3/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv3/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block4_conv3/bias"
    }
  }
}
node {
  name: "block4_conv3/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block4_conv3/bias"
}
node {
  name: "block4_conv3/bias/Assign"
  op: "AssignVariableOp"
  input: "block4_conv3/bias"
  input: "block4_conv3/bias/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block4_conv3/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block4_conv3/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block4_conv3/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block4_conv3/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block4_conv3/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block4_conv3/Conv2D"
  op: "Conv2D"
  input: "block4_conv2/Relu"
  input: "block4_conv3/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "block4_conv3/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block4_conv3/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block4_conv3/BiasAdd"
  op: "BiasAdd"
  input: "block4_conv3/Conv2D"
  input: "block4_conv3/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "block4_conv3/Relu"
  op: "Relu"
  input: "block4_conv3/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block4_pool/MaxPool"
  op: "MaxPool"
  input: "block4_conv3/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "block5_conv1/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "block5_conv1/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.025515519082546234
      }
    }
  }
}
node {
  name: "block5_conv1/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.025515519082546234
      }
    }
  }
}
node {
  name: "block5_conv1/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "block5_conv1/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "block5_conv1/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "block5_conv1/kernel/Initializer/random_uniform/max"
  input: "block5_conv1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv1/kernel"
      }
    }
  }
}
node {
  name: "block5_conv1/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "block5_conv1/kernel/Initializer/random_uniform/RandomUniform"
  input: "block5_conv1/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv1/kernel"
      }
    }
  }
}
node {
  name: "block5_conv1/kernel/Initializer/random_uniform"
  op: "Add"
  input: "block5_conv1/kernel/Initializer/random_uniform/mul"
  input: "block5_conv1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv1/kernel"
      }
    }
  }
}
node {
  name: "block5_conv1/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block5_conv1/kernel"
    }
  }
}
node {
  name: "block5_conv1/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block5_conv1/kernel"
}
node {
  name: "block5_conv1/kernel/Assign"
  op: "AssignVariableOp"
  input: "block5_conv1/kernel"
  input: "block5_conv1/kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block5_conv1/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block5_conv1/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block5_conv1/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block5_conv1/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv1/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block5_conv1/bias"
    }
  }
}
node {
  name: "block5_conv1/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block5_conv1/bias"
}
node {
  name: "block5_conv1/bias/Assign"
  op: "AssignVariableOp"
  input: "block5_conv1/bias"
  input: "block5_conv1/bias/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block5_conv1/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block5_conv1/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block5_conv1/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block5_conv1/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block5_conv1/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block5_conv1/Conv2D"
  op: "Conv2D"
  input: "block4_pool/MaxPool"
  input: "block5_conv1/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "block5_conv1/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block5_conv1/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block5_conv1/BiasAdd"
  op: "BiasAdd"
  input: "block5_conv1/Conv2D"
  input: "block5_conv1/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "block5_conv1/Relu"
  op: "Relu"
  input: "block5_conv1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block5_conv2/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "block5_conv2/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.025515519082546234
      }
    }
  }
}
node {
  name: "block5_conv2/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.025515519082546234
      }
    }
  }
}
node {
  name: "block5_conv2/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "block5_conv2/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "block5_conv2/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "block5_conv2/kernel/Initializer/random_uniform/max"
  input: "block5_conv2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv2/kernel"
      }
    }
  }
}
node {
  name: "block5_conv2/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "block5_conv2/kernel/Initializer/random_uniform/RandomUniform"
  input: "block5_conv2/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv2/kernel"
      }
    }
  }
}
node {
  name: "block5_conv2/kernel/Initializer/random_uniform"
  op: "Add"
  input: "block5_conv2/kernel/Initializer/random_uniform/mul"
  input: "block5_conv2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv2/kernel"
      }
    }
  }
}
node {
  name: "block5_conv2/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv2/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block5_conv2/kernel"
    }
  }
}
node {
  name: "block5_conv2/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block5_conv2/kernel"
}
node {
  name: "block5_conv2/kernel/Assign"
  op: "AssignVariableOp"
  input: "block5_conv2/kernel"
  input: "block5_conv2/kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block5_conv2/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block5_conv2/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block5_conv2/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block5_conv2/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv2/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block5_conv2/bias"
    }
  }
}
node {
  name: "block5_conv2/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block5_conv2/bias"
}
node {
  name: "block5_conv2/bias/Assign"
  op: "AssignVariableOp"
  input: "block5_conv2/bias"
  input: "block5_conv2/bias/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block5_conv2/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block5_conv2/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block5_conv2/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block5_conv2/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block5_conv2/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block5_conv2/Conv2D"
  op: "Conv2D"
  input: "block5_conv1/Relu"
  input: "block5_conv2/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "block5_conv2/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block5_conv2/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block5_conv2/BiasAdd"
  op: "BiasAdd"
  input: "block5_conv2/Conv2D"
  input: "block5_conv2/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "block5_conv2/Relu"
  op: "Relu"
  input: "block5_conv2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block5_conv3/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv3/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "block5_conv3/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv3/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.025515519082546234
      }
    }
  }
}
node {
  name: "block5_conv3/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv3/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.025515519082546234
      }
    }
  }
}
node {
  name: "block5_conv3/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "block5_conv3/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv3/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "block5_conv3/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "block5_conv3/kernel/Initializer/random_uniform/max"
  input: "block5_conv3/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv3/kernel"
      }
    }
  }
}
node {
  name: "block5_conv3/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "block5_conv3/kernel/Initializer/random_uniform/RandomUniform"
  input: "block5_conv3/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv3/kernel"
      }
    }
  }
}
node {
  name: "block5_conv3/kernel/Initializer/random_uniform"
  op: "Add"
  input: "block5_conv3/kernel/Initializer/random_uniform/mul"
  input: "block5_conv3/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv3/kernel"
      }
    }
  }
}
node {
  name: "block5_conv3/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv3/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block5_conv3/kernel"
    }
  }
}
node {
  name: "block5_conv3/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block5_conv3/kernel"
}
node {
  name: "block5_conv3/kernel/Assign"
  op: "AssignVariableOp"
  input: "block5_conv3/kernel"
  input: "block5_conv3/kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block5_conv3/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block5_conv3/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block5_conv3/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv3/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "block5_conv3/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv3/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "block5_conv3/bias"
    }
  }
}
node {
  name: "block5_conv3/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block5_conv3/bias"
}
node {
  name: "block5_conv3/bias/Assign"
  op: "AssignVariableOp"
  input: "block5_conv3/bias"
  input: "block5_conv3/bias/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block5_conv3/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block5_conv3/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block5_conv3/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "block5_conv3/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block5_conv3/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block5_conv3/Conv2D"
  op: "Conv2D"
  input: "block5_conv2/Relu"
  input: "block5_conv3/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "block5_conv3/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "block5_conv3/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block5_conv3/BiasAdd"
  op: "BiasAdd"
  input: "block5_conv3/Conv2D"
  input: "block5_conv3/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "block5_conv3/Relu"
  op: "Relu"
  input: "block5_conv3/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "block5_pool/MaxPool"
  op: "MaxPool"
  input: "block5_conv3/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "flatten/Shape"
  op: "Shape"
  input: "block5_pool/MaxPool"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "flatten/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "flatten/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "flatten/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "flatten/strided_slice"
  op: "StridedSlice"
  input: "flatten/Shape"
  input: "flatten/strided_slice/stack"
  input: "flatten/strided_slice/stack_1"
  input: "flatten/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "flatten/Reshape/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "flatten/Reshape/shape"
  op: "Pack"
  input: "flatten/strided_slice"
  input: "flatten/Reshape/shape/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "flatten/Reshape"
  op: "Reshape"
  input: "block5_pool/MaxPool"
  input: "flatten/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "fc1/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\000\020\000\000"
      }
    }
  }
}
node {
  name: "fc1/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.03608439117670059
      }
    }
  }
}
node {
  name: "fc1/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03608439117670059
      }
    }
  }
}
node {
  name: "fc1/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "fc1/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "fc1/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "fc1/kernel/Initializer/random_uniform/max"
  input: "fc1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc1/kernel"
      }
    }
  }
}
node {
  name: "fc1/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "fc1/kernel/Initializer/random_uniform/RandomUniform"
  input: "fc1/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc1/kernel"
      }
    }
  }
}
node {
  name: "fc1/kernel/Initializer/random_uniform"
  op: "Add"
  input: "fc1/kernel/Initializer/random_uniform/mul"
  input: "fc1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc1/kernel"
      }
    }
  }
}
node {
  name: "fc1/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 4096
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "fc1/kernel"
    }
  }
}
node {
  name: "fc1/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "fc1/kernel"
}
node {
  name: "fc1/kernel/Assign"
  op: "AssignVariableOp"
  input: "fc1/kernel"
  input: "fc1/kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fc1/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fc1/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fc1/bias/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4096
      }
    }
  }
}
node {
  name: "fc1/bias/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fc1/bias/Initializer/zeros"
  op: "Fill"
  input: "fc1/bias/Initializer/zeros/shape_as_tensor"
  input: "fc1/bias/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc1/bias"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "fc1/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc1/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4096
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "fc1/bias"
    }
  }
}
node {
  name: "fc1/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "fc1/bias"
}
node {
  name: "fc1/bias/Assign"
  op: "AssignVariableOp"
  input: "fc1/bias"
  input: "fc1/bias/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fc1/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fc1/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fc1/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fc1/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fc1/MatMul"
  op: "MatMul"
  input: "flatten/Reshape"
  input: "fc1/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "fc1/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fc1/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fc1/BiasAdd"
  op: "BiasAdd"
  input: "fc1/MatMul"
  input: "fc1/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "fc1/Relu"
  op: "Relu"
  input: "fc1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fc2/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\020\000\000\000\020\000\000"
      }
    }
  }
}
node {
  name: "fc2/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.027063293382525444
      }
    }
  }
}
node {
  name: "fc2/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.027063293382525444
      }
    }
  }
}
node {
  name: "fc2/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "fc2/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "fc2/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "fc2/kernel/Initializer/random_uniform/max"
  input: "fc2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2/kernel"
      }
    }
  }
}
node {
  name: "fc2/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "fc2/kernel/Initializer/random_uniform/RandomUniform"
  input: "fc2/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2/kernel"
      }
    }
  }
}
node {
  name: "fc2/kernel/Initializer/random_uniform"
  op: "Add"
  input: "fc2/kernel/Initializer/random_uniform/mul"
  input: "fc2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2/kernel"
      }
    }
  }
}
node {
  name: "fc2/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4096
        }
        dim {
          size: 4096
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "fc2/kernel"
    }
  }
}
node {
  name: "fc2/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "fc2/kernel"
}
node {
  name: "fc2/kernel/Assign"
  op: "AssignVariableOp"
  input: "fc2/kernel"
  input: "fc2/kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fc2/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fc2/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fc2/bias/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4096
      }
    }
  }
}
node {
  name: "fc2/bias/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fc2/bias/Initializer/zeros"
  op: "Fill"
  input: "fc2/bias/Initializer/zeros/shape_as_tensor"
  input: "fc2/bias/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2/bias"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "fc2/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4096
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "fc2/bias"
    }
  }
}
node {
  name: "fc2/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "fc2/bias"
}
node {
  name: "fc2/bias/Assign"
  op: "AssignVariableOp"
  input: "fc2/bias"
  input: "fc2/bias/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fc2/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fc2/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fc2/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fc2/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fc2/MatMul"
  op: "MatMul"
  input: "fc1/Relu"
  input: "fc2/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "fc2/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fc2/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fc2/BiasAdd"
  op: "BiasAdd"
  input: "fc2/MatMul"
  input: "fc2/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "fc2/Relu"
  op: "Relu"
  input: "fc2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "predictions/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@predictions/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\020\000\000\n\000\000\000"
      }
    }
  }
}
node {
  name: "predictions/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@predictions/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.038226641714572906
      }
    }
  }
}
node {
  name: "predictions/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@predictions/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.038226641714572906
      }
    }
  }
}
node {
  name: "predictions/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "predictions/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@predictions/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "predictions/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "predictions/kernel/Initializer/random_uniform/max"
  input: "predictions/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@predictions/kernel"
      }
    }
  }
}
node {
  name: "predictions/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "predictions/kernel/Initializer/random_uniform/RandomUniform"
  input: "predictions/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@predictions/kernel"
      }
    }
  }
}
node {
  name: "predictions/kernel/Initializer/random_uniform"
  op: "Add"
  input: "predictions/kernel/Initializer/random_uniform/mul"
  input: "predictions/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@predictions/kernel"
      }
    }
  }
}
node {
  name: "predictions/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@predictions/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4096
        }
        dim {
          size: 10
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "predictions/kernel"
    }
  }
}
node {
  name: "predictions/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "predictions/kernel"
}
node {
  name: "predictions/kernel/Assign"
  op: "AssignVariableOp"
  input: "predictions/kernel"
  input: "predictions/kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "predictions/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "predictions/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "predictions/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@predictions/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 10
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "predictions/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@predictions/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 10
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "predictions/bias"
    }
  }
}
node {
  name: "predictions/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "predictions/bias"
}
node {
  name: "predictions/bias/Assign"
  op: "AssignVariableOp"
  input: "predictions/bias"
  input: "predictions/bias/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "predictions/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "predictions/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "predictions/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "predictions/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "predictions/MatMul"
  op: "MatMul"
  input: "fc2/Relu"
  input: "predictions/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "predictions/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "predictions/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "predictions/BiasAdd"
  op: "BiasAdd"
  input: "predictions/MatMul"
  input: "predictions/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "predictions/Softmax"
  op: "Softmax"
  input: "predictions/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "predictions_target"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "total/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@total"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "total"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@total"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "total"
    }
  }
}
node {
  name: "total/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "total"
}
node {
  name: "total/Assign"
  op: "AssignVariableOp"
  input: "total"
  input: "total/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "total/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "total"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "count/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@count"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "count"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@count"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "count"
    }
  }
}
node {
  name: "count/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "count"
}
node {
  name: "count/Assign"
  op: "AssignVariableOp"
  input: "count"
  input: "count/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "count/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "count"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics/acc/ArgMax/dimension"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "metrics/acc/ArgMax"
  op: "ArgMax"
  input: "predictions_target"
  input: "metrics/acc/ArgMax/dimension"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "output_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "metrics/acc/ArgMax_1/dimension"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "metrics/acc/ArgMax_1"
  op: "ArgMax"
  input: "predictions/Softmax"
  input: "metrics/acc/ArgMax_1/dimension"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "output_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "metrics/acc/Equal"
  op: "Equal"
  input: "metrics/acc/ArgMax"
  input: "metrics/acc/ArgMax_1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "incompatible_shape_error"
    value {
      b: true
    }
  }
}
node {
  name: "metrics/acc/Cast"
  op: "Cast"
  input: "metrics/acc/Equal"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "metrics/acc/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "metrics/acc/Sum"
  op: "Sum"
  input: "metrics/acc/Cast"
  input: "metrics/acc/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "metrics/acc/AssignAddVariableOp"
  op: "AssignAddVariableOp"
  input: "total"
  input: "metrics/acc/Sum"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics/acc/ReadVariableOp"
  op: "ReadVariableOp"
  input: "total"
  input: "^metrics/acc/AssignAddVariableOp"
  input: "^metrics/acc/Sum"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics/acc/Size"
  op: "Size"
  input: "metrics/acc/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "metrics/acc/Cast_1"
  op: "Cast"
  input: "metrics/acc/Size"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "metrics/acc/AssignAddVariableOp_1"
  op: "AssignAddVariableOp"
  input: "count"
  input: "metrics/acc/Cast_1"
  input: "^metrics/acc/AssignAddVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics/acc/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "count"
  input: "^metrics/acc/AssignAddVariableOp"
  input: "^metrics/acc/AssignAddVariableOp_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics/acc/div_no_nan/ReadVariableOp"
  op: "ReadVariableOp"
  input: "total"
  input: "^metrics/acc/AssignAddVariableOp_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics/acc/div_no_nan/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "count"
  input: "^metrics/acc/AssignAddVariableOp_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics/acc/div_no_nan"
  op: "DivNoNan"
  input: "metrics/acc/div_no_nan/ReadVariableOp"
  input: "metrics/acc/div_no_nan/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics/acc/Identity"
  op: "Identity"
  input: "metrics/acc/div_no_nan"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/predictions_loss/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "loss/predictions_loss/softmax_cross_entropy_with_logits/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "loss/predictions_loss/softmax_cross_entropy_with_logits/Shape"
  op: "Shape"
  input: "predictions/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/predictions_loss/softmax_cross_entropy_with_logits/Rank_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "loss/predictions_loss/softmax_cross_entropy_with_logits/Shape_1"
  op: "Shape"
  input: "predictions/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/predictions_loss/softmax_cross_entropy_with_logits/Sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "loss/predictions_loss/softmax_cross_entropy_with_logits/Sub"
  op: "Sub"
  input: "loss/predictions_loss/softmax_cross_entropy_with_logits/Rank_1"
  input: "loss/predictions_loss/softmax_cross_entropy_with_logits/Sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/predictions_loss/softmax_cross_entropy_with_logits/Slice/begin"
  op: "Pack"
  input: "loss/predictions_loss/softmax_cross_entropy_with_logits/Sub"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "loss/predictions_loss/softmax_cross_entropy_with_logits/Slice/size"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "loss/predictions_loss/softmax_cross_entropy_with_logits/Slice"
  op: "Slice"
  input: "loss/predictions_loss/softmax_cross_entropy_with_logits/Shape_1"
  input: "loss/predictions_loss/softmax_cross_entropy_with_logits/Slice/begin"
  input: "loss/predictions_loss/softmax_cross_entropy_with_logits/Slice/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/predictions_loss/softmax_cross_entropy_with_logits/concat/values_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "loss/predictions_loss/softmax_cross_entropy_with_logits/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "loss/predictions_loss/softmax_cross_entropy_with_logits/concat"
  op: "ConcatV2"
  input: "loss/predictions_loss/softmax_cross_entropy_with_logits/concat/values_0"
  input: "loss/predictions_loss/softmax_cross_entropy_with_logits/Slice"
  input: "loss/predictions_loss/softmax_cross_entropy_with_logits/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/predictions_loss/softmax_cross_entropy_with_logits/Reshape"
  op: "Reshape"
  input: "predictions/BiasAdd"
  input: "loss/predictions_loss/softmax_cross_entropy_with_logits/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/predictions_loss/softmax_cross_entropy_with_logits/Rank_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "loss/predictions_loss/softmax_cross_entropy_with_logits/Shape_2"
  op: "Shape"
  input: "predictions_target"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/predictions_loss/softmax_cross_entropy_with_logits/Sub_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "loss/predictions_loss/softmax_cross_entropy_with_logits/Sub_1"
  op: "Sub"
  input: "loss/predictions_loss/softmax_cross_entropy_with_logits/Rank_2"
  input: "loss/predictions_loss/softmax_cross_entropy_with_logits/Sub_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/predictions_loss/softmax_cross_entropy_with_logits/Slice_1/begin"
  op: "Pack"
  input: "loss/predictions_loss/softmax_cross_entropy_with_logits/Sub_1"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "loss/predictions_loss/softmax_cross_entropy_with_logits/Slice_1/size"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "loss/predictions_loss/softmax_cross_entropy_with_logits/Slice_1"
  op: "Slice"
  input: "loss/predictions_loss/softmax_cross_entropy_with_logits/Shape_2"
  input: "loss/predictions_loss/softmax_cross_entropy_with_logits/Slice_1/begin"
  input: "loss/predictions_loss/softmax_cross_entropy_with_logits/Slice_1/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/predictions_loss/softmax_cross_entropy_with_logits/concat_1/values_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "loss/predictions_loss/softmax_cross_entropy_with_logits/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "loss/predictions_loss/softmax_cross_entropy_with_logits/concat_1"
  op: "ConcatV2"
  input: "loss/predictions_loss/softmax_cross_entropy_with_logits/concat_1/values_0"
  input: "loss/predictions_loss/softmax_cross_entropy_with_logits/Slice_1"
  input: "loss/predictions_loss/softmax_cross_entropy_with_logits/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/predictions_loss/softmax_cross_entropy_with_logits/Reshape_1"
  op: "Reshape"
  input: "predictions_target"
  input: "loss/predictions_loss/softmax_cross_entropy_with_logits/concat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/predictions_loss/softmax_cross_entropy_with_logits"
  op: "SoftmaxCrossEntropyWithLogits"
  input: "loss/predictions_loss/softmax_cross_entropy_with_logits/Reshape"
  input: "loss/predictions_loss/softmax_cross_entropy_with_logits/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/predictions_loss/softmax_cross_entropy_with_logits/Sub_2/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "loss/predictions_loss/softmax_cross_entropy_with_logits/Sub_2"
  op: "Sub"
  input: "loss/predictions_loss/softmax_cross_entropy_with_logits/Rank"
  input: "loss/predictions_loss/softmax_cross_entropy_with_logits/Sub_2/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/predictions_loss/softmax_cross_entropy_with_logits/Slice_2/begin"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "loss/predictions_loss/softmax_cross_entropy_with_logits/Slice_2/size"
  op: "Pack"
  input: "loss/predictions_loss/softmax_cross_entropy_with_logits/Sub_2"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "loss/predictions_loss/softmax_cross_entropy_with_logits/Slice_2"
  op: "Slice"
  input: "loss/predictions_loss/softmax_cross_entropy_with_logits/Shape"
  input: "loss/predictions_loss/softmax_cross_entropy_with_logits/Slice_2/begin"
  input: "loss/predictions_loss/softmax_cross_entropy_with_logits/Slice_2/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/predictions_loss/softmax_cross_entropy_with_logits/Reshape_2"
  op: "Reshape"
  input: "loss/predictions_loss/softmax_cross_entropy_with_logits"
  input: "loss/predictions_loss/softmax_cross_entropy_with_logits/Slice_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/predictions_loss/weighted_loss/Cast/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "loss/predictions_loss/weighted_loss/broadcast_weights/assert_broadcastable/weights/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "loss/predictions_loss/weighted_loss/broadcast_weights/assert_broadcastable/weights/rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "loss/predictions_loss/weighted_loss/broadcast_weights/assert_broadcastable/values/shape"
  op: "Shape"
  input: "loss/predictions_loss/softmax_cross_entropy_with_logits/Reshape_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/predictions_loss/weighted_loss/broadcast_weights/assert_broadcastable/values/rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "loss/predictions_loss/weighted_loss/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  op: "NoOp"
}
node {
  name: "loss/predictions_loss/weighted_loss/broadcast_weights/ones_like/Shape"
  op: "Shape"
  input: "loss/predictions_loss/softmax_cross_entropy_with_logits/Reshape_2"
  input: "^loss/predictions_loss/weighted_loss/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/predictions_loss/weighted_loss/broadcast_weights/ones_like/Const"
  op: "Const"
  input: "^loss/predictions_loss/weighted_loss/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "loss/predictions_loss/weighted_loss/broadcast_weights/ones_like"
  op: "Fill"
  input: "loss/predictions_loss/weighted_loss/broadcast_weights/ones_like/Shape"
  input: "loss/predictions_loss/weighted_loss/broadcast_weights/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/predictions_loss/weighted_loss/broadcast_weights"
  op: "Mul"
  input: "loss/predictions_loss/weighted_loss/Cast/x"
  input: "loss/predictions_loss/weighted_loss/broadcast_weights/ones_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/predictions_loss/weighted_loss/Mul"
  op: "Mul"
  input: "loss/predictions_loss/softmax_cross_entropy_with_logits/Reshape_2"
  input: "loss/predictions_loss/weighted_loss/broadcast_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/predictions_loss/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "loss/predictions_loss/Sum"
  op: "Sum"
  input: "loss/predictions_loss/weighted_loss/Mul"
  input: "loss/predictions_loss/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/predictions_loss/num_elements"
  op: "Size"
  input: "loss/predictions_loss/weighted_loss/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/predictions_loss/num_elements/Cast"
  op: "Cast"
  input: "loss/predictions_loss/num_elements"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "loss/predictions_loss/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "loss/predictions_loss/Sum_1"
  op: "Sum"
  input: "loss/predictions_loss/Sum"
  input: "loss/predictions_loss/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/predictions_loss/value"
  op: "DivNoNan"
  input: "loss/predictions_loss/Sum_1"
  input: "loss/predictions_loss/num_elements/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "loss/mul"
  op: "Mul"
  input: "loss/mul/x"
  input: "loss/predictions_loss/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "AssignVariableOp"
  op: "AssignVariableOp"
  input: "total"
  input: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp"
  op: "ReadVariableOp"
  input: "total"
  input: "^AssignVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_1"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "AssignVariableOp_1"
  op: "AssignVariableOp"
  input: "count"
  input: "Placeholder_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "count"
  input: "^AssignVariableOp_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "block1_conv1/kernel"
}
node {
  name: "VarIsInitializedOp_1"
  op: "VarIsInitializedOp"
  input: "fc1/bias"
}
node {
  name: "VarIsInitializedOp_2"
  op: "VarIsInitializedOp"
  input: "block3_conv2/bias"
}
node {
  name: "VarIsInitializedOp_3"
  op: "VarIsInitializedOp"
  input: "block4_conv3/kernel"
}
node {
  name: "VarIsInitializedOp_4"
  op: "VarIsInitializedOp"
  input: "block1_conv2/bias"
}
node {
  name: "VarIsInitializedOp_5"
  op: "VarIsInitializedOp"
  input: "block4_conv1/kernel"
}
node {
  name: "VarIsInitializedOp_6"
  op: "VarIsInitializedOp"
  input: "block3_conv3/bias"
}
node {
  name: "VarIsInitializedOp_7"
  op: "VarIsInitializedOp"
  input: "predictions/kernel"
}
node {
  name: "VarIsInitializedOp_8"
  op: "VarIsInitializedOp"
  input: "block2_conv1/kernel"
}
node {
  name: "VarIsInitializedOp_9"
  op: "VarIsInitializedOp"
  input: "block3_conv2/kernel"
}
node {
  name: "VarIsInitializedOp_10"
  op: "VarIsInitializedOp"
  input: "block3_conv3/kernel"
}
node {
  name: "VarIsInitializedOp_11"
  op: "VarIsInitializedOp"
  input: "block4_conv2/kernel"
}
node {
  name: "VarIsInitializedOp_12"
  op: "VarIsInitializedOp"
  input: "block5_conv1/kernel"
}
node {
  name: "VarIsInitializedOp_13"
  op: "VarIsInitializedOp"
  input: "block4_conv1/bias"
}
node {
  name: "VarIsInitializedOp_14"
  op: "VarIsInitializedOp"
  input: "block4_conv3/bias"
}
node {
  name: "VarIsInitializedOp_15"
  op: "VarIsInitializedOp"
  input: "fc2/bias"
}
node {
  name: "VarIsInitializedOp_16"
  op: "VarIsInitializedOp"
  input: "block2_conv2/bias"
}
node {
  name: "VarIsInitializedOp_17"
  op: "VarIsInitializedOp"
  input: "block5_conv3/kernel"
}
node {
  name: "VarIsInitializedOp_18"
  op: "VarIsInitializedOp"
  input: "predictions/bias"
}
node {
  name: "VarIsInitializedOp_19"
  op: "VarIsInitializedOp"
  input: "block4_conv2/bias"
}
node {
  name: "VarIsInitializedOp_20"
  op: "VarIsInitializedOp"
  input: "block5_conv2/bias"
}
node {
  name: "VarIsInitializedOp_21"
  op: "VarIsInitializedOp"
  input: "fc1/kernel"
}
node {
  name: "VarIsInitializedOp_22"
  op: "VarIsInitializedOp"
  input: "count"
}
node {
  name: "VarIsInitializedOp_23"
  op: "VarIsInitializedOp"
  input: "block1_conv1/bias"
}
node {
  name: "VarIsInitializedOp_24"
  op: "VarIsInitializedOp"
  input: "block5_conv1/bias"
}
node {
  name: "VarIsInitializedOp_25"
  op: "VarIsInitializedOp"
  input: "total"
}
node {
  name: "VarIsInitializedOp_26"
  op: "VarIsInitializedOp"
  input: "block3_conv1/kernel"
}
node {
  name: "VarIsInitializedOp_27"
  op: "VarIsInitializedOp"
  input: "block3_conv1/bias"
}
node {
  name: "VarIsInitializedOp_28"
  op: "VarIsInitializedOp"
  input: "block2_conv2/kernel"
}
node {
  name: "VarIsInitializedOp_29"
  op: "VarIsInitializedOp"
  input: "fc2/kernel"
}
node {
  name: "VarIsInitializedOp_30"
  op: "VarIsInitializedOp"
  input: "block1_conv2/kernel"
}
node {
  name: "VarIsInitializedOp_31"
  op: "VarIsInitializedOp"
  input: "block5_conv2/kernel"
}
node {
  name: "VarIsInitializedOp_32"
  op: "VarIsInitializedOp"
  input: "block5_conv3/bias"
}
node {
  name: "VarIsInitializedOp_33"
  op: "VarIsInitializedOp"
  input: "block2_conv1/bias"
}
node {
  name: "init"
  op: "NoOp"
  input: "^block1_conv1/bias/Assign"
  input: "^block1_conv1/kernel/Assign"
  input: "^block1_conv2/bias/Assign"
  input: "^block1_conv2/kernel/Assign"
  input: "^block2_conv1/bias/Assign"
  input: "^block2_conv1/kernel/Assign"
  input: "^block2_conv2/bias/Assign"
  input: "^block2_conv2/kernel/Assign"
  input: "^block3_conv1/bias/Assign"
  input: "^block3_conv1/kernel/Assign"
  input: "^block3_conv2/bias/Assign"
  input: "^block3_conv2/kernel/Assign"
  input: "^block3_conv3/bias/Assign"
  input: "^block3_conv3/kernel/Assign"
  input: "^block4_conv1/bias/Assign"
  input: "^block4_conv1/kernel/Assign"
  input: "^block4_conv2/bias/Assign"
  input: "^block4_conv2/kernel/Assign"
  input: "^block4_conv3/bias/Assign"
  input: "^block4_conv3/kernel/Assign"
  input: "^block5_conv1/bias/Assign"
  input: "^block5_conv1/kernel/Assign"
  input: "^block5_conv2/bias/Assign"
  input: "^block5_conv2/kernel/Assign"
  input: "^block5_conv3/bias/Assign"
  input: "^block5_conv3/kernel/Assign"
  input: "^count/Assign"
  input: "^fc1/bias/Assign"
  input: "^fc1/kernel/Assign"
  input: "^fc2/bias/Assign"
  input: "^fc2/kernel/Assign"
  input: "^predictions/bias/Assign"
  input: "^predictions/kernel/Assign"
  input: "^total/Assign"
}
node {
  name: "keras_learning_phase/input"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: false
      }
    }
  }
}
node {
  name: "keras_learning_phase"
  op: "PlaceholderWithDefault"
  input: "keras_learning_phase/input"
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/grad_ys_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/Fill"
  op: "Fill"
  input: "training/RMSprop/gradients/gradients/Shape"
  input: "training/RMSprop/gradients/gradients/grad_ys_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/mul_grad/Mul"
  op: "Mul"
  input: "training/RMSprop/gradients/gradients/Fill"
  input: "loss/predictions_loss/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/mul_grad/Mul_1"
  op: "Mul"
  input: "training/RMSprop/gradients/gradients/Fill"
  input: "loss/mul/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/predictions_loss/value_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/predictions_loss/value_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/predictions_loss/value_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/RMSprop/gradients/gradients/loss/predictions_loss/value_grad/Shape"
  input: "training/RMSprop/gradients/gradients/loss/predictions_loss/value_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/predictions_loss/value_grad/div_no_nan"
  op: "DivNoNan"
  input: "training/RMSprop/gradients/gradients/loss/mul_grad/Mul_1"
  input: "loss/predictions_loss/num_elements/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/predictions_loss/value_grad/Sum"
  op: "Sum"
  input: "training/RMSprop/gradients/gradients/loss/predictions_loss/value_grad/div_no_nan"
  input: "training/RMSprop/gradients/gradients/loss/predictions_loss/value_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/predictions_loss/value_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/gradients/loss/predictions_loss/value_grad/Sum"
  input: "training/RMSprop/gradients/gradients/loss/predictions_loss/value_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/predictions_loss/value_grad/Neg"
  op: "Neg"
  input: "loss/predictions_loss/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/predictions_loss/value_grad/div_no_nan_1"
  op: "DivNoNan"
  input: "training/RMSprop/gradients/gradients/loss/predictions_loss/value_grad/Neg"
  input: "loss/predictions_loss/num_elements/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/predictions_loss/value_grad/div_no_nan_2"
  op: "DivNoNan"
  input: "training/RMSprop/gradients/gradients/loss/predictions_loss/value_grad/div_no_nan_1"
  input: "loss/predictions_loss/num_elements/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/predictions_loss/value_grad/mul"
  op: "Mul"
  input: "training/RMSprop/gradients/gradients/loss/mul_grad/Mul_1"
  input: "training/RMSprop/gradients/gradients/loss/predictions_loss/value_grad/div_no_nan_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/predictions_loss/value_grad/Sum_1"
  op: "Sum"
  input: "training/RMSprop/gradients/gradients/loss/predictions_loss/value_grad/mul"
  input: "training/RMSprop/gradients/gradients/loss/predictions_loss/value_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/predictions_loss/value_grad/Reshape_1"
  op: "Reshape"
  input: "training/RMSprop/gradients/gradients/loss/predictions_loss/value_grad/Sum_1"
  input: "training/RMSprop/gradients/gradients/loss/predictions_loss/value_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/predictions_loss/Sum_1_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/predictions_loss/Sum_1_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/gradients/loss/predictions_loss/value_grad/Reshape"
  input: "training/RMSprop/gradients/gradients/loss/predictions_loss/Sum_1_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/predictions_loss/Sum_1_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/predictions_loss/Sum_1_grad/Tile"
  op: "Tile"
  input: "training/RMSprop/gradients/gradients/loss/predictions_loss/Sum_1_grad/Reshape"
  input: "training/RMSprop/gradients/gradients/loss/predictions_loss/Sum_1_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/predictions_loss/Sum_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/predictions_loss/Sum_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/gradients/loss/predictions_loss/Sum_1_grad/Tile"
  input: "training/RMSprop/gradients/gradients/loss/predictions_loss/Sum_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/predictions_loss/Sum_grad/Shape"
  op: "Shape"
  input: "loss/predictions_loss/weighted_loss/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/predictions_loss/Sum_grad/Tile"
  op: "Tile"
  input: "training/RMSprop/gradients/gradients/loss/predictions_loss/Sum_grad/Reshape"
  input: "training/RMSprop/gradients/gradients/loss/predictions_loss/Sum_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/predictions_loss/weighted_loss/Mul_grad/Shape"
  op: "Shape"
  input: "loss/predictions_loss/softmax_cross_entropy_with_logits/Reshape_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/predictions_loss/weighted_loss/Mul_grad/Shape_1"
  op: "Shape"
  input: "loss/predictions_loss/weighted_loss/broadcast_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/predictions_loss/weighted_loss/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/RMSprop/gradients/gradients/loss/predictions_loss/weighted_loss/Mul_grad/Shape"
  input: "training/RMSprop/gradients/gradients/loss/predictions_loss/weighted_loss/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/predictions_loss/weighted_loss/Mul_grad/Mul"
  op: "Mul"
  input: "training/RMSprop/gradients/gradients/loss/predictions_loss/Sum_grad/Tile"
  input: "loss/predictions_loss/weighted_loss/broadcast_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/predictions_loss/weighted_loss/Mul_grad/Sum"
  op: "Sum"
  input: "training/RMSprop/gradients/gradients/loss/predictions_loss/weighted_loss/Mul_grad/Mul"
  input: "training/RMSprop/gradients/gradients/loss/predictions_loss/weighted_loss/Mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/predictions_loss/weighted_loss/Mul_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/gradients/loss/predictions_loss/weighted_loss/Mul_grad/Sum"
  input: "training/RMSprop/gradients/gradients/loss/predictions_loss/weighted_loss/Mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/predictions_loss/weighted_loss/Mul_grad/Mul_1"
  op: "Mul"
  input: "loss/predictions_loss/softmax_cross_entropy_with_logits/Reshape_2"
  input: "training/RMSprop/gradients/gradients/loss/predictions_loss/Sum_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/predictions_loss/weighted_loss/Mul_grad/Sum_1"
  op: "Sum"
  input: "training/RMSprop/gradients/gradients/loss/predictions_loss/weighted_loss/Mul_grad/Mul_1"
  input: "training/RMSprop/gradients/gradients/loss/predictions_loss/weighted_loss/Mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/predictions_loss/weighted_loss/Mul_grad/Reshape_1"
  op: "Reshape"
  input: "training/RMSprop/gradients/gradients/loss/predictions_loss/weighted_loss/Mul_grad/Sum_1"
  input: "training/RMSprop/gradients/gradients/loss/predictions_loss/weighted_loss/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/predictions_loss/softmax_cross_entropy_with_logits/Reshape_2_grad/Shape"
  op: "Shape"
  input: "loss/predictions_loss/softmax_cross_entropy_with_logits"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/predictions_loss/softmax_cross_entropy_with_logits/Reshape_2_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/gradients/loss/predictions_loss/weighted_loss/Mul_grad/Reshape"
  input: "training/RMSprop/gradients/gradients/loss/predictions_loss/softmax_cross_entropy_with_logits/Reshape_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/zeros_like"
  op: "ZerosLike"
  input: "loss/predictions_loss/softmax_cross_entropy_with_logits:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/predictions_loss/softmax_cross_entropy_with_logits_grad/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/predictions_loss/softmax_cross_entropy_with_logits_grad/ExpandDims"
  op: "ExpandDims"
  input: "training/RMSprop/gradients/gradients/loss/predictions_loss/softmax_cross_entropy_with_logits/Reshape_2_grad/Reshape"
  input: "training/RMSprop/gradients/gradients/loss/predictions_loss/softmax_cross_entropy_with_logits_grad/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/predictions_loss/softmax_cross_entropy_with_logits_grad/mul"
  op: "Mul"
  input: "training/RMSprop/gradients/gradients/loss/predictions_loss/softmax_cross_entropy_with_logits_grad/ExpandDims"
  input: "loss/predictions_loss/softmax_cross_entropy_with_logits:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/predictions_loss/softmax_cross_entropy_with_logits_grad/LogSoftmax"
  op: "LogSoftmax"
  input: "loss/predictions_loss/softmax_cross_entropy_with_logits/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/predictions_loss/softmax_cross_entropy_with_logits_grad/Neg"
  op: "Neg"
  input: "training/RMSprop/gradients/gradients/loss/predictions_loss/softmax_cross_entropy_with_logits_grad/LogSoftmax"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/predictions_loss/softmax_cross_entropy_with_logits_grad/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/predictions_loss/softmax_cross_entropy_with_logits_grad/ExpandDims_1"
  op: "ExpandDims"
  input: "training/RMSprop/gradients/gradients/loss/predictions_loss/softmax_cross_entropy_with_logits/Reshape_2_grad/Reshape"
  input: "training/RMSprop/gradients/gradients/loss/predictions_loss/softmax_cross_entropy_with_logits_grad/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/predictions_loss/softmax_cross_entropy_with_logits_grad/mul_1"
  op: "Mul"
  input: "training/RMSprop/gradients/gradients/loss/predictions_loss/softmax_cross_entropy_with_logits_grad/ExpandDims_1"
  input: "training/RMSprop/gradients/gradients/loss/predictions_loss/softmax_cross_entropy_with_logits_grad/Neg"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/predictions_loss/softmax_cross_entropy_with_logits/Reshape_grad/Shape"
  op: "Shape"
  input: "predictions/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/loss/predictions_loss/softmax_cross_entropy_with_logits/Reshape_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/gradients/loss/predictions_loss/softmax_cross_entropy_with_logits_grad/mul"
  input: "training/RMSprop/gradients/gradients/loss/predictions_loss/softmax_cross_entropy_with_logits/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/predictions/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "training/RMSprop/gradients/gradients/loss/predictions_loss/softmax_cross_entropy_with_logits/Reshape_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/predictions/MatMul_grad/MatMul"
  op: "MatMul"
  input: "training/RMSprop/gradients/gradients/loss/predictions_loss/softmax_cross_entropy_with_logits/Reshape_grad/Reshape"
  input: "predictions/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/predictions/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "fc2/Relu"
  input: "training/RMSprop/gradients/gradients/loss/predictions_loss/softmax_cross_entropy_with_logits/Reshape_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/fc2/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "training/RMSprop/gradients/gradients/predictions/MatMul_grad/MatMul"
  input: "fc2/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/fc2/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "training/RMSprop/gradients/gradients/fc2/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/fc2/MatMul_grad/MatMul"
  op: "MatMul"
  input: "training/RMSprop/gradients/gradients/fc2/Relu_grad/ReluGrad"
  input: "fc2/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/fc2/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "fc1/Relu"
  input: "training/RMSprop/gradients/gradients/fc2/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/fc1/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "training/RMSprop/gradients/gradients/fc2/MatMul_grad/MatMul"
  input: "fc1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/fc1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "training/RMSprop/gradients/gradients/fc1/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/fc1/MatMul_grad/MatMul"
  op: "MatMul"
  input: "training/RMSprop/gradients/gradients/fc1/Relu_grad/ReluGrad"
  input: "fc1/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/fc1/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "flatten/Reshape"
  input: "training/RMSprop/gradients/gradients/fc1/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/flatten/Reshape_grad/Shape"
  op: "Shape"
  input: "block5_pool/MaxPool"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/flatten/Reshape_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/gradients/fc1/MatMul_grad/MatMul"
  input: "training/RMSprop/gradients/gradients/flatten/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/block5_pool/MaxPool_grad/MaxPoolGrad"
  op: "MaxPoolGrad"
  input: "block5_conv3/Relu"
  input: "block5_pool/MaxPool"
  input: "training/RMSprop/gradients/gradients/flatten/Reshape_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/block5_conv3/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "training/RMSprop/gradients/gradients/block5_pool/MaxPool_grad/MaxPoolGrad"
  input: "block5_conv3/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/block5_conv3/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "training/RMSprop/gradients/gradients/block5_conv3/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/block5_conv3/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "block5_conv2/Relu"
  input: "block5_conv3/Conv2D/ReadVariableOp"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/block5_conv3/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "training/RMSprop/gradients/gradients/block5_conv3/Conv2D_grad/ShapeN"
  input: "block5_conv3/Conv2D/ReadVariableOp"
  input: "training/RMSprop/gradients/gradients/block5_conv3/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/block5_conv3/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "block5_conv2/Relu"
  input: "training/RMSprop/gradients/gradients/block5_conv3/Conv2D_grad/ShapeN:1"
  input: "training/RMSprop/gradients/gradients/block5_conv3/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/block5_conv2/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "training/RMSprop/gradients/gradients/block5_conv3/Conv2D_grad/Conv2DBackpropInput"
  input: "block5_conv2/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/block5_conv2/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "training/RMSprop/gradients/gradients/block5_conv2/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/block5_conv2/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "block5_conv1/Relu"
  input: "block5_conv2/Conv2D/ReadVariableOp"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/block5_conv2/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "training/RMSprop/gradients/gradients/block5_conv2/Conv2D_grad/ShapeN"
  input: "block5_conv2/Conv2D/ReadVariableOp"
  input: "training/RMSprop/gradients/gradients/block5_conv2/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/block5_conv2/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "block5_conv1/Relu"
  input: "training/RMSprop/gradients/gradients/block5_conv2/Conv2D_grad/ShapeN:1"
  input: "training/RMSprop/gradients/gradients/block5_conv2/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/block5_conv1/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "training/RMSprop/gradients/gradients/block5_conv2/Conv2D_grad/Conv2DBackpropInput"
  input: "block5_conv1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/block5_conv1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "training/RMSprop/gradients/gradients/block5_conv1/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/block5_conv1/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "block4_pool/MaxPool"
  input: "block5_conv1/Conv2D/ReadVariableOp"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/block5_conv1/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "training/RMSprop/gradients/gradients/block5_conv1/Conv2D_grad/ShapeN"
  input: "block5_conv1/Conv2D/ReadVariableOp"
  input: "training/RMSprop/gradients/gradients/block5_conv1/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/block5_conv1/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "block4_pool/MaxPool"
  input: "training/RMSprop/gradients/gradients/block5_conv1/Conv2D_grad/ShapeN:1"
  input: "training/RMSprop/gradients/gradients/block5_conv1/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/block4_pool/MaxPool_grad/MaxPoolGrad"
  op: "MaxPoolGrad"
  input: "block4_conv3/Relu"
  input: "block4_pool/MaxPool"
  input: "training/RMSprop/gradients/gradients/block5_conv1/Conv2D_grad/Conv2DBackpropInput"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/block4_conv3/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "training/RMSprop/gradients/gradients/block4_pool/MaxPool_grad/MaxPoolGrad"
  input: "block4_conv3/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/block4_conv3/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "training/RMSprop/gradients/gradients/block4_conv3/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/block4_conv3/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "block4_conv2/Relu"
  input: "block4_conv3/Conv2D/ReadVariableOp"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/block4_conv3/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "training/RMSprop/gradients/gradients/block4_conv3/Conv2D_grad/ShapeN"
  input: "block4_conv3/Conv2D/ReadVariableOp"
  input: "training/RMSprop/gradients/gradients/block4_conv3/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/block4_conv3/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "block4_conv2/Relu"
  input: "training/RMSprop/gradients/gradients/block4_conv3/Conv2D_grad/ShapeN:1"
  input: "training/RMSprop/gradients/gradients/block4_conv3/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/block4_conv2/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "training/RMSprop/gradients/gradients/block4_conv3/Conv2D_grad/Conv2DBackpropInput"
  input: "block4_conv2/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/block4_conv2/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "training/RMSprop/gradients/gradients/block4_conv2/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/block4_conv2/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "block4_conv1/Relu"
  input: "block4_conv2/Conv2D/ReadVariableOp"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/block4_conv2/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "training/RMSprop/gradients/gradients/block4_conv2/Conv2D_grad/ShapeN"
  input: "block4_conv2/Conv2D/ReadVariableOp"
  input: "training/RMSprop/gradients/gradients/block4_conv2/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/block4_conv2/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "block4_conv1/Relu"
  input: "training/RMSprop/gradients/gradients/block4_conv2/Conv2D_grad/ShapeN:1"
  input: "training/RMSprop/gradients/gradients/block4_conv2/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/block4_conv1/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "training/RMSprop/gradients/gradients/block4_conv2/Conv2D_grad/Conv2DBackpropInput"
  input: "block4_conv1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/block4_conv1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "training/RMSprop/gradients/gradients/block4_conv1/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/block4_conv1/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "block3_pool/MaxPool"
  input: "block4_conv1/Conv2D/ReadVariableOp"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/block4_conv1/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "training/RMSprop/gradients/gradients/block4_conv1/Conv2D_grad/ShapeN"
  input: "block4_conv1/Conv2D/ReadVariableOp"
  input: "training/RMSprop/gradients/gradients/block4_conv1/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/block4_conv1/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "block3_pool/MaxPool"
  input: "training/RMSprop/gradients/gradients/block4_conv1/Conv2D_grad/ShapeN:1"
  input: "training/RMSprop/gradients/gradients/block4_conv1/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/block3_pool/MaxPool_grad/MaxPoolGrad"
  op: "MaxPoolGrad"
  input: "block3_conv3/Relu"
  input: "block3_pool/MaxPool"
  input: "training/RMSprop/gradients/gradients/block4_conv1/Conv2D_grad/Conv2DBackpropInput"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/block3_conv3/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "training/RMSprop/gradients/gradients/block3_pool/MaxPool_grad/MaxPoolGrad"
  input: "block3_conv3/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/block3_conv3/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "training/RMSprop/gradients/gradients/block3_conv3/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/block3_conv3/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "block3_conv2/Relu"
  input: "block3_conv3/Conv2D/ReadVariableOp"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/block3_conv3/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "training/RMSprop/gradients/gradients/block3_conv3/Conv2D_grad/ShapeN"
  input: "block3_conv3/Conv2D/ReadVariableOp"
  input: "training/RMSprop/gradients/gradients/block3_conv3/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/block3_conv3/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "block3_conv2/Relu"
  input: "training/RMSprop/gradients/gradients/block3_conv3/Conv2D_grad/ShapeN:1"
  input: "training/RMSprop/gradients/gradients/block3_conv3/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/block3_conv2/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "training/RMSprop/gradients/gradients/block3_conv3/Conv2D_grad/Conv2DBackpropInput"
  input: "block3_conv2/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/block3_conv2/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "training/RMSprop/gradients/gradients/block3_conv2/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/block3_conv2/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "block3_conv1/Relu"
  input: "block3_conv2/Conv2D/ReadVariableOp"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/block3_conv2/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "training/RMSprop/gradients/gradients/block3_conv2/Conv2D_grad/ShapeN"
  input: "block3_conv2/Conv2D/ReadVariableOp"
  input: "training/RMSprop/gradients/gradients/block3_conv2/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/block3_conv2/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "block3_conv1/Relu"
  input: "training/RMSprop/gradients/gradients/block3_conv2/Conv2D_grad/ShapeN:1"
  input: "training/RMSprop/gradients/gradients/block3_conv2/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/block3_conv1/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "training/RMSprop/gradients/gradients/block3_conv2/Conv2D_grad/Conv2DBackpropInput"
  input: "block3_conv1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/block3_conv1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "training/RMSprop/gradients/gradients/block3_conv1/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/block3_conv1/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "block2_pool/MaxPool"
  input: "block3_conv1/Conv2D/ReadVariableOp"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/block3_conv1/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "training/RMSprop/gradients/gradients/block3_conv1/Conv2D_grad/ShapeN"
  input: "block3_conv1/Conv2D/ReadVariableOp"
  input: "training/RMSprop/gradients/gradients/block3_conv1/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/block3_conv1/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "block2_pool/MaxPool"
  input: "training/RMSprop/gradients/gradients/block3_conv1/Conv2D_grad/ShapeN:1"
  input: "training/RMSprop/gradients/gradients/block3_conv1/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/block2_pool/MaxPool_grad/MaxPoolGrad"
  op: "MaxPoolGrad"
  input: "block2_conv2/Relu"
  input: "block2_pool/MaxPool"
  input: "training/RMSprop/gradients/gradients/block3_conv1/Conv2D_grad/Conv2DBackpropInput"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/block2_conv2/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "training/RMSprop/gradients/gradients/block2_pool/MaxPool_grad/MaxPoolGrad"
  input: "block2_conv2/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/block2_conv2/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "training/RMSprop/gradients/gradients/block2_conv2/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/block2_conv2/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "block2_conv1/Relu"
  input: "block2_conv2/Conv2D/ReadVariableOp"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/block2_conv2/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "training/RMSprop/gradients/gradients/block2_conv2/Conv2D_grad/ShapeN"
  input: "block2_conv2/Conv2D/ReadVariableOp"
  input: "training/RMSprop/gradients/gradients/block2_conv2/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/block2_conv2/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "block2_conv1/Relu"
  input: "training/RMSprop/gradients/gradients/block2_conv2/Conv2D_grad/ShapeN:1"
  input: "training/RMSprop/gradients/gradients/block2_conv2/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/block2_conv1/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "training/RMSprop/gradients/gradients/block2_conv2/Conv2D_grad/Conv2DBackpropInput"
  input: "block2_conv1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/block2_conv1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "training/RMSprop/gradients/gradients/block2_conv1/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/block2_conv1/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "block1_pool/MaxPool"
  input: "block2_conv1/Conv2D/ReadVariableOp"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/block2_conv1/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "training/RMSprop/gradients/gradients/block2_conv1/Conv2D_grad/ShapeN"
  input: "block2_conv1/Conv2D/ReadVariableOp"
  input: "training/RMSprop/gradients/gradients/block2_conv1/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/block2_conv1/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "block1_pool/MaxPool"
  input: "training/RMSprop/gradients/gradients/block2_conv1/Conv2D_grad/ShapeN:1"
  input: "training/RMSprop/gradients/gradients/block2_conv1/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/block1_pool/MaxPool_grad/MaxPoolGrad"
  op: "MaxPoolGrad"
  input: "block1_conv2/Relu"
  input: "block1_pool/MaxPool"
  input: "training/RMSprop/gradients/gradients/block2_conv1/Conv2D_grad/Conv2DBackpropInput"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/block1_conv2/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "training/RMSprop/gradients/gradients/block1_pool/MaxPool_grad/MaxPoolGrad"
  input: "block1_conv2/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/block1_conv2/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "training/RMSprop/gradients/gradients/block1_conv2/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/block1_conv2/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "block1_conv1/Relu"
  input: "block1_conv2/Conv2D/ReadVariableOp"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/block1_conv2/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "training/RMSprop/gradients/gradients/block1_conv2/Conv2D_grad/ShapeN"
  input: "block1_conv2/Conv2D/ReadVariableOp"
  input: "training/RMSprop/gradients/gradients/block1_conv2/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/block1_conv2/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "block1_conv1/Relu"
  input: "training/RMSprop/gradients/gradients/block1_conv2/Conv2D_grad/ShapeN:1"
  input: "training/RMSprop/gradients/gradients/block1_conv2/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/block1_conv1/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "training/RMSprop/gradients/gradients/block1_conv2/Conv2D_grad/Conv2DBackpropInput"
  input: "block1_conv1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/block1_conv1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "training/RMSprop/gradients/gradients/block1_conv1/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/block1_conv1/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "input_1"
  input: "block1_conv1/Conv2D/ReadVariableOp"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/block1_conv1/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "training/RMSprop/gradients/gradients/block1_conv1/Conv2D_grad/ShapeN"
  input: "block1_conv1/Conv2D/ReadVariableOp"
  input: "training/RMSprop/gradients/gradients/block1_conv1/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/block1_conv1/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "input_1"
  input: "training/RMSprop/gradients/gradients/block1_conv1/Conv2D_grad/ShapeN:1"
  input: "training/RMSprop/gradients/gradients/block1_conv1/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/iter/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/iter"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "training/RMSprop/iter"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/iter"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/RMSprop/iter"
    }
  }
}
node {
  name: "training/RMSprop/iter/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/RMSprop/iter"
}
node {
  name: "training/RMSprop/iter/Assign"
  op: "AssignVariableOp"
  input: "training/RMSprop/iter"
  input: "training/RMSprop/iter/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "training/RMSprop/iter/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/iter"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "training/RMSprop/decay/Initializer/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/decay"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/decay"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/decay"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/RMSprop/decay"
    }
  }
}
node {
  name: "training/RMSprop/decay/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/RMSprop/decay"
}
node {
  name: "training/RMSprop/decay/Assign"
  op: "AssignVariableOp"
  input: "training/RMSprop/decay"
  input: "training/RMSprop/decay/Initializer/initial_value"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/decay/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/decay"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/learning_rate/Initializer/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/learning_rate"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "training/RMSprop/learning_rate"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/learning_rate"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/RMSprop/learning_rate"
    }
  }
}
node {
  name: "training/RMSprop/learning_rate/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/RMSprop/learning_rate"
}
node {
  name: "training/RMSprop/learning_rate/Assign"
  op: "AssignVariableOp"
  input: "training/RMSprop/learning_rate"
  input: "training/RMSprop/learning_rate/Initializer/initial_value"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/learning_rate/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/learning_rate"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/momentum/Initializer/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/momentum"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/momentum"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/momentum"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/RMSprop/momentum"
    }
  }
}
node {
  name: "training/RMSprop/momentum/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/RMSprop/momentum"
}
node {
  name: "training/RMSprop/momentum/Assign"
  op: "AssignVariableOp"
  input: "training/RMSprop/momentum"
  input: "training/RMSprop/momentum/Initializer/initial_value"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/momentum/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/momentum"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/rho/Initializer/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/rho"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "training/RMSprop/rho"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/rho"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/RMSprop/rho"
    }
  }
}
node {
  name: "training/RMSprop/rho/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/RMSprop/rho"
}
node {
  name: "training/RMSprop/rho/Assign"
  op: "AssignVariableOp"
  input: "training/RMSprop/rho"
  input: "training/RMSprop/rho/Initializer/initial_value"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/rho/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/rho"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/block1_conv1/kernel/rms/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1_conv1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\003\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "training/RMSprop/block1_conv1/kernel/rms/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1_conv1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/block1_conv1/kernel/rms/Initializer/zeros"
  op: "Fill"
  input: "training/RMSprop/block1_conv1/kernel/rms/Initializer/zeros/shape_as_tensor"
  input: "training/RMSprop/block1_conv1/kernel/rms/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1_conv1/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/block1_conv1/kernel/rms"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1_conv1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/RMSprop/block1_conv1/kernel/rms"
    }
  }
}
node {
  name: "training/RMSprop/block1_conv1/kernel/rms/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/RMSprop/block1_conv1/kernel/rms"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1_conv1/kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/block1_conv1/kernel/rms/Assign"
  op: "AssignVariableOp"
  input: "training/RMSprop/block1_conv1/kernel/rms"
  input: "training/RMSprop/block1_conv1/kernel/rms/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/block1_conv1/kernel/rms/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/block1_conv1/kernel/rms"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1_conv1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/block1_conv1/bias/rms/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1_conv1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/block1_conv1/bias/rms"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1_conv1/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/RMSprop/block1_conv1/bias/rms"
    }
  }
}
node {
  name: "training/RMSprop/block1_conv1/bias/rms/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/RMSprop/block1_conv1/bias/rms"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1_conv1/bias"
      }
    }
  }
}
node {
  name: "training/RMSprop/block1_conv1/bias/rms/Assign"
  op: "AssignVariableOp"
  input: "training/RMSprop/block1_conv1/bias/rms"
  input: "training/RMSprop/block1_conv1/bias/rms/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/block1_conv1/bias/rms/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/block1_conv1/bias/rms"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1_conv1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/block1_conv2/kernel/rms/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1_conv2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "training/RMSprop/block1_conv2/kernel/rms/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1_conv2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/block1_conv2/kernel/rms/Initializer/zeros"
  op: "Fill"
  input: "training/RMSprop/block1_conv2/kernel/rms/Initializer/zeros/shape_as_tensor"
  input: "training/RMSprop/block1_conv2/kernel/rms/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1_conv2/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/block1_conv2/kernel/rms"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1_conv2/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/RMSprop/block1_conv2/kernel/rms"
    }
  }
}
node {
  name: "training/RMSprop/block1_conv2/kernel/rms/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/RMSprop/block1_conv2/kernel/rms"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1_conv2/kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/block1_conv2/kernel/rms/Assign"
  op: "AssignVariableOp"
  input: "training/RMSprop/block1_conv2/kernel/rms"
  input: "training/RMSprop/block1_conv2/kernel/rms/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/block1_conv2/kernel/rms/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/block1_conv2/kernel/rms"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1_conv2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/block1_conv2/bias/rms/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1_conv2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/block1_conv2/bias/rms"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1_conv2/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/RMSprop/block1_conv2/bias/rms"
    }
  }
}
node {
  name: "training/RMSprop/block1_conv2/bias/rms/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/RMSprop/block1_conv2/bias/rms"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1_conv2/bias"
      }
    }
  }
}
node {
  name: "training/RMSprop/block1_conv2/bias/rms/Assign"
  op: "AssignVariableOp"
  input: "training/RMSprop/block1_conv2/bias/rms"
  input: "training/RMSprop/block1_conv2/bias/rms/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/block1_conv2/bias/rms/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/block1_conv2/bias/rms"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1_conv2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/block2_conv1/kernel/rms/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2_conv1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "training/RMSprop/block2_conv1/kernel/rms/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2_conv1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/block2_conv1/kernel/rms/Initializer/zeros"
  op: "Fill"
  input: "training/RMSprop/block2_conv1/kernel/rms/Initializer/zeros/shape_as_tensor"
  input: "training/RMSprop/block2_conv1/kernel/rms/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2_conv1/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/block2_conv1/kernel/rms"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2_conv1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/RMSprop/block2_conv1/kernel/rms"
    }
  }
}
node {
  name: "training/RMSprop/block2_conv1/kernel/rms/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/RMSprop/block2_conv1/kernel/rms"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2_conv1/kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/block2_conv1/kernel/rms/Assign"
  op: "AssignVariableOp"
  input: "training/RMSprop/block2_conv1/kernel/rms"
  input: "training/RMSprop/block2_conv1/kernel/rms/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/block2_conv1/kernel/rms/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/block2_conv1/kernel/rms"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2_conv1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/block2_conv1/bias/rms/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2_conv1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/block2_conv1/bias/rms"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2_conv1/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/RMSprop/block2_conv1/bias/rms"
    }
  }
}
node {
  name: "training/RMSprop/block2_conv1/bias/rms/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/RMSprop/block2_conv1/bias/rms"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2_conv1/bias"
      }
    }
  }
}
node {
  name: "training/RMSprop/block2_conv1/bias/rms/Assign"
  op: "AssignVariableOp"
  input: "training/RMSprop/block2_conv1/bias/rms"
  input: "training/RMSprop/block2_conv1/bias/rms/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/block2_conv1/bias/rms/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/block2_conv1/bias/rms"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2_conv1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/block2_conv2/kernel/rms/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2_conv2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "training/RMSprop/block2_conv2/kernel/rms/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2_conv2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/block2_conv2/kernel/rms/Initializer/zeros"
  op: "Fill"
  input: "training/RMSprop/block2_conv2/kernel/rms/Initializer/zeros/shape_as_tensor"
  input: "training/RMSprop/block2_conv2/kernel/rms/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2_conv2/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/block2_conv2/kernel/rms"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2_conv2/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/RMSprop/block2_conv2/kernel/rms"
    }
  }
}
node {
  name: "training/RMSprop/block2_conv2/kernel/rms/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/RMSprop/block2_conv2/kernel/rms"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2_conv2/kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/block2_conv2/kernel/rms/Assign"
  op: "AssignVariableOp"
  input: "training/RMSprop/block2_conv2/kernel/rms"
  input: "training/RMSprop/block2_conv2/kernel/rms/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/block2_conv2/kernel/rms/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/block2_conv2/kernel/rms"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2_conv2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/block2_conv2/bias/rms/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2_conv2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/block2_conv2/bias/rms"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2_conv2/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/RMSprop/block2_conv2/bias/rms"
    }
  }
}
node {
  name: "training/RMSprop/block2_conv2/bias/rms/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/RMSprop/block2_conv2/bias/rms"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2_conv2/bias"
      }
    }
  }
}
node {
  name: "training/RMSprop/block2_conv2/bias/rms/Assign"
  op: "AssignVariableOp"
  input: "training/RMSprop/block2_conv2/bias/rms"
  input: "training/RMSprop/block2_conv2/bias/rms/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/block2_conv2/bias/rms/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/block2_conv2/bias/rms"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2_conv2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/block3_conv1/kernel/rms/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "training/RMSprop/block3_conv1/kernel/rms/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/block3_conv1/kernel/rms/Initializer/zeros"
  op: "Fill"
  input: "training/RMSprop/block3_conv1/kernel/rms/Initializer/zeros/shape_as_tensor"
  input: "training/RMSprop/block3_conv1/kernel/rms/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv1/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/block3_conv1/kernel/rms"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/RMSprop/block3_conv1/kernel/rms"
    }
  }
}
node {
  name: "training/RMSprop/block3_conv1/kernel/rms/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/RMSprop/block3_conv1/kernel/rms"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv1/kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/block3_conv1/kernel/rms/Assign"
  op: "AssignVariableOp"
  input: "training/RMSprop/block3_conv1/kernel/rms"
  input: "training/RMSprop/block3_conv1/kernel/rms/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/block3_conv1/kernel/rms/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/block3_conv1/kernel/rms"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/block3_conv1/bias/rms/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/block3_conv1/bias/rms"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv1/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/RMSprop/block3_conv1/bias/rms"
    }
  }
}
node {
  name: "training/RMSprop/block3_conv1/bias/rms/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/RMSprop/block3_conv1/bias/rms"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv1/bias"
      }
    }
  }
}
node {
  name: "training/RMSprop/block3_conv1/bias/rms/Assign"
  op: "AssignVariableOp"
  input: "training/RMSprop/block3_conv1/bias/rms"
  input: "training/RMSprop/block3_conv1/bias/rms/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/block3_conv1/bias/rms/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/block3_conv1/bias/rms"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/block3_conv2/kernel/rms/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "training/RMSprop/block3_conv2/kernel/rms/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/block3_conv2/kernel/rms/Initializer/zeros"
  op: "Fill"
  input: "training/RMSprop/block3_conv2/kernel/rms/Initializer/zeros/shape_as_tensor"
  input: "training/RMSprop/block3_conv2/kernel/rms/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv2/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/block3_conv2/kernel/rms"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv2/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/RMSprop/block3_conv2/kernel/rms"
    }
  }
}
node {
  name: "training/RMSprop/block3_conv2/kernel/rms/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/RMSprop/block3_conv2/kernel/rms"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv2/kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/block3_conv2/kernel/rms/Assign"
  op: "AssignVariableOp"
  input: "training/RMSprop/block3_conv2/kernel/rms"
  input: "training/RMSprop/block3_conv2/kernel/rms/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/block3_conv2/kernel/rms/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/block3_conv2/kernel/rms"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/block3_conv2/bias/rms/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/block3_conv2/bias/rms"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv2/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/RMSprop/block3_conv2/bias/rms"
    }
  }
}
node {
  name: "training/RMSprop/block3_conv2/bias/rms/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/RMSprop/block3_conv2/bias/rms"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv2/bias"
      }
    }
  }
}
node {
  name: "training/RMSprop/block3_conv2/bias/rms/Assign"
  op: "AssignVariableOp"
  input: "training/RMSprop/block3_conv2/bias/rms"
  input: "training/RMSprop/block3_conv2/bias/rms/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/block3_conv2/bias/rms/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/block3_conv2/bias/rms"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/block3_conv3/kernel/rms/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv3/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "training/RMSprop/block3_conv3/kernel/rms/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv3/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/block3_conv3/kernel/rms/Initializer/zeros"
  op: "Fill"
  input: "training/RMSprop/block3_conv3/kernel/rms/Initializer/zeros/shape_as_tensor"
  input: "training/RMSprop/block3_conv3/kernel/rms/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv3/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/block3_conv3/kernel/rms"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv3/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/RMSprop/block3_conv3/kernel/rms"
    }
  }
}
node {
  name: "training/RMSprop/block3_conv3/kernel/rms/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/RMSprop/block3_conv3/kernel/rms"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv3/kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/block3_conv3/kernel/rms/Assign"
  op: "AssignVariableOp"
  input: "training/RMSprop/block3_conv3/kernel/rms"
  input: "training/RMSprop/block3_conv3/kernel/rms/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/block3_conv3/kernel/rms/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/block3_conv3/kernel/rms"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv3/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/block3_conv3/bias/rms/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv3/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/block3_conv3/bias/rms"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv3/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/RMSprop/block3_conv3/bias/rms"
    }
  }
}
node {
  name: "training/RMSprop/block3_conv3/bias/rms/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/RMSprop/block3_conv3/bias/rms"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv3/bias"
      }
    }
  }
}
node {
  name: "training/RMSprop/block3_conv3/bias/rms/Assign"
  op: "AssignVariableOp"
  input: "training/RMSprop/block3_conv3/bias/rms"
  input: "training/RMSprop/block3_conv3/bias/rms/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/block3_conv3/bias/rms/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/block3_conv3/bias/rms"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv3/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/block4_conv1/kernel/rms/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "training/RMSprop/block4_conv1/kernel/rms/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/block4_conv1/kernel/rms/Initializer/zeros"
  op: "Fill"
  input: "training/RMSprop/block4_conv1/kernel/rms/Initializer/zeros/shape_as_tensor"
  input: "training/RMSprop/block4_conv1/kernel/rms/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv1/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/block4_conv1/kernel/rms"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/RMSprop/block4_conv1/kernel/rms"
    }
  }
}
node {
  name: "training/RMSprop/block4_conv1/kernel/rms/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/RMSprop/block4_conv1/kernel/rms"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv1/kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/block4_conv1/kernel/rms/Assign"
  op: "AssignVariableOp"
  input: "training/RMSprop/block4_conv1/kernel/rms"
  input: "training/RMSprop/block4_conv1/kernel/rms/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/block4_conv1/kernel/rms/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/block4_conv1/kernel/rms"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/block4_conv1/bias/rms/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/block4_conv1/bias/rms"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv1/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/RMSprop/block4_conv1/bias/rms"
    }
  }
}
node {
  name: "training/RMSprop/block4_conv1/bias/rms/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/RMSprop/block4_conv1/bias/rms"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv1/bias"
      }
    }
  }
}
node {
  name: "training/RMSprop/block4_conv1/bias/rms/Assign"
  op: "AssignVariableOp"
  input: "training/RMSprop/block4_conv1/bias/rms"
  input: "training/RMSprop/block4_conv1/bias/rms/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/block4_conv1/bias/rms/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/block4_conv1/bias/rms"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/block4_conv2/kernel/rms/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "training/RMSprop/block4_conv2/kernel/rms/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/block4_conv2/kernel/rms/Initializer/zeros"
  op: "Fill"
  input: "training/RMSprop/block4_conv2/kernel/rms/Initializer/zeros/shape_as_tensor"
  input: "training/RMSprop/block4_conv2/kernel/rms/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv2/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/block4_conv2/kernel/rms"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv2/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/RMSprop/block4_conv2/kernel/rms"
    }
  }
}
node {
  name: "training/RMSprop/block4_conv2/kernel/rms/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/RMSprop/block4_conv2/kernel/rms"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv2/kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/block4_conv2/kernel/rms/Assign"
  op: "AssignVariableOp"
  input: "training/RMSprop/block4_conv2/kernel/rms"
  input: "training/RMSprop/block4_conv2/kernel/rms/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/block4_conv2/kernel/rms/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/block4_conv2/kernel/rms"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/block4_conv2/bias/rms/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/block4_conv2/bias/rms"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv2/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/RMSprop/block4_conv2/bias/rms"
    }
  }
}
node {
  name: "training/RMSprop/block4_conv2/bias/rms/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/RMSprop/block4_conv2/bias/rms"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv2/bias"
      }
    }
  }
}
node {
  name: "training/RMSprop/block4_conv2/bias/rms/Assign"
  op: "AssignVariableOp"
  input: "training/RMSprop/block4_conv2/bias/rms"
  input: "training/RMSprop/block4_conv2/bias/rms/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/block4_conv2/bias/rms/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/block4_conv2/bias/rms"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/block4_conv3/kernel/rms/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv3/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "training/RMSprop/block4_conv3/kernel/rms/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv3/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/block4_conv3/kernel/rms/Initializer/zeros"
  op: "Fill"
  input: "training/RMSprop/block4_conv3/kernel/rms/Initializer/zeros/shape_as_tensor"
  input: "training/RMSprop/block4_conv3/kernel/rms/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv3/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/block4_conv3/kernel/rms"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv3/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/RMSprop/block4_conv3/kernel/rms"
    }
  }
}
node {
  name: "training/RMSprop/block4_conv3/kernel/rms/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/RMSprop/block4_conv3/kernel/rms"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv3/kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/block4_conv3/kernel/rms/Assign"
  op: "AssignVariableOp"
  input: "training/RMSprop/block4_conv3/kernel/rms"
  input: "training/RMSprop/block4_conv3/kernel/rms/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/block4_conv3/kernel/rms/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/block4_conv3/kernel/rms"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv3/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/block4_conv3/bias/rms/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv3/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/block4_conv3/bias/rms"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv3/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/RMSprop/block4_conv3/bias/rms"
    }
  }
}
node {
  name: "training/RMSprop/block4_conv3/bias/rms/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/RMSprop/block4_conv3/bias/rms"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv3/bias"
      }
    }
  }
}
node {
  name: "training/RMSprop/block4_conv3/bias/rms/Assign"
  op: "AssignVariableOp"
  input: "training/RMSprop/block4_conv3/bias/rms"
  input: "training/RMSprop/block4_conv3/bias/rms/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/block4_conv3/bias/rms/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/block4_conv3/bias/rms"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv3/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/block5_conv1/kernel/rms/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "training/RMSprop/block5_conv1/kernel/rms/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/block5_conv1/kernel/rms/Initializer/zeros"
  op: "Fill"
  input: "training/RMSprop/block5_conv1/kernel/rms/Initializer/zeros/shape_as_tensor"
  input: "training/RMSprop/block5_conv1/kernel/rms/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv1/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/block5_conv1/kernel/rms"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/RMSprop/block5_conv1/kernel/rms"
    }
  }
}
node {
  name: "training/RMSprop/block5_conv1/kernel/rms/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/RMSprop/block5_conv1/kernel/rms"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv1/kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/block5_conv1/kernel/rms/Assign"
  op: "AssignVariableOp"
  input: "training/RMSprop/block5_conv1/kernel/rms"
  input: "training/RMSprop/block5_conv1/kernel/rms/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/block5_conv1/kernel/rms/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/block5_conv1/kernel/rms"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/block5_conv1/bias/rms/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/block5_conv1/bias/rms"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv1/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/RMSprop/block5_conv1/bias/rms"
    }
  }
}
node {
  name: "training/RMSprop/block5_conv1/bias/rms/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/RMSprop/block5_conv1/bias/rms"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv1/bias"
      }
    }
  }
}
node {
  name: "training/RMSprop/block5_conv1/bias/rms/Assign"
  op: "AssignVariableOp"
  input: "training/RMSprop/block5_conv1/bias/rms"
  input: "training/RMSprop/block5_conv1/bias/rms/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/block5_conv1/bias/rms/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/block5_conv1/bias/rms"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/block5_conv2/kernel/rms/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "training/RMSprop/block5_conv2/kernel/rms/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/block5_conv2/kernel/rms/Initializer/zeros"
  op: "Fill"
  input: "training/RMSprop/block5_conv2/kernel/rms/Initializer/zeros/shape_as_tensor"
  input: "training/RMSprop/block5_conv2/kernel/rms/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv2/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/block5_conv2/kernel/rms"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv2/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/RMSprop/block5_conv2/kernel/rms"
    }
  }
}
node {
  name: "training/RMSprop/block5_conv2/kernel/rms/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/RMSprop/block5_conv2/kernel/rms"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv2/kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/block5_conv2/kernel/rms/Assign"
  op: "AssignVariableOp"
  input: "training/RMSprop/block5_conv2/kernel/rms"
  input: "training/RMSprop/block5_conv2/kernel/rms/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/block5_conv2/kernel/rms/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/block5_conv2/kernel/rms"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/block5_conv2/bias/rms/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/block5_conv2/bias/rms"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv2/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/RMSprop/block5_conv2/bias/rms"
    }
  }
}
node {
  name: "training/RMSprop/block5_conv2/bias/rms/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/RMSprop/block5_conv2/bias/rms"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv2/bias"
      }
    }
  }
}
node {
  name: "training/RMSprop/block5_conv2/bias/rms/Assign"
  op: "AssignVariableOp"
  input: "training/RMSprop/block5_conv2/bias/rms"
  input: "training/RMSprop/block5_conv2/bias/rms/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/block5_conv2/bias/rms/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/block5_conv2/bias/rms"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/block5_conv3/kernel/rms/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv3/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "training/RMSprop/block5_conv3/kernel/rms/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv3/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/block5_conv3/kernel/rms/Initializer/zeros"
  op: "Fill"
  input: "training/RMSprop/block5_conv3/kernel/rms/Initializer/zeros/shape_as_tensor"
  input: "training/RMSprop/block5_conv3/kernel/rms/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv3/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/block5_conv3/kernel/rms"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv3/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/RMSprop/block5_conv3/kernel/rms"
    }
  }
}
node {
  name: "training/RMSprop/block5_conv3/kernel/rms/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/RMSprop/block5_conv3/kernel/rms"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv3/kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/block5_conv3/kernel/rms/Assign"
  op: "AssignVariableOp"
  input: "training/RMSprop/block5_conv3/kernel/rms"
  input: "training/RMSprop/block5_conv3/kernel/rms/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/block5_conv3/kernel/rms/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/block5_conv3/kernel/rms"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv3/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/block5_conv3/bias/rms/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv3/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/block5_conv3/bias/rms"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv3/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/RMSprop/block5_conv3/bias/rms"
    }
  }
}
node {
  name: "training/RMSprop/block5_conv3/bias/rms/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/RMSprop/block5_conv3/bias/rms"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv3/bias"
      }
    }
  }
}
node {
  name: "training/RMSprop/block5_conv3/bias/rms/Assign"
  op: "AssignVariableOp"
  input: "training/RMSprop/block5_conv3/bias/rms"
  input: "training/RMSprop/block5_conv3/bias/rms/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/block5_conv3/bias/rms/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/block5_conv3/bias/rms"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv3/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/fc1/kernel/rms/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\000\020\000\000"
      }
    }
  }
}
node {
  name: "training/RMSprop/fc1/kernel/rms/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/fc1/kernel/rms/Initializer/zeros"
  op: "Fill"
  input: "training/RMSprop/fc1/kernel/rms/Initializer/zeros/shape_as_tensor"
  input: "training/RMSprop/fc1/kernel/rms/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc1/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/fc1/kernel/rms"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 4096
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/RMSprop/fc1/kernel/rms"
    }
  }
}
node {
  name: "training/RMSprop/fc1/kernel/rms/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/RMSprop/fc1/kernel/rms"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc1/kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/fc1/kernel/rms/Assign"
  op: "AssignVariableOp"
  input: "training/RMSprop/fc1/kernel/rms"
  input: "training/RMSprop/fc1/kernel/rms/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/fc1/kernel/rms/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/fc1/kernel/rms"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/fc1/bias/rms/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4096
      }
    }
  }
}
node {
  name: "training/RMSprop/fc1/bias/rms/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/fc1/bias/rms/Initializer/zeros"
  op: "Fill"
  input: "training/RMSprop/fc1/bias/rms/Initializer/zeros/shape_as_tensor"
  input: "training/RMSprop/fc1/bias/rms/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc1/bias"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/fc1/bias/rms"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc1/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4096
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/RMSprop/fc1/bias/rms"
    }
  }
}
node {
  name: "training/RMSprop/fc1/bias/rms/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/RMSprop/fc1/bias/rms"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc1/bias"
      }
    }
  }
}
node {
  name: "training/RMSprop/fc1/bias/rms/Assign"
  op: "AssignVariableOp"
  input: "training/RMSprop/fc1/bias/rms"
  input: "training/RMSprop/fc1/bias/rms/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/fc1/bias/rms/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/fc1/bias/rms"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/fc2/kernel/rms/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\020\000\000\000\020\000\000"
      }
    }
  }
}
node {
  name: "training/RMSprop/fc2/kernel/rms/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/fc2/kernel/rms/Initializer/zeros"
  op: "Fill"
  input: "training/RMSprop/fc2/kernel/rms/Initializer/zeros/shape_as_tensor"
  input: "training/RMSprop/fc2/kernel/rms/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/fc2/kernel/rms"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4096
        }
        dim {
          size: 4096
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/RMSprop/fc2/kernel/rms"
    }
  }
}
node {
  name: "training/RMSprop/fc2/kernel/rms/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/RMSprop/fc2/kernel/rms"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2/kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/fc2/kernel/rms/Assign"
  op: "AssignVariableOp"
  input: "training/RMSprop/fc2/kernel/rms"
  input: "training/RMSprop/fc2/kernel/rms/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/fc2/kernel/rms/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/fc2/kernel/rms"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/fc2/bias/rms/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4096
      }
    }
  }
}
node {
  name: "training/RMSprop/fc2/bias/rms/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/fc2/bias/rms/Initializer/zeros"
  op: "Fill"
  input: "training/RMSprop/fc2/bias/rms/Initializer/zeros/shape_as_tensor"
  input: "training/RMSprop/fc2/bias/rms/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2/bias"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/fc2/bias/rms"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4096
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/RMSprop/fc2/bias/rms"
    }
  }
}
node {
  name: "training/RMSprop/fc2/bias/rms/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/RMSprop/fc2/bias/rms"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2/bias"
      }
    }
  }
}
node {
  name: "training/RMSprop/fc2/bias/rms/Assign"
  op: "AssignVariableOp"
  input: "training/RMSprop/fc2/bias/rms"
  input: "training/RMSprop/fc2/bias/rms/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/fc2/bias/rms/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/fc2/bias/rms"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/predictions/kernel/rms/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@predictions/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\020\000\000\n\000\000\000"
      }
    }
  }
}
node {
  name: "training/RMSprop/predictions/kernel/rms/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@predictions/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/predictions/kernel/rms/Initializer/zeros"
  op: "Fill"
  input: "training/RMSprop/predictions/kernel/rms/Initializer/zeros/shape_as_tensor"
  input: "training/RMSprop/predictions/kernel/rms/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@predictions/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/predictions/kernel/rms"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@predictions/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4096
        }
        dim {
          size: 10
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/RMSprop/predictions/kernel/rms"
    }
  }
}
node {
  name: "training/RMSprop/predictions/kernel/rms/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/RMSprop/predictions/kernel/rms"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@predictions/kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/predictions/kernel/rms/Assign"
  op: "AssignVariableOp"
  input: "training/RMSprop/predictions/kernel/rms"
  input: "training/RMSprop/predictions/kernel/rms/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/predictions/kernel/rms/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/predictions/kernel/rms"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@predictions/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/predictions/bias/rms/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@predictions/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 10
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/predictions/bias/rms"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@predictions/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 10
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/RMSprop/predictions/bias/rms"
    }
  }
}
node {
  name: "training/RMSprop/predictions/bias/rms/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/RMSprop/predictions/bias/rms"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@predictions/bias"
      }
    }
  }
}
node {
  name: "training/RMSprop/predictions/bias/rms/Assign"
  op: "AssignVariableOp"
  input: "training/RMSprop/predictions/bias/rms"
  input: "training/RMSprop/predictions/bias/rms/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/predictions/bias/rms/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/predictions/bias/rms"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@predictions/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Identity/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/learning_rate"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Identity"
  op: "Identity"
  input: "training/RMSprop/Identity/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Identity_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/rho"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Identity_1"
  op: "Identity"
  input: "training/RMSprop/Identity_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Neg"
  op: "Neg"
  input: "training/RMSprop/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training/RMSprop/Identity_2/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/momentum"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Identity_2"
  op: "Identity"
  input: "training/RMSprop/Identity_2/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/RMSprop/sub"
  op: "Sub"
  input: "training/RMSprop/sub/x"
  input: "training/RMSprop/Identity_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block1_conv1/kernel/mul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/block1_conv1/kernel/rms"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block1_conv1/kernel/mul"
  op: "Mul"
  input: "training/RMSprop/Identity_1"
  input: "training/RMSprop/RMSprop/update_block1_conv1/kernel/mul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1_conv1/kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block1_conv1/kernel/Square"
  op: "Square"
  input: "training/RMSprop/gradients/gradients/block1_conv1/Conv2D_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1_conv1/kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block1_conv1/kernel/mul_1"
  op: "Mul"
  input: "training/RMSprop/sub"
  input: "training/RMSprop/RMSprop/update_block1_conv1/kernel/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1_conv1/kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block1_conv1/kernel/add"
  op: "AddV2"
  input: "training/RMSprop/RMSprop/update_block1_conv1/kernel/mul"
  input: "training/RMSprop/RMSprop/update_block1_conv1/kernel/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1_conv1/kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block1_conv1/kernel/AssignVariableOp"
  op: "AssignVariableOp"
  input: "training/RMSprop/block1_conv1/kernel/rms"
  input: "training/RMSprop/RMSprop/update_block1_conv1/kernel/add"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1_conv1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block1_conv1/kernel/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/block1_conv1/kernel/rms"
  input: "^training/RMSprop/RMSprop/update_block1_conv1/kernel/AssignVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1_conv1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block1_conv1/kernel/mul_2"
  op: "Mul"
  input: "training/RMSprop/Identity"
  input: "training/RMSprop/gradients/gradients/block1_conv1/Conv2D_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1_conv1/kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block1_conv1/kernel/Sqrt/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/block1_conv1/kernel/rms"
  input: "^training/RMSprop/RMSprop/update_block1_conv1/kernel/AssignVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1_conv1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block1_conv1/kernel/Sqrt"
  op: "Sqrt"
  input: "training/RMSprop/RMSprop/update_block1_conv1/kernel/Sqrt/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1_conv1/kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block1_conv1/kernel/add_1"
  op: "AddV2"
  input: "training/RMSprop/RMSprop/update_block1_conv1/kernel/Sqrt"
  input: "training/RMSprop/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1_conv1/kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block1_conv1/kernel/truediv"
  op: "RealDiv"
  input: "training/RMSprop/RMSprop/update_block1_conv1/kernel/mul_2"
  input: "training/RMSprop/RMSprop/update_block1_conv1/kernel/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1_conv1/kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block1_conv1/kernel/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block1_conv1/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block1_conv1/kernel/sub"
  op: "Sub"
  input: "training/RMSprop/RMSprop/update_block1_conv1/kernel/ReadVariableOp_1"
  input: "training/RMSprop/RMSprop/update_block1_conv1/kernel/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1_conv1/kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block1_conv1/kernel/AssignVariableOp_1"
  op: "AssignVariableOp"
  input: "block1_conv1/kernel"
  input: "training/RMSprop/RMSprop/update_block1_conv1/kernel/sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1_conv1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block1_conv1/kernel/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "block1_conv1/kernel"
  input: "^training/RMSprop/RMSprop/update_block1_conv1/kernel/AssignVariableOp_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1_conv1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block1_conv1/bias/mul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/block1_conv1/bias/rms"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block1_conv1/bias/mul"
  op: "Mul"
  input: "training/RMSprop/Identity_1"
  input: "training/RMSprop/RMSprop/update_block1_conv1/bias/mul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1_conv1/bias"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block1_conv1/bias/Square"
  op: "Square"
  input: "training/RMSprop/gradients/gradients/block1_conv1/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1_conv1/bias"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block1_conv1/bias/mul_1"
  op: "Mul"
  input: "training/RMSprop/sub"
  input: "training/RMSprop/RMSprop/update_block1_conv1/bias/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1_conv1/bias"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block1_conv1/bias/add"
  op: "AddV2"
  input: "training/RMSprop/RMSprop/update_block1_conv1/bias/mul"
  input: "training/RMSprop/RMSprop/update_block1_conv1/bias/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1_conv1/bias"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block1_conv1/bias/AssignVariableOp"
  op: "AssignVariableOp"
  input: "training/RMSprop/block1_conv1/bias/rms"
  input: "training/RMSprop/RMSprop/update_block1_conv1/bias/add"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1_conv1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block1_conv1/bias/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/block1_conv1/bias/rms"
  input: "^training/RMSprop/RMSprop/update_block1_conv1/bias/AssignVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1_conv1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block1_conv1/bias/mul_2"
  op: "Mul"
  input: "training/RMSprop/Identity"
  input: "training/RMSprop/gradients/gradients/block1_conv1/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1_conv1/bias"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block1_conv1/bias/Sqrt/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/block1_conv1/bias/rms"
  input: "^training/RMSprop/RMSprop/update_block1_conv1/bias/AssignVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1_conv1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block1_conv1/bias/Sqrt"
  op: "Sqrt"
  input: "training/RMSprop/RMSprop/update_block1_conv1/bias/Sqrt/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1_conv1/bias"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block1_conv1/bias/add_1"
  op: "AddV2"
  input: "training/RMSprop/RMSprop/update_block1_conv1/bias/Sqrt"
  input: "training/RMSprop/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1_conv1/bias"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block1_conv1/bias/truediv"
  op: "RealDiv"
  input: "training/RMSprop/RMSprop/update_block1_conv1/bias/mul_2"
  input: "training/RMSprop/RMSprop/update_block1_conv1/bias/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1_conv1/bias"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block1_conv1/bias/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block1_conv1/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block1_conv1/bias/sub"
  op: "Sub"
  input: "training/RMSprop/RMSprop/update_block1_conv1/bias/ReadVariableOp_1"
  input: "training/RMSprop/RMSprop/update_block1_conv1/bias/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1_conv1/bias"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block1_conv1/bias/AssignVariableOp_1"
  op: "AssignVariableOp"
  input: "block1_conv1/bias"
  input: "training/RMSprop/RMSprop/update_block1_conv1/bias/sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1_conv1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block1_conv1/bias/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "block1_conv1/bias"
  input: "^training/RMSprop/RMSprop/update_block1_conv1/bias/AssignVariableOp_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1_conv1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block1_conv2/kernel/mul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/block1_conv2/kernel/rms"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block1_conv2/kernel/mul"
  op: "Mul"
  input: "training/RMSprop/Identity_1"
  input: "training/RMSprop/RMSprop/update_block1_conv2/kernel/mul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1_conv2/kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block1_conv2/kernel/Square"
  op: "Square"
  input: "training/RMSprop/gradients/gradients/block1_conv2/Conv2D_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1_conv2/kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block1_conv2/kernel/mul_1"
  op: "Mul"
  input: "training/RMSprop/sub"
  input: "training/RMSprop/RMSprop/update_block1_conv2/kernel/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1_conv2/kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block1_conv2/kernel/add"
  op: "AddV2"
  input: "training/RMSprop/RMSprop/update_block1_conv2/kernel/mul"
  input: "training/RMSprop/RMSprop/update_block1_conv2/kernel/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1_conv2/kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block1_conv2/kernel/AssignVariableOp"
  op: "AssignVariableOp"
  input: "training/RMSprop/block1_conv2/kernel/rms"
  input: "training/RMSprop/RMSprop/update_block1_conv2/kernel/add"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1_conv2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block1_conv2/kernel/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/block1_conv2/kernel/rms"
  input: "^training/RMSprop/RMSprop/update_block1_conv2/kernel/AssignVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1_conv2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block1_conv2/kernel/mul_2"
  op: "Mul"
  input: "training/RMSprop/Identity"
  input: "training/RMSprop/gradients/gradients/block1_conv2/Conv2D_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1_conv2/kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block1_conv2/kernel/Sqrt/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/block1_conv2/kernel/rms"
  input: "^training/RMSprop/RMSprop/update_block1_conv2/kernel/AssignVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1_conv2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block1_conv2/kernel/Sqrt"
  op: "Sqrt"
  input: "training/RMSprop/RMSprop/update_block1_conv2/kernel/Sqrt/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1_conv2/kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block1_conv2/kernel/add_1"
  op: "AddV2"
  input: "training/RMSprop/RMSprop/update_block1_conv2/kernel/Sqrt"
  input: "training/RMSprop/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1_conv2/kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block1_conv2/kernel/truediv"
  op: "RealDiv"
  input: "training/RMSprop/RMSprop/update_block1_conv2/kernel/mul_2"
  input: "training/RMSprop/RMSprop/update_block1_conv2/kernel/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1_conv2/kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block1_conv2/kernel/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block1_conv2/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block1_conv2/kernel/sub"
  op: "Sub"
  input: "training/RMSprop/RMSprop/update_block1_conv2/kernel/ReadVariableOp_1"
  input: "training/RMSprop/RMSprop/update_block1_conv2/kernel/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1_conv2/kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block1_conv2/kernel/AssignVariableOp_1"
  op: "AssignVariableOp"
  input: "block1_conv2/kernel"
  input: "training/RMSprop/RMSprop/update_block1_conv2/kernel/sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1_conv2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block1_conv2/kernel/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "block1_conv2/kernel"
  input: "^training/RMSprop/RMSprop/update_block1_conv2/kernel/AssignVariableOp_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1_conv2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block1_conv2/bias/mul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/block1_conv2/bias/rms"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block1_conv2/bias/mul"
  op: "Mul"
  input: "training/RMSprop/Identity_1"
  input: "training/RMSprop/RMSprop/update_block1_conv2/bias/mul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1_conv2/bias"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block1_conv2/bias/Square"
  op: "Square"
  input: "training/RMSprop/gradients/gradients/block1_conv2/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1_conv2/bias"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block1_conv2/bias/mul_1"
  op: "Mul"
  input: "training/RMSprop/sub"
  input: "training/RMSprop/RMSprop/update_block1_conv2/bias/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1_conv2/bias"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block1_conv2/bias/add"
  op: "AddV2"
  input: "training/RMSprop/RMSprop/update_block1_conv2/bias/mul"
  input: "training/RMSprop/RMSprop/update_block1_conv2/bias/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1_conv2/bias"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block1_conv2/bias/AssignVariableOp"
  op: "AssignVariableOp"
  input: "training/RMSprop/block1_conv2/bias/rms"
  input: "training/RMSprop/RMSprop/update_block1_conv2/bias/add"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1_conv2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block1_conv2/bias/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/block1_conv2/bias/rms"
  input: "^training/RMSprop/RMSprop/update_block1_conv2/bias/AssignVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1_conv2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block1_conv2/bias/mul_2"
  op: "Mul"
  input: "training/RMSprop/Identity"
  input: "training/RMSprop/gradients/gradients/block1_conv2/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1_conv2/bias"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block1_conv2/bias/Sqrt/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/block1_conv2/bias/rms"
  input: "^training/RMSprop/RMSprop/update_block1_conv2/bias/AssignVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1_conv2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block1_conv2/bias/Sqrt"
  op: "Sqrt"
  input: "training/RMSprop/RMSprop/update_block1_conv2/bias/Sqrt/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1_conv2/bias"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block1_conv2/bias/add_1"
  op: "AddV2"
  input: "training/RMSprop/RMSprop/update_block1_conv2/bias/Sqrt"
  input: "training/RMSprop/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1_conv2/bias"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block1_conv2/bias/truediv"
  op: "RealDiv"
  input: "training/RMSprop/RMSprop/update_block1_conv2/bias/mul_2"
  input: "training/RMSprop/RMSprop/update_block1_conv2/bias/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1_conv2/bias"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block1_conv2/bias/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block1_conv2/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block1_conv2/bias/sub"
  op: "Sub"
  input: "training/RMSprop/RMSprop/update_block1_conv2/bias/ReadVariableOp_1"
  input: "training/RMSprop/RMSprop/update_block1_conv2/bias/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1_conv2/bias"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block1_conv2/bias/AssignVariableOp_1"
  op: "AssignVariableOp"
  input: "block1_conv2/bias"
  input: "training/RMSprop/RMSprop/update_block1_conv2/bias/sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1_conv2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block1_conv2/bias/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "block1_conv2/bias"
  input: "^training/RMSprop/RMSprop/update_block1_conv2/bias/AssignVariableOp_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block1_conv2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block2_conv1/kernel/mul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/block2_conv1/kernel/rms"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block2_conv1/kernel/mul"
  op: "Mul"
  input: "training/RMSprop/Identity_1"
  input: "training/RMSprop/RMSprop/update_block2_conv1/kernel/mul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2_conv1/kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block2_conv1/kernel/Square"
  op: "Square"
  input: "training/RMSprop/gradients/gradients/block2_conv1/Conv2D_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2_conv1/kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block2_conv1/kernel/mul_1"
  op: "Mul"
  input: "training/RMSprop/sub"
  input: "training/RMSprop/RMSprop/update_block2_conv1/kernel/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2_conv1/kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block2_conv1/kernel/add"
  op: "AddV2"
  input: "training/RMSprop/RMSprop/update_block2_conv1/kernel/mul"
  input: "training/RMSprop/RMSprop/update_block2_conv1/kernel/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2_conv1/kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block2_conv1/kernel/AssignVariableOp"
  op: "AssignVariableOp"
  input: "training/RMSprop/block2_conv1/kernel/rms"
  input: "training/RMSprop/RMSprop/update_block2_conv1/kernel/add"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2_conv1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block2_conv1/kernel/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/block2_conv1/kernel/rms"
  input: "^training/RMSprop/RMSprop/update_block2_conv1/kernel/AssignVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2_conv1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block2_conv1/kernel/mul_2"
  op: "Mul"
  input: "training/RMSprop/Identity"
  input: "training/RMSprop/gradients/gradients/block2_conv1/Conv2D_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2_conv1/kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block2_conv1/kernel/Sqrt/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/block2_conv1/kernel/rms"
  input: "^training/RMSprop/RMSprop/update_block2_conv1/kernel/AssignVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2_conv1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block2_conv1/kernel/Sqrt"
  op: "Sqrt"
  input: "training/RMSprop/RMSprop/update_block2_conv1/kernel/Sqrt/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2_conv1/kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block2_conv1/kernel/add_1"
  op: "AddV2"
  input: "training/RMSprop/RMSprop/update_block2_conv1/kernel/Sqrt"
  input: "training/RMSprop/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2_conv1/kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block2_conv1/kernel/truediv"
  op: "RealDiv"
  input: "training/RMSprop/RMSprop/update_block2_conv1/kernel/mul_2"
  input: "training/RMSprop/RMSprop/update_block2_conv1/kernel/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2_conv1/kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block2_conv1/kernel/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block2_conv1/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block2_conv1/kernel/sub"
  op: "Sub"
  input: "training/RMSprop/RMSprop/update_block2_conv1/kernel/ReadVariableOp_1"
  input: "training/RMSprop/RMSprop/update_block2_conv1/kernel/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2_conv1/kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block2_conv1/kernel/AssignVariableOp_1"
  op: "AssignVariableOp"
  input: "block2_conv1/kernel"
  input: "training/RMSprop/RMSprop/update_block2_conv1/kernel/sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2_conv1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block2_conv1/kernel/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "block2_conv1/kernel"
  input: "^training/RMSprop/RMSprop/update_block2_conv1/kernel/AssignVariableOp_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2_conv1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block2_conv1/bias/mul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/block2_conv1/bias/rms"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block2_conv1/bias/mul"
  op: "Mul"
  input: "training/RMSprop/Identity_1"
  input: "training/RMSprop/RMSprop/update_block2_conv1/bias/mul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2_conv1/bias"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block2_conv1/bias/Square"
  op: "Square"
  input: "training/RMSprop/gradients/gradients/block2_conv1/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2_conv1/bias"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block2_conv1/bias/mul_1"
  op: "Mul"
  input: "training/RMSprop/sub"
  input: "training/RMSprop/RMSprop/update_block2_conv1/bias/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2_conv1/bias"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block2_conv1/bias/add"
  op: "AddV2"
  input: "training/RMSprop/RMSprop/update_block2_conv1/bias/mul"
  input: "training/RMSprop/RMSprop/update_block2_conv1/bias/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2_conv1/bias"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block2_conv1/bias/AssignVariableOp"
  op: "AssignVariableOp"
  input: "training/RMSprop/block2_conv1/bias/rms"
  input: "training/RMSprop/RMSprop/update_block2_conv1/bias/add"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2_conv1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block2_conv1/bias/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/block2_conv1/bias/rms"
  input: "^training/RMSprop/RMSprop/update_block2_conv1/bias/AssignVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2_conv1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block2_conv1/bias/mul_2"
  op: "Mul"
  input: "training/RMSprop/Identity"
  input: "training/RMSprop/gradients/gradients/block2_conv1/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2_conv1/bias"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block2_conv1/bias/Sqrt/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/block2_conv1/bias/rms"
  input: "^training/RMSprop/RMSprop/update_block2_conv1/bias/AssignVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2_conv1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block2_conv1/bias/Sqrt"
  op: "Sqrt"
  input: "training/RMSprop/RMSprop/update_block2_conv1/bias/Sqrt/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2_conv1/bias"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block2_conv1/bias/add_1"
  op: "AddV2"
  input: "training/RMSprop/RMSprop/update_block2_conv1/bias/Sqrt"
  input: "training/RMSprop/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2_conv1/bias"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block2_conv1/bias/truediv"
  op: "RealDiv"
  input: "training/RMSprop/RMSprop/update_block2_conv1/bias/mul_2"
  input: "training/RMSprop/RMSprop/update_block2_conv1/bias/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2_conv1/bias"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block2_conv1/bias/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block2_conv1/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block2_conv1/bias/sub"
  op: "Sub"
  input: "training/RMSprop/RMSprop/update_block2_conv1/bias/ReadVariableOp_1"
  input: "training/RMSprop/RMSprop/update_block2_conv1/bias/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2_conv1/bias"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block2_conv1/bias/AssignVariableOp_1"
  op: "AssignVariableOp"
  input: "block2_conv1/bias"
  input: "training/RMSprop/RMSprop/update_block2_conv1/bias/sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2_conv1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block2_conv1/bias/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "block2_conv1/bias"
  input: "^training/RMSprop/RMSprop/update_block2_conv1/bias/AssignVariableOp_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2_conv1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block2_conv2/kernel/mul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/block2_conv2/kernel/rms"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block2_conv2/kernel/mul"
  op: "Mul"
  input: "training/RMSprop/Identity_1"
  input: "training/RMSprop/RMSprop/update_block2_conv2/kernel/mul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2_conv2/kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block2_conv2/kernel/Square"
  op: "Square"
  input: "training/RMSprop/gradients/gradients/block2_conv2/Conv2D_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2_conv2/kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block2_conv2/kernel/mul_1"
  op: "Mul"
  input: "training/RMSprop/sub"
  input: "training/RMSprop/RMSprop/update_block2_conv2/kernel/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2_conv2/kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block2_conv2/kernel/add"
  op: "AddV2"
  input: "training/RMSprop/RMSprop/update_block2_conv2/kernel/mul"
  input: "training/RMSprop/RMSprop/update_block2_conv2/kernel/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2_conv2/kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block2_conv2/kernel/AssignVariableOp"
  op: "AssignVariableOp"
  input: "training/RMSprop/block2_conv2/kernel/rms"
  input: "training/RMSprop/RMSprop/update_block2_conv2/kernel/add"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2_conv2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block2_conv2/kernel/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/block2_conv2/kernel/rms"
  input: "^training/RMSprop/RMSprop/update_block2_conv2/kernel/AssignVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2_conv2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block2_conv2/kernel/mul_2"
  op: "Mul"
  input: "training/RMSprop/Identity"
  input: "training/RMSprop/gradients/gradients/block2_conv2/Conv2D_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2_conv2/kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block2_conv2/kernel/Sqrt/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/block2_conv2/kernel/rms"
  input: "^training/RMSprop/RMSprop/update_block2_conv2/kernel/AssignVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2_conv2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block2_conv2/kernel/Sqrt"
  op: "Sqrt"
  input: "training/RMSprop/RMSprop/update_block2_conv2/kernel/Sqrt/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2_conv2/kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block2_conv2/kernel/add_1"
  op: "AddV2"
  input: "training/RMSprop/RMSprop/update_block2_conv2/kernel/Sqrt"
  input: "training/RMSprop/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2_conv2/kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block2_conv2/kernel/truediv"
  op: "RealDiv"
  input: "training/RMSprop/RMSprop/update_block2_conv2/kernel/mul_2"
  input: "training/RMSprop/RMSprop/update_block2_conv2/kernel/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2_conv2/kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block2_conv2/kernel/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block2_conv2/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block2_conv2/kernel/sub"
  op: "Sub"
  input: "training/RMSprop/RMSprop/update_block2_conv2/kernel/ReadVariableOp_1"
  input: "training/RMSprop/RMSprop/update_block2_conv2/kernel/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2_conv2/kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block2_conv2/kernel/AssignVariableOp_1"
  op: "AssignVariableOp"
  input: "block2_conv2/kernel"
  input: "training/RMSprop/RMSprop/update_block2_conv2/kernel/sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2_conv2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block2_conv2/kernel/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "block2_conv2/kernel"
  input: "^training/RMSprop/RMSprop/update_block2_conv2/kernel/AssignVariableOp_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2_conv2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block2_conv2/bias/mul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/block2_conv2/bias/rms"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block2_conv2/bias/mul"
  op: "Mul"
  input: "training/RMSprop/Identity_1"
  input: "training/RMSprop/RMSprop/update_block2_conv2/bias/mul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2_conv2/bias"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block2_conv2/bias/Square"
  op: "Square"
  input: "training/RMSprop/gradients/gradients/block2_conv2/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2_conv2/bias"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block2_conv2/bias/mul_1"
  op: "Mul"
  input: "training/RMSprop/sub"
  input: "training/RMSprop/RMSprop/update_block2_conv2/bias/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2_conv2/bias"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block2_conv2/bias/add"
  op: "AddV2"
  input: "training/RMSprop/RMSprop/update_block2_conv2/bias/mul"
  input: "training/RMSprop/RMSprop/update_block2_conv2/bias/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2_conv2/bias"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block2_conv2/bias/AssignVariableOp"
  op: "AssignVariableOp"
  input: "training/RMSprop/block2_conv2/bias/rms"
  input: "training/RMSprop/RMSprop/update_block2_conv2/bias/add"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2_conv2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block2_conv2/bias/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/block2_conv2/bias/rms"
  input: "^training/RMSprop/RMSprop/update_block2_conv2/bias/AssignVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2_conv2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block2_conv2/bias/mul_2"
  op: "Mul"
  input: "training/RMSprop/Identity"
  input: "training/RMSprop/gradients/gradients/block2_conv2/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2_conv2/bias"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block2_conv2/bias/Sqrt/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/block2_conv2/bias/rms"
  input: "^training/RMSprop/RMSprop/update_block2_conv2/bias/AssignVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2_conv2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block2_conv2/bias/Sqrt"
  op: "Sqrt"
  input: "training/RMSprop/RMSprop/update_block2_conv2/bias/Sqrt/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2_conv2/bias"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block2_conv2/bias/add_1"
  op: "AddV2"
  input: "training/RMSprop/RMSprop/update_block2_conv2/bias/Sqrt"
  input: "training/RMSprop/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2_conv2/bias"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block2_conv2/bias/truediv"
  op: "RealDiv"
  input: "training/RMSprop/RMSprop/update_block2_conv2/bias/mul_2"
  input: "training/RMSprop/RMSprop/update_block2_conv2/bias/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2_conv2/bias"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block2_conv2/bias/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block2_conv2/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block2_conv2/bias/sub"
  op: "Sub"
  input: "training/RMSprop/RMSprop/update_block2_conv2/bias/ReadVariableOp_1"
  input: "training/RMSprop/RMSprop/update_block2_conv2/bias/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2_conv2/bias"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block2_conv2/bias/AssignVariableOp_1"
  op: "AssignVariableOp"
  input: "block2_conv2/bias"
  input: "training/RMSprop/RMSprop/update_block2_conv2/bias/sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2_conv2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block2_conv2/bias/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "block2_conv2/bias"
  input: "^training/RMSprop/RMSprop/update_block2_conv2/bias/AssignVariableOp_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block2_conv2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block3_conv1/kernel/mul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/block3_conv1/kernel/rms"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block3_conv1/kernel/mul"
  op: "Mul"
  input: "training/RMSprop/Identity_1"
  input: "training/RMSprop/RMSprop/update_block3_conv1/kernel/mul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv1/kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block3_conv1/kernel/Square"
  op: "Square"
  input: "training/RMSprop/gradients/gradients/block3_conv1/Conv2D_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv1/kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block3_conv1/kernel/mul_1"
  op: "Mul"
  input: "training/RMSprop/sub"
  input: "training/RMSprop/RMSprop/update_block3_conv1/kernel/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv1/kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block3_conv1/kernel/add"
  op: "AddV2"
  input: "training/RMSprop/RMSprop/update_block3_conv1/kernel/mul"
  input: "training/RMSprop/RMSprop/update_block3_conv1/kernel/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv1/kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block3_conv1/kernel/AssignVariableOp"
  op: "AssignVariableOp"
  input: "training/RMSprop/block3_conv1/kernel/rms"
  input: "training/RMSprop/RMSprop/update_block3_conv1/kernel/add"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block3_conv1/kernel/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/block3_conv1/kernel/rms"
  input: "^training/RMSprop/RMSprop/update_block3_conv1/kernel/AssignVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block3_conv1/kernel/mul_2"
  op: "Mul"
  input: "training/RMSprop/Identity"
  input: "training/RMSprop/gradients/gradients/block3_conv1/Conv2D_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv1/kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block3_conv1/kernel/Sqrt/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/block3_conv1/kernel/rms"
  input: "^training/RMSprop/RMSprop/update_block3_conv1/kernel/AssignVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block3_conv1/kernel/Sqrt"
  op: "Sqrt"
  input: "training/RMSprop/RMSprop/update_block3_conv1/kernel/Sqrt/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv1/kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block3_conv1/kernel/add_1"
  op: "AddV2"
  input: "training/RMSprop/RMSprop/update_block3_conv1/kernel/Sqrt"
  input: "training/RMSprop/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv1/kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block3_conv1/kernel/truediv"
  op: "RealDiv"
  input: "training/RMSprop/RMSprop/update_block3_conv1/kernel/mul_2"
  input: "training/RMSprop/RMSprop/update_block3_conv1/kernel/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv1/kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block3_conv1/kernel/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block3_conv1/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block3_conv1/kernel/sub"
  op: "Sub"
  input: "training/RMSprop/RMSprop/update_block3_conv1/kernel/ReadVariableOp_1"
  input: "training/RMSprop/RMSprop/update_block3_conv1/kernel/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv1/kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block3_conv1/kernel/AssignVariableOp_1"
  op: "AssignVariableOp"
  input: "block3_conv1/kernel"
  input: "training/RMSprop/RMSprop/update_block3_conv1/kernel/sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block3_conv1/kernel/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "block3_conv1/kernel"
  input: "^training/RMSprop/RMSprop/update_block3_conv1/kernel/AssignVariableOp_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block3_conv1/bias/mul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/block3_conv1/bias/rms"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block3_conv1/bias/mul"
  op: "Mul"
  input: "training/RMSprop/Identity_1"
  input: "training/RMSprop/RMSprop/update_block3_conv1/bias/mul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv1/bias"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block3_conv1/bias/Square"
  op: "Square"
  input: "training/RMSprop/gradients/gradients/block3_conv1/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv1/bias"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block3_conv1/bias/mul_1"
  op: "Mul"
  input: "training/RMSprop/sub"
  input: "training/RMSprop/RMSprop/update_block3_conv1/bias/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv1/bias"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block3_conv1/bias/add"
  op: "AddV2"
  input: "training/RMSprop/RMSprop/update_block3_conv1/bias/mul"
  input: "training/RMSprop/RMSprop/update_block3_conv1/bias/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv1/bias"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block3_conv1/bias/AssignVariableOp"
  op: "AssignVariableOp"
  input: "training/RMSprop/block3_conv1/bias/rms"
  input: "training/RMSprop/RMSprop/update_block3_conv1/bias/add"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block3_conv1/bias/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/block3_conv1/bias/rms"
  input: "^training/RMSprop/RMSprop/update_block3_conv1/bias/AssignVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block3_conv1/bias/mul_2"
  op: "Mul"
  input: "training/RMSprop/Identity"
  input: "training/RMSprop/gradients/gradients/block3_conv1/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv1/bias"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block3_conv1/bias/Sqrt/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/block3_conv1/bias/rms"
  input: "^training/RMSprop/RMSprop/update_block3_conv1/bias/AssignVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block3_conv1/bias/Sqrt"
  op: "Sqrt"
  input: "training/RMSprop/RMSprop/update_block3_conv1/bias/Sqrt/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv1/bias"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block3_conv1/bias/add_1"
  op: "AddV2"
  input: "training/RMSprop/RMSprop/update_block3_conv1/bias/Sqrt"
  input: "training/RMSprop/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv1/bias"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block3_conv1/bias/truediv"
  op: "RealDiv"
  input: "training/RMSprop/RMSprop/update_block3_conv1/bias/mul_2"
  input: "training/RMSprop/RMSprop/update_block3_conv1/bias/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv1/bias"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block3_conv1/bias/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block3_conv1/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block3_conv1/bias/sub"
  op: "Sub"
  input: "training/RMSprop/RMSprop/update_block3_conv1/bias/ReadVariableOp_1"
  input: "training/RMSprop/RMSprop/update_block3_conv1/bias/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv1/bias"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block3_conv1/bias/AssignVariableOp_1"
  op: "AssignVariableOp"
  input: "block3_conv1/bias"
  input: "training/RMSprop/RMSprop/update_block3_conv1/bias/sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block3_conv1/bias/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "block3_conv1/bias"
  input: "^training/RMSprop/RMSprop/update_block3_conv1/bias/AssignVariableOp_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block3_conv2/kernel/mul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/block3_conv2/kernel/rms"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block3_conv2/kernel/mul"
  op: "Mul"
  input: "training/RMSprop/Identity_1"
  input: "training/RMSprop/RMSprop/update_block3_conv2/kernel/mul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv2/kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block3_conv2/kernel/Square"
  op: "Square"
  input: "training/RMSprop/gradients/gradients/block3_conv2/Conv2D_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv2/kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block3_conv2/kernel/mul_1"
  op: "Mul"
  input: "training/RMSprop/sub"
  input: "training/RMSprop/RMSprop/update_block3_conv2/kernel/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv2/kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block3_conv2/kernel/add"
  op: "AddV2"
  input: "training/RMSprop/RMSprop/update_block3_conv2/kernel/mul"
  input: "training/RMSprop/RMSprop/update_block3_conv2/kernel/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv2/kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block3_conv2/kernel/AssignVariableOp"
  op: "AssignVariableOp"
  input: "training/RMSprop/block3_conv2/kernel/rms"
  input: "training/RMSprop/RMSprop/update_block3_conv2/kernel/add"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block3_conv2/kernel/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/block3_conv2/kernel/rms"
  input: "^training/RMSprop/RMSprop/update_block3_conv2/kernel/AssignVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block3_conv2/kernel/mul_2"
  op: "Mul"
  input: "training/RMSprop/Identity"
  input: "training/RMSprop/gradients/gradients/block3_conv2/Conv2D_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv2/kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block3_conv2/kernel/Sqrt/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/block3_conv2/kernel/rms"
  input: "^training/RMSprop/RMSprop/update_block3_conv2/kernel/AssignVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block3_conv2/kernel/Sqrt"
  op: "Sqrt"
  input: "training/RMSprop/RMSprop/update_block3_conv2/kernel/Sqrt/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv2/kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block3_conv2/kernel/add_1"
  op: "AddV2"
  input: "training/RMSprop/RMSprop/update_block3_conv2/kernel/Sqrt"
  input: "training/RMSprop/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv2/kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block3_conv2/kernel/truediv"
  op: "RealDiv"
  input: "training/RMSprop/RMSprop/update_block3_conv2/kernel/mul_2"
  input: "training/RMSprop/RMSprop/update_block3_conv2/kernel/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv2/kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block3_conv2/kernel/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block3_conv2/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block3_conv2/kernel/sub"
  op: "Sub"
  input: "training/RMSprop/RMSprop/update_block3_conv2/kernel/ReadVariableOp_1"
  input: "training/RMSprop/RMSprop/update_block3_conv2/kernel/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv2/kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block3_conv2/kernel/AssignVariableOp_1"
  op: "AssignVariableOp"
  input: "block3_conv2/kernel"
  input: "training/RMSprop/RMSprop/update_block3_conv2/kernel/sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block3_conv2/kernel/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "block3_conv2/kernel"
  input: "^training/RMSprop/RMSprop/update_block3_conv2/kernel/AssignVariableOp_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block3_conv2/bias/mul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/block3_conv2/bias/rms"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block3_conv2/bias/mul"
  op: "Mul"
  input: "training/RMSprop/Identity_1"
  input: "training/RMSprop/RMSprop/update_block3_conv2/bias/mul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv2/bias"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block3_conv2/bias/Square"
  op: "Square"
  input: "training/RMSprop/gradients/gradients/block3_conv2/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv2/bias"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block3_conv2/bias/mul_1"
  op: "Mul"
  input: "training/RMSprop/sub"
  input: "training/RMSprop/RMSprop/update_block3_conv2/bias/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv2/bias"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block3_conv2/bias/add"
  op: "AddV2"
  input: "training/RMSprop/RMSprop/update_block3_conv2/bias/mul"
  input: "training/RMSprop/RMSprop/update_block3_conv2/bias/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv2/bias"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block3_conv2/bias/AssignVariableOp"
  op: "AssignVariableOp"
  input: "training/RMSprop/block3_conv2/bias/rms"
  input: "training/RMSprop/RMSprop/update_block3_conv2/bias/add"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block3_conv2/bias/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/block3_conv2/bias/rms"
  input: "^training/RMSprop/RMSprop/update_block3_conv2/bias/AssignVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block3_conv2/bias/mul_2"
  op: "Mul"
  input: "training/RMSprop/Identity"
  input: "training/RMSprop/gradients/gradients/block3_conv2/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv2/bias"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block3_conv2/bias/Sqrt/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/block3_conv2/bias/rms"
  input: "^training/RMSprop/RMSprop/update_block3_conv2/bias/AssignVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block3_conv2/bias/Sqrt"
  op: "Sqrt"
  input: "training/RMSprop/RMSprop/update_block3_conv2/bias/Sqrt/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv2/bias"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block3_conv2/bias/add_1"
  op: "AddV2"
  input: "training/RMSprop/RMSprop/update_block3_conv2/bias/Sqrt"
  input: "training/RMSprop/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv2/bias"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block3_conv2/bias/truediv"
  op: "RealDiv"
  input: "training/RMSprop/RMSprop/update_block3_conv2/bias/mul_2"
  input: "training/RMSprop/RMSprop/update_block3_conv2/bias/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv2/bias"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block3_conv2/bias/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block3_conv2/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block3_conv2/bias/sub"
  op: "Sub"
  input: "training/RMSprop/RMSprop/update_block3_conv2/bias/ReadVariableOp_1"
  input: "training/RMSprop/RMSprop/update_block3_conv2/bias/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv2/bias"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block3_conv2/bias/AssignVariableOp_1"
  op: "AssignVariableOp"
  input: "block3_conv2/bias"
  input: "training/RMSprop/RMSprop/update_block3_conv2/bias/sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block3_conv2/bias/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "block3_conv2/bias"
  input: "^training/RMSprop/RMSprop/update_block3_conv2/bias/AssignVariableOp_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block3_conv3/kernel/mul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/block3_conv3/kernel/rms"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block3_conv3/kernel/mul"
  op: "Mul"
  input: "training/RMSprop/Identity_1"
  input: "training/RMSprop/RMSprop/update_block3_conv3/kernel/mul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv3/kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block3_conv3/kernel/Square"
  op: "Square"
  input: "training/RMSprop/gradients/gradients/block3_conv3/Conv2D_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv3/kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block3_conv3/kernel/mul_1"
  op: "Mul"
  input: "training/RMSprop/sub"
  input: "training/RMSprop/RMSprop/update_block3_conv3/kernel/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv3/kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block3_conv3/kernel/add"
  op: "AddV2"
  input: "training/RMSprop/RMSprop/update_block3_conv3/kernel/mul"
  input: "training/RMSprop/RMSprop/update_block3_conv3/kernel/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv3/kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block3_conv3/kernel/AssignVariableOp"
  op: "AssignVariableOp"
  input: "training/RMSprop/block3_conv3/kernel/rms"
  input: "training/RMSprop/RMSprop/update_block3_conv3/kernel/add"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv3/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block3_conv3/kernel/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/block3_conv3/kernel/rms"
  input: "^training/RMSprop/RMSprop/update_block3_conv3/kernel/AssignVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv3/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block3_conv3/kernel/mul_2"
  op: "Mul"
  input: "training/RMSprop/Identity"
  input: "training/RMSprop/gradients/gradients/block3_conv3/Conv2D_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv3/kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block3_conv3/kernel/Sqrt/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/block3_conv3/kernel/rms"
  input: "^training/RMSprop/RMSprop/update_block3_conv3/kernel/AssignVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv3/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block3_conv3/kernel/Sqrt"
  op: "Sqrt"
  input: "training/RMSprop/RMSprop/update_block3_conv3/kernel/Sqrt/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv3/kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block3_conv3/kernel/add_1"
  op: "AddV2"
  input: "training/RMSprop/RMSprop/update_block3_conv3/kernel/Sqrt"
  input: "training/RMSprop/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv3/kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block3_conv3/kernel/truediv"
  op: "RealDiv"
  input: "training/RMSprop/RMSprop/update_block3_conv3/kernel/mul_2"
  input: "training/RMSprop/RMSprop/update_block3_conv3/kernel/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv3/kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block3_conv3/kernel/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block3_conv3/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block3_conv3/kernel/sub"
  op: "Sub"
  input: "training/RMSprop/RMSprop/update_block3_conv3/kernel/ReadVariableOp_1"
  input: "training/RMSprop/RMSprop/update_block3_conv3/kernel/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv3/kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block3_conv3/kernel/AssignVariableOp_1"
  op: "AssignVariableOp"
  input: "block3_conv3/kernel"
  input: "training/RMSprop/RMSprop/update_block3_conv3/kernel/sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv3/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block3_conv3/kernel/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "block3_conv3/kernel"
  input: "^training/RMSprop/RMSprop/update_block3_conv3/kernel/AssignVariableOp_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv3/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block3_conv3/bias/mul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/block3_conv3/bias/rms"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block3_conv3/bias/mul"
  op: "Mul"
  input: "training/RMSprop/Identity_1"
  input: "training/RMSprop/RMSprop/update_block3_conv3/bias/mul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv3/bias"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block3_conv3/bias/Square"
  op: "Square"
  input: "training/RMSprop/gradients/gradients/block3_conv3/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv3/bias"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block3_conv3/bias/mul_1"
  op: "Mul"
  input: "training/RMSprop/sub"
  input: "training/RMSprop/RMSprop/update_block3_conv3/bias/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv3/bias"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block3_conv3/bias/add"
  op: "AddV2"
  input: "training/RMSprop/RMSprop/update_block3_conv3/bias/mul"
  input: "training/RMSprop/RMSprop/update_block3_conv3/bias/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv3/bias"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block3_conv3/bias/AssignVariableOp"
  op: "AssignVariableOp"
  input: "training/RMSprop/block3_conv3/bias/rms"
  input: "training/RMSprop/RMSprop/update_block3_conv3/bias/add"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv3/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block3_conv3/bias/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/block3_conv3/bias/rms"
  input: "^training/RMSprop/RMSprop/update_block3_conv3/bias/AssignVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv3/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block3_conv3/bias/mul_2"
  op: "Mul"
  input: "training/RMSprop/Identity"
  input: "training/RMSprop/gradients/gradients/block3_conv3/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv3/bias"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block3_conv3/bias/Sqrt/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/block3_conv3/bias/rms"
  input: "^training/RMSprop/RMSprop/update_block3_conv3/bias/AssignVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv3/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block3_conv3/bias/Sqrt"
  op: "Sqrt"
  input: "training/RMSprop/RMSprop/update_block3_conv3/bias/Sqrt/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv3/bias"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block3_conv3/bias/add_1"
  op: "AddV2"
  input: "training/RMSprop/RMSprop/update_block3_conv3/bias/Sqrt"
  input: "training/RMSprop/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv3/bias"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block3_conv3/bias/truediv"
  op: "RealDiv"
  input: "training/RMSprop/RMSprop/update_block3_conv3/bias/mul_2"
  input: "training/RMSprop/RMSprop/update_block3_conv3/bias/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv3/bias"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block3_conv3/bias/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block3_conv3/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block3_conv3/bias/sub"
  op: "Sub"
  input: "training/RMSprop/RMSprop/update_block3_conv3/bias/ReadVariableOp_1"
  input: "training/RMSprop/RMSprop/update_block3_conv3/bias/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv3/bias"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block3_conv3/bias/AssignVariableOp_1"
  op: "AssignVariableOp"
  input: "block3_conv3/bias"
  input: "training/RMSprop/RMSprop/update_block3_conv3/bias/sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv3/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block3_conv3/bias/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "block3_conv3/bias"
  input: "^training/RMSprop/RMSprop/update_block3_conv3/bias/AssignVariableOp_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block3_conv3/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block4_conv1/kernel/mul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/block4_conv1/kernel/rms"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block4_conv1/kernel/mul"
  op: "Mul"
  input: "training/RMSprop/Identity_1"
  input: "training/RMSprop/RMSprop/update_block4_conv1/kernel/mul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv1/kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block4_conv1/kernel/Square"
  op: "Square"
  input: "training/RMSprop/gradients/gradients/block4_conv1/Conv2D_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv1/kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block4_conv1/kernel/mul_1"
  op: "Mul"
  input: "training/RMSprop/sub"
  input: "training/RMSprop/RMSprop/update_block4_conv1/kernel/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv1/kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block4_conv1/kernel/add"
  op: "AddV2"
  input: "training/RMSprop/RMSprop/update_block4_conv1/kernel/mul"
  input: "training/RMSprop/RMSprop/update_block4_conv1/kernel/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv1/kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block4_conv1/kernel/AssignVariableOp"
  op: "AssignVariableOp"
  input: "training/RMSprop/block4_conv1/kernel/rms"
  input: "training/RMSprop/RMSprop/update_block4_conv1/kernel/add"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block4_conv1/kernel/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/block4_conv1/kernel/rms"
  input: "^training/RMSprop/RMSprop/update_block4_conv1/kernel/AssignVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block4_conv1/kernel/mul_2"
  op: "Mul"
  input: "training/RMSprop/Identity"
  input: "training/RMSprop/gradients/gradients/block4_conv1/Conv2D_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv1/kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block4_conv1/kernel/Sqrt/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/block4_conv1/kernel/rms"
  input: "^training/RMSprop/RMSprop/update_block4_conv1/kernel/AssignVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block4_conv1/kernel/Sqrt"
  op: "Sqrt"
  input: "training/RMSprop/RMSprop/update_block4_conv1/kernel/Sqrt/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv1/kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block4_conv1/kernel/add_1"
  op: "AddV2"
  input: "training/RMSprop/RMSprop/update_block4_conv1/kernel/Sqrt"
  input: "training/RMSprop/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv1/kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block4_conv1/kernel/truediv"
  op: "RealDiv"
  input: "training/RMSprop/RMSprop/update_block4_conv1/kernel/mul_2"
  input: "training/RMSprop/RMSprop/update_block4_conv1/kernel/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv1/kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block4_conv1/kernel/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block4_conv1/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block4_conv1/kernel/sub"
  op: "Sub"
  input: "training/RMSprop/RMSprop/update_block4_conv1/kernel/ReadVariableOp_1"
  input: "training/RMSprop/RMSprop/update_block4_conv1/kernel/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv1/kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block4_conv1/kernel/AssignVariableOp_1"
  op: "AssignVariableOp"
  input: "block4_conv1/kernel"
  input: "training/RMSprop/RMSprop/update_block4_conv1/kernel/sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block4_conv1/kernel/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "block4_conv1/kernel"
  input: "^training/RMSprop/RMSprop/update_block4_conv1/kernel/AssignVariableOp_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block4_conv1/bias/mul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/block4_conv1/bias/rms"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block4_conv1/bias/mul"
  op: "Mul"
  input: "training/RMSprop/Identity_1"
  input: "training/RMSprop/RMSprop/update_block4_conv1/bias/mul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv1/bias"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block4_conv1/bias/Square"
  op: "Square"
  input: "training/RMSprop/gradients/gradients/block4_conv1/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv1/bias"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block4_conv1/bias/mul_1"
  op: "Mul"
  input: "training/RMSprop/sub"
  input: "training/RMSprop/RMSprop/update_block4_conv1/bias/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv1/bias"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block4_conv1/bias/add"
  op: "AddV2"
  input: "training/RMSprop/RMSprop/update_block4_conv1/bias/mul"
  input: "training/RMSprop/RMSprop/update_block4_conv1/bias/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv1/bias"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block4_conv1/bias/AssignVariableOp"
  op: "AssignVariableOp"
  input: "training/RMSprop/block4_conv1/bias/rms"
  input: "training/RMSprop/RMSprop/update_block4_conv1/bias/add"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block4_conv1/bias/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/block4_conv1/bias/rms"
  input: "^training/RMSprop/RMSprop/update_block4_conv1/bias/AssignVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block4_conv1/bias/mul_2"
  op: "Mul"
  input: "training/RMSprop/Identity"
  input: "training/RMSprop/gradients/gradients/block4_conv1/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv1/bias"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block4_conv1/bias/Sqrt/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/block4_conv1/bias/rms"
  input: "^training/RMSprop/RMSprop/update_block4_conv1/bias/AssignVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block4_conv1/bias/Sqrt"
  op: "Sqrt"
  input: "training/RMSprop/RMSprop/update_block4_conv1/bias/Sqrt/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv1/bias"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block4_conv1/bias/add_1"
  op: "AddV2"
  input: "training/RMSprop/RMSprop/update_block4_conv1/bias/Sqrt"
  input: "training/RMSprop/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv1/bias"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block4_conv1/bias/truediv"
  op: "RealDiv"
  input: "training/RMSprop/RMSprop/update_block4_conv1/bias/mul_2"
  input: "training/RMSprop/RMSprop/update_block4_conv1/bias/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv1/bias"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block4_conv1/bias/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block4_conv1/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block4_conv1/bias/sub"
  op: "Sub"
  input: "training/RMSprop/RMSprop/update_block4_conv1/bias/ReadVariableOp_1"
  input: "training/RMSprop/RMSprop/update_block4_conv1/bias/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv1/bias"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block4_conv1/bias/AssignVariableOp_1"
  op: "AssignVariableOp"
  input: "block4_conv1/bias"
  input: "training/RMSprop/RMSprop/update_block4_conv1/bias/sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block4_conv1/bias/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "block4_conv1/bias"
  input: "^training/RMSprop/RMSprop/update_block4_conv1/bias/AssignVariableOp_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block4_conv2/kernel/mul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/block4_conv2/kernel/rms"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block4_conv2/kernel/mul"
  op: "Mul"
  input: "training/RMSprop/Identity_1"
  input: "training/RMSprop/RMSprop/update_block4_conv2/kernel/mul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv2/kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block4_conv2/kernel/Square"
  op: "Square"
  input: "training/RMSprop/gradients/gradients/block4_conv2/Conv2D_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv2/kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block4_conv2/kernel/mul_1"
  op: "Mul"
  input: "training/RMSprop/sub"
  input: "training/RMSprop/RMSprop/update_block4_conv2/kernel/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv2/kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block4_conv2/kernel/add"
  op: "AddV2"
  input: "training/RMSprop/RMSprop/update_block4_conv2/kernel/mul"
  input: "training/RMSprop/RMSprop/update_block4_conv2/kernel/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv2/kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block4_conv2/kernel/AssignVariableOp"
  op: "AssignVariableOp"
  input: "training/RMSprop/block4_conv2/kernel/rms"
  input: "training/RMSprop/RMSprop/update_block4_conv2/kernel/add"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block4_conv2/kernel/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/block4_conv2/kernel/rms"
  input: "^training/RMSprop/RMSprop/update_block4_conv2/kernel/AssignVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block4_conv2/kernel/mul_2"
  op: "Mul"
  input: "training/RMSprop/Identity"
  input: "training/RMSprop/gradients/gradients/block4_conv2/Conv2D_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv2/kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block4_conv2/kernel/Sqrt/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/block4_conv2/kernel/rms"
  input: "^training/RMSprop/RMSprop/update_block4_conv2/kernel/AssignVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block4_conv2/kernel/Sqrt"
  op: "Sqrt"
  input: "training/RMSprop/RMSprop/update_block4_conv2/kernel/Sqrt/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv2/kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block4_conv2/kernel/add_1"
  op: "AddV2"
  input: "training/RMSprop/RMSprop/update_block4_conv2/kernel/Sqrt"
  input: "training/RMSprop/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv2/kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block4_conv2/kernel/truediv"
  op: "RealDiv"
  input: "training/RMSprop/RMSprop/update_block4_conv2/kernel/mul_2"
  input: "training/RMSprop/RMSprop/update_block4_conv2/kernel/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv2/kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block4_conv2/kernel/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block4_conv2/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block4_conv2/kernel/sub"
  op: "Sub"
  input: "training/RMSprop/RMSprop/update_block4_conv2/kernel/ReadVariableOp_1"
  input: "training/RMSprop/RMSprop/update_block4_conv2/kernel/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv2/kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block4_conv2/kernel/AssignVariableOp_1"
  op: "AssignVariableOp"
  input: "block4_conv2/kernel"
  input: "training/RMSprop/RMSprop/update_block4_conv2/kernel/sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block4_conv2/kernel/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "block4_conv2/kernel"
  input: "^training/RMSprop/RMSprop/update_block4_conv2/kernel/AssignVariableOp_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block4_conv2/bias/mul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/block4_conv2/bias/rms"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block4_conv2/bias/mul"
  op: "Mul"
  input: "training/RMSprop/Identity_1"
  input: "training/RMSprop/RMSprop/update_block4_conv2/bias/mul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv2/bias"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block4_conv2/bias/Square"
  op: "Square"
  input: "training/RMSprop/gradients/gradients/block4_conv2/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv2/bias"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block4_conv2/bias/mul_1"
  op: "Mul"
  input: "training/RMSprop/sub"
  input: "training/RMSprop/RMSprop/update_block4_conv2/bias/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv2/bias"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block4_conv2/bias/add"
  op: "AddV2"
  input: "training/RMSprop/RMSprop/update_block4_conv2/bias/mul"
  input: "training/RMSprop/RMSprop/update_block4_conv2/bias/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv2/bias"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block4_conv2/bias/AssignVariableOp"
  op: "AssignVariableOp"
  input: "training/RMSprop/block4_conv2/bias/rms"
  input: "training/RMSprop/RMSprop/update_block4_conv2/bias/add"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block4_conv2/bias/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/block4_conv2/bias/rms"
  input: "^training/RMSprop/RMSprop/update_block4_conv2/bias/AssignVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block4_conv2/bias/mul_2"
  op: "Mul"
  input: "training/RMSprop/Identity"
  input: "training/RMSprop/gradients/gradients/block4_conv2/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv2/bias"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block4_conv2/bias/Sqrt/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/block4_conv2/bias/rms"
  input: "^training/RMSprop/RMSprop/update_block4_conv2/bias/AssignVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block4_conv2/bias/Sqrt"
  op: "Sqrt"
  input: "training/RMSprop/RMSprop/update_block4_conv2/bias/Sqrt/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv2/bias"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block4_conv2/bias/add_1"
  op: "AddV2"
  input: "training/RMSprop/RMSprop/update_block4_conv2/bias/Sqrt"
  input: "training/RMSprop/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv2/bias"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block4_conv2/bias/truediv"
  op: "RealDiv"
  input: "training/RMSprop/RMSprop/update_block4_conv2/bias/mul_2"
  input: "training/RMSprop/RMSprop/update_block4_conv2/bias/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv2/bias"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block4_conv2/bias/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block4_conv2/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block4_conv2/bias/sub"
  op: "Sub"
  input: "training/RMSprop/RMSprop/update_block4_conv2/bias/ReadVariableOp_1"
  input: "training/RMSprop/RMSprop/update_block4_conv2/bias/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv2/bias"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block4_conv2/bias/AssignVariableOp_1"
  op: "AssignVariableOp"
  input: "block4_conv2/bias"
  input: "training/RMSprop/RMSprop/update_block4_conv2/bias/sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block4_conv2/bias/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "block4_conv2/bias"
  input: "^training/RMSprop/RMSprop/update_block4_conv2/bias/AssignVariableOp_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block4_conv3/kernel/mul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/block4_conv3/kernel/rms"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block4_conv3/kernel/mul"
  op: "Mul"
  input: "training/RMSprop/Identity_1"
  input: "training/RMSprop/RMSprop/update_block4_conv3/kernel/mul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv3/kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block4_conv3/kernel/Square"
  op: "Square"
  input: "training/RMSprop/gradients/gradients/block4_conv3/Conv2D_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv3/kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block4_conv3/kernel/mul_1"
  op: "Mul"
  input: "training/RMSprop/sub"
  input: "training/RMSprop/RMSprop/update_block4_conv3/kernel/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv3/kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block4_conv3/kernel/add"
  op: "AddV2"
  input: "training/RMSprop/RMSprop/update_block4_conv3/kernel/mul"
  input: "training/RMSprop/RMSprop/update_block4_conv3/kernel/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv3/kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block4_conv3/kernel/AssignVariableOp"
  op: "AssignVariableOp"
  input: "training/RMSprop/block4_conv3/kernel/rms"
  input: "training/RMSprop/RMSprop/update_block4_conv3/kernel/add"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv3/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block4_conv3/kernel/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/block4_conv3/kernel/rms"
  input: "^training/RMSprop/RMSprop/update_block4_conv3/kernel/AssignVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv3/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block4_conv3/kernel/mul_2"
  op: "Mul"
  input: "training/RMSprop/Identity"
  input: "training/RMSprop/gradients/gradients/block4_conv3/Conv2D_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv3/kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block4_conv3/kernel/Sqrt/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/block4_conv3/kernel/rms"
  input: "^training/RMSprop/RMSprop/update_block4_conv3/kernel/AssignVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv3/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block4_conv3/kernel/Sqrt"
  op: "Sqrt"
  input: "training/RMSprop/RMSprop/update_block4_conv3/kernel/Sqrt/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv3/kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block4_conv3/kernel/add_1"
  op: "AddV2"
  input: "training/RMSprop/RMSprop/update_block4_conv3/kernel/Sqrt"
  input: "training/RMSprop/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv3/kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block4_conv3/kernel/truediv"
  op: "RealDiv"
  input: "training/RMSprop/RMSprop/update_block4_conv3/kernel/mul_2"
  input: "training/RMSprop/RMSprop/update_block4_conv3/kernel/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv3/kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block4_conv3/kernel/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block4_conv3/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block4_conv3/kernel/sub"
  op: "Sub"
  input: "training/RMSprop/RMSprop/update_block4_conv3/kernel/ReadVariableOp_1"
  input: "training/RMSprop/RMSprop/update_block4_conv3/kernel/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv3/kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block4_conv3/kernel/AssignVariableOp_1"
  op: "AssignVariableOp"
  input: "block4_conv3/kernel"
  input: "training/RMSprop/RMSprop/update_block4_conv3/kernel/sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv3/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block4_conv3/kernel/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "block4_conv3/kernel"
  input: "^training/RMSprop/RMSprop/update_block4_conv3/kernel/AssignVariableOp_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv3/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block4_conv3/bias/mul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/block4_conv3/bias/rms"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block4_conv3/bias/mul"
  op: "Mul"
  input: "training/RMSprop/Identity_1"
  input: "training/RMSprop/RMSprop/update_block4_conv3/bias/mul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv3/bias"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block4_conv3/bias/Square"
  op: "Square"
  input: "training/RMSprop/gradients/gradients/block4_conv3/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv3/bias"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block4_conv3/bias/mul_1"
  op: "Mul"
  input: "training/RMSprop/sub"
  input: "training/RMSprop/RMSprop/update_block4_conv3/bias/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv3/bias"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block4_conv3/bias/add"
  op: "AddV2"
  input: "training/RMSprop/RMSprop/update_block4_conv3/bias/mul"
  input: "training/RMSprop/RMSprop/update_block4_conv3/bias/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv3/bias"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block4_conv3/bias/AssignVariableOp"
  op: "AssignVariableOp"
  input: "training/RMSprop/block4_conv3/bias/rms"
  input: "training/RMSprop/RMSprop/update_block4_conv3/bias/add"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv3/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block4_conv3/bias/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/block4_conv3/bias/rms"
  input: "^training/RMSprop/RMSprop/update_block4_conv3/bias/AssignVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv3/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block4_conv3/bias/mul_2"
  op: "Mul"
  input: "training/RMSprop/Identity"
  input: "training/RMSprop/gradients/gradients/block4_conv3/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv3/bias"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block4_conv3/bias/Sqrt/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/block4_conv3/bias/rms"
  input: "^training/RMSprop/RMSprop/update_block4_conv3/bias/AssignVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv3/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block4_conv3/bias/Sqrt"
  op: "Sqrt"
  input: "training/RMSprop/RMSprop/update_block4_conv3/bias/Sqrt/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv3/bias"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block4_conv3/bias/add_1"
  op: "AddV2"
  input: "training/RMSprop/RMSprop/update_block4_conv3/bias/Sqrt"
  input: "training/RMSprop/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv3/bias"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block4_conv3/bias/truediv"
  op: "RealDiv"
  input: "training/RMSprop/RMSprop/update_block4_conv3/bias/mul_2"
  input: "training/RMSprop/RMSprop/update_block4_conv3/bias/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv3/bias"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block4_conv3/bias/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block4_conv3/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block4_conv3/bias/sub"
  op: "Sub"
  input: "training/RMSprop/RMSprop/update_block4_conv3/bias/ReadVariableOp_1"
  input: "training/RMSprop/RMSprop/update_block4_conv3/bias/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv3/bias"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block4_conv3/bias/AssignVariableOp_1"
  op: "AssignVariableOp"
  input: "block4_conv3/bias"
  input: "training/RMSprop/RMSprop/update_block4_conv3/bias/sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv3/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block4_conv3/bias/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "block4_conv3/bias"
  input: "^training/RMSprop/RMSprop/update_block4_conv3/bias/AssignVariableOp_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block4_conv3/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block5_conv1/kernel/mul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/block5_conv1/kernel/rms"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block5_conv1/kernel/mul"
  op: "Mul"
  input: "training/RMSprop/Identity_1"
  input: "training/RMSprop/RMSprop/update_block5_conv1/kernel/mul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv1/kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block5_conv1/kernel/Square"
  op: "Square"
  input: "training/RMSprop/gradients/gradients/block5_conv1/Conv2D_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv1/kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block5_conv1/kernel/mul_1"
  op: "Mul"
  input: "training/RMSprop/sub"
  input: "training/RMSprop/RMSprop/update_block5_conv1/kernel/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv1/kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block5_conv1/kernel/add"
  op: "AddV2"
  input: "training/RMSprop/RMSprop/update_block5_conv1/kernel/mul"
  input: "training/RMSprop/RMSprop/update_block5_conv1/kernel/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv1/kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block5_conv1/kernel/AssignVariableOp"
  op: "AssignVariableOp"
  input: "training/RMSprop/block5_conv1/kernel/rms"
  input: "training/RMSprop/RMSprop/update_block5_conv1/kernel/add"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block5_conv1/kernel/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/block5_conv1/kernel/rms"
  input: "^training/RMSprop/RMSprop/update_block5_conv1/kernel/AssignVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block5_conv1/kernel/mul_2"
  op: "Mul"
  input: "training/RMSprop/Identity"
  input: "training/RMSprop/gradients/gradients/block5_conv1/Conv2D_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv1/kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block5_conv1/kernel/Sqrt/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/block5_conv1/kernel/rms"
  input: "^training/RMSprop/RMSprop/update_block5_conv1/kernel/AssignVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block5_conv1/kernel/Sqrt"
  op: "Sqrt"
  input: "training/RMSprop/RMSprop/update_block5_conv1/kernel/Sqrt/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv1/kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block5_conv1/kernel/add_1"
  op: "AddV2"
  input: "training/RMSprop/RMSprop/update_block5_conv1/kernel/Sqrt"
  input: "training/RMSprop/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv1/kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block5_conv1/kernel/truediv"
  op: "RealDiv"
  input: "training/RMSprop/RMSprop/update_block5_conv1/kernel/mul_2"
  input: "training/RMSprop/RMSprop/update_block5_conv1/kernel/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv1/kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block5_conv1/kernel/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block5_conv1/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block5_conv1/kernel/sub"
  op: "Sub"
  input: "training/RMSprop/RMSprop/update_block5_conv1/kernel/ReadVariableOp_1"
  input: "training/RMSprop/RMSprop/update_block5_conv1/kernel/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv1/kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block5_conv1/kernel/AssignVariableOp_1"
  op: "AssignVariableOp"
  input: "block5_conv1/kernel"
  input: "training/RMSprop/RMSprop/update_block5_conv1/kernel/sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block5_conv1/kernel/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "block5_conv1/kernel"
  input: "^training/RMSprop/RMSprop/update_block5_conv1/kernel/AssignVariableOp_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block5_conv1/bias/mul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/block5_conv1/bias/rms"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block5_conv1/bias/mul"
  op: "Mul"
  input: "training/RMSprop/Identity_1"
  input: "training/RMSprop/RMSprop/update_block5_conv1/bias/mul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv1/bias"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block5_conv1/bias/Square"
  op: "Square"
  input: "training/RMSprop/gradients/gradients/block5_conv1/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv1/bias"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block5_conv1/bias/mul_1"
  op: "Mul"
  input: "training/RMSprop/sub"
  input: "training/RMSprop/RMSprop/update_block5_conv1/bias/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv1/bias"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block5_conv1/bias/add"
  op: "AddV2"
  input: "training/RMSprop/RMSprop/update_block5_conv1/bias/mul"
  input: "training/RMSprop/RMSprop/update_block5_conv1/bias/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv1/bias"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block5_conv1/bias/AssignVariableOp"
  op: "AssignVariableOp"
  input: "training/RMSprop/block5_conv1/bias/rms"
  input: "training/RMSprop/RMSprop/update_block5_conv1/bias/add"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block5_conv1/bias/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/block5_conv1/bias/rms"
  input: "^training/RMSprop/RMSprop/update_block5_conv1/bias/AssignVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block5_conv1/bias/mul_2"
  op: "Mul"
  input: "training/RMSprop/Identity"
  input: "training/RMSprop/gradients/gradients/block5_conv1/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv1/bias"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block5_conv1/bias/Sqrt/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/block5_conv1/bias/rms"
  input: "^training/RMSprop/RMSprop/update_block5_conv1/bias/AssignVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block5_conv1/bias/Sqrt"
  op: "Sqrt"
  input: "training/RMSprop/RMSprop/update_block5_conv1/bias/Sqrt/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv1/bias"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block5_conv1/bias/add_1"
  op: "AddV2"
  input: "training/RMSprop/RMSprop/update_block5_conv1/bias/Sqrt"
  input: "training/RMSprop/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv1/bias"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block5_conv1/bias/truediv"
  op: "RealDiv"
  input: "training/RMSprop/RMSprop/update_block5_conv1/bias/mul_2"
  input: "training/RMSprop/RMSprop/update_block5_conv1/bias/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv1/bias"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block5_conv1/bias/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block5_conv1/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block5_conv1/bias/sub"
  op: "Sub"
  input: "training/RMSprop/RMSprop/update_block5_conv1/bias/ReadVariableOp_1"
  input: "training/RMSprop/RMSprop/update_block5_conv1/bias/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv1/bias"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block5_conv1/bias/AssignVariableOp_1"
  op: "AssignVariableOp"
  input: "block5_conv1/bias"
  input: "training/RMSprop/RMSprop/update_block5_conv1/bias/sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block5_conv1/bias/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "block5_conv1/bias"
  input: "^training/RMSprop/RMSprop/update_block5_conv1/bias/AssignVariableOp_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block5_conv2/kernel/mul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/block5_conv2/kernel/rms"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block5_conv2/kernel/mul"
  op: "Mul"
  input: "training/RMSprop/Identity_1"
  input: "training/RMSprop/RMSprop/update_block5_conv2/kernel/mul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv2/kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block5_conv2/kernel/Square"
  op: "Square"
  input: "training/RMSprop/gradients/gradients/block5_conv2/Conv2D_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv2/kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block5_conv2/kernel/mul_1"
  op: "Mul"
  input: "training/RMSprop/sub"
  input: "training/RMSprop/RMSprop/update_block5_conv2/kernel/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv2/kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block5_conv2/kernel/add"
  op: "AddV2"
  input: "training/RMSprop/RMSprop/update_block5_conv2/kernel/mul"
  input: "training/RMSprop/RMSprop/update_block5_conv2/kernel/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv2/kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block5_conv2/kernel/AssignVariableOp"
  op: "AssignVariableOp"
  input: "training/RMSprop/block5_conv2/kernel/rms"
  input: "training/RMSprop/RMSprop/update_block5_conv2/kernel/add"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block5_conv2/kernel/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/block5_conv2/kernel/rms"
  input: "^training/RMSprop/RMSprop/update_block5_conv2/kernel/AssignVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block5_conv2/kernel/mul_2"
  op: "Mul"
  input: "training/RMSprop/Identity"
  input: "training/RMSprop/gradients/gradients/block5_conv2/Conv2D_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv2/kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block5_conv2/kernel/Sqrt/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/block5_conv2/kernel/rms"
  input: "^training/RMSprop/RMSprop/update_block5_conv2/kernel/AssignVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block5_conv2/kernel/Sqrt"
  op: "Sqrt"
  input: "training/RMSprop/RMSprop/update_block5_conv2/kernel/Sqrt/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv2/kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block5_conv2/kernel/add_1"
  op: "AddV2"
  input: "training/RMSprop/RMSprop/update_block5_conv2/kernel/Sqrt"
  input: "training/RMSprop/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv2/kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block5_conv2/kernel/truediv"
  op: "RealDiv"
  input: "training/RMSprop/RMSprop/update_block5_conv2/kernel/mul_2"
  input: "training/RMSprop/RMSprop/update_block5_conv2/kernel/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv2/kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block5_conv2/kernel/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block5_conv2/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block5_conv2/kernel/sub"
  op: "Sub"
  input: "training/RMSprop/RMSprop/update_block5_conv2/kernel/ReadVariableOp_1"
  input: "training/RMSprop/RMSprop/update_block5_conv2/kernel/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv2/kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block5_conv2/kernel/AssignVariableOp_1"
  op: "AssignVariableOp"
  input: "block5_conv2/kernel"
  input: "training/RMSprop/RMSprop/update_block5_conv2/kernel/sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block5_conv2/kernel/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "block5_conv2/kernel"
  input: "^training/RMSprop/RMSprop/update_block5_conv2/kernel/AssignVariableOp_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block5_conv2/bias/mul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/block5_conv2/bias/rms"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block5_conv2/bias/mul"
  op: "Mul"
  input: "training/RMSprop/Identity_1"
  input: "training/RMSprop/RMSprop/update_block5_conv2/bias/mul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv2/bias"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block5_conv2/bias/Square"
  op: "Square"
  input: "training/RMSprop/gradients/gradients/block5_conv2/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv2/bias"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block5_conv2/bias/mul_1"
  op: "Mul"
  input: "training/RMSprop/sub"
  input: "training/RMSprop/RMSprop/update_block5_conv2/bias/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv2/bias"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block5_conv2/bias/add"
  op: "AddV2"
  input: "training/RMSprop/RMSprop/update_block5_conv2/bias/mul"
  input: "training/RMSprop/RMSprop/update_block5_conv2/bias/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv2/bias"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block5_conv2/bias/AssignVariableOp"
  op: "AssignVariableOp"
  input: "training/RMSprop/block5_conv2/bias/rms"
  input: "training/RMSprop/RMSprop/update_block5_conv2/bias/add"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block5_conv2/bias/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/block5_conv2/bias/rms"
  input: "^training/RMSprop/RMSprop/update_block5_conv2/bias/AssignVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block5_conv2/bias/mul_2"
  op: "Mul"
  input: "training/RMSprop/Identity"
  input: "training/RMSprop/gradients/gradients/block5_conv2/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv2/bias"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block5_conv2/bias/Sqrt/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/block5_conv2/bias/rms"
  input: "^training/RMSprop/RMSprop/update_block5_conv2/bias/AssignVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block5_conv2/bias/Sqrt"
  op: "Sqrt"
  input: "training/RMSprop/RMSprop/update_block5_conv2/bias/Sqrt/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv2/bias"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block5_conv2/bias/add_1"
  op: "AddV2"
  input: "training/RMSprop/RMSprop/update_block5_conv2/bias/Sqrt"
  input: "training/RMSprop/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv2/bias"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block5_conv2/bias/truediv"
  op: "RealDiv"
  input: "training/RMSprop/RMSprop/update_block5_conv2/bias/mul_2"
  input: "training/RMSprop/RMSprop/update_block5_conv2/bias/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv2/bias"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block5_conv2/bias/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block5_conv2/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block5_conv2/bias/sub"
  op: "Sub"
  input: "training/RMSprop/RMSprop/update_block5_conv2/bias/ReadVariableOp_1"
  input: "training/RMSprop/RMSprop/update_block5_conv2/bias/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv2/bias"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block5_conv2/bias/AssignVariableOp_1"
  op: "AssignVariableOp"
  input: "block5_conv2/bias"
  input: "training/RMSprop/RMSprop/update_block5_conv2/bias/sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block5_conv2/bias/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "block5_conv2/bias"
  input: "^training/RMSprop/RMSprop/update_block5_conv2/bias/AssignVariableOp_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block5_conv3/kernel/mul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/block5_conv3/kernel/rms"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block5_conv3/kernel/mul"
  op: "Mul"
  input: "training/RMSprop/Identity_1"
  input: "training/RMSprop/RMSprop/update_block5_conv3/kernel/mul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv3/kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block5_conv3/kernel/Square"
  op: "Square"
  input: "training/RMSprop/gradients/gradients/block5_conv3/Conv2D_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv3/kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block5_conv3/kernel/mul_1"
  op: "Mul"
  input: "training/RMSprop/sub"
  input: "training/RMSprop/RMSprop/update_block5_conv3/kernel/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv3/kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block5_conv3/kernel/add"
  op: "AddV2"
  input: "training/RMSprop/RMSprop/update_block5_conv3/kernel/mul"
  input: "training/RMSprop/RMSprop/update_block5_conv3/kernel/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv3/kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block5_conv3/kernel/AssignVariableOp"
  op: "AssignVariableOp"
  input: "training/RMSprop/block5_conv3/kernel/rms"
  input: "training/RMSprop/RMSprop/update_block5_conv3/kernel/add"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv3/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block5_conv3/kernel/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/block5_conv3/kernel/rms"
  input: "^training/RMSprop/RMSprop/update_block5_conv3/kernel/AssignVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv3/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block5_conv3/kernel/mul_2"
  op: "Mul"
  input: "training/RMSprop/Identity"
  input: "training/RMSprop/gradients/gradients/block5_conv3/Conv2D_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv3/kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block5_conv3/kernel/Sqrt/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/block5_conv3/kernel/rms"
  input: "^training/RMSprop/RMSprop/update_block5_conv3/kernel/AssignVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv3/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block5_conv3/kernel/Sqrt"
  op: "Sqrt"
  input: "training/RMSprop/RMSprop/update_block5_conv3/kernel/Sqrt/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv3/kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block5_conv3/kernel/add_1"
  op: "AddV2"
  input: "training/RMSprop/RMSprop/update_block5_conv3/kernel/Sqrt"
  input: "training/RMSprop/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv3/kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block5_conv3/kernel/truediv"
  op: "RealDiv"
  input: "training/RMSprop/RMSprop/update_block5_conv3/kernel/mul_2"
  input: "training/RMSprop/RMSprop/update_block5_conv3/kernel/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv3/kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block5_conv3/kernel/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block5_conv3/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block5_conv3/kernel/sub"
  op: "Sub"
  input: "training/RMSprop/RMSprop/update_block5_conv3/kernel/ReadVariableOp_1"
  input: "training/RMSprop/RMSprop/update_block5_conv3/kernel/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv3/kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block5_conv3/kernel/AssignVariableOp_1"
  op: "AssignVariableOp"
  input: "block5_conv3/kernel"
  input: "training/RMSprop/RMSprop/update_block5_conv3/kernel/sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv3/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block5_conv3/kernel/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "block5_conv3/kernel"
  input: "^training/RMSprop/RMSprop/update_block5_conv3/kernel/AssignVariableOp_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv3/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block5_conv3/bias/mul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/block5_conv3/bias/rms"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block5_conv3/bias/mul"
  op: "Mul"
  input: "training/RMSprop/Identity_1"
  input: "training/RMSprop/RMSprop/update_block5_conv3/bias/mul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv3/bias"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block5_conv3/bias/Square"
  op: "Square"
  input: "training/RMSprop/gradients/gradients/block5_conv3/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv3/bias"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block5_conv3/bias/mul_1"
  op: "Mul"
  input: "training/RMSprop/sub"
  input: "training/RMSprop/RMSprop/update_block5_conv3/bias/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv3/bias"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block5_conv3/bias/add"
  op: "AddV2"
  input: "training/RMSprop/RMSprop/update_block5_conv3/bias/mul"
  input: "training/RMSprop/RMSprop/update_block5_conv3/bias/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv3/bias"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block5_conv3/bias/AssignVariableOp"
  op: "AssignVariableOp"
  input: "training/RMSprop/block5_conv3/bias/rms"
  input: "training/RMSprop/RMSprop/update_block5_conv3/bias/add"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv3/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block5_conv3/bias/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/block5_conv3/bias/rms"
  input: "^training/RMSprop/RMSprop/update_block5_conv3/bias/AssignVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv3/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block5_conv3/bias/mul_2"
  op: "Mul"
  input: "training/RMSprop/Identity"
  input: "training/RMSprop/gradients/gradients/block5_conv3/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv3/bias"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block5_conv3/bias/Sqrt/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/block5_conv3/bias/rms"
  input: "^training/RMSprop/RMSprop/update_block5_conv3/bias/AssignVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv3/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block5_conv3/bias/Sqrt"
  op: "Sqrt"
  input: "training/RMSprop/RMSprop/update_block5_conv3/bias/Sqrt/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv3/bias"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block5_conv3/bias/add_1"
  op: "AddV2"
  input: "training/RMSprop/RMSprop/update_block5_conv3/bias/Sqrt"
  input: "training/RMSprop/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv3/bias"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block5_conv3/bias/truediv"
  op: "RealDiv"
  input: "training/RMSprop/RMSprop/update_block5_conv3/bias/mul_2"
  input: "training/RMSprop/RMSprop/update_block5_conv3/bias/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv3/bias"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block5_conv3/bias/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "block5_conv3/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block5_conv3/bias/sub"
  op: "Sub"
  input: "training/RMSprop/RMSprop/update_block5_conv3/bias/ReadVariableOp_1"
  input: "training/RMSprop/RMSprop/update_block5_conv3/bias/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv3/bias"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block5_conv3/bias/AssignVariableOp_1"
  op: "AssignVariableOp"
  input: "block5_conv3/bias"
  input: "training/RMSprop/RMSprop/update_block5_conv3/bias/sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv3/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_block5_conv3/bias/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "block5_conv3/bias"
  input: "^training/RMSprop/RMSprop/update_block5_conv3/bias/AssignVariableOp_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@block5_conv3/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_fc1/kernel/mul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/fc1/kernel/rms"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_fc1/kernel/mul"
  op: "Mul"
  input: "training/RMSprop/Identity_1"
  input: "training/RMSprop/RMSprop/update_fc1/kernel/mul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc1/kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_fc1/kernel/Square"
  op: "Square"
  input: "training/RMSprop/gradients/gradients/fc1/MatMul_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc1/kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_fc1/kernel/mul_1"
  op: "Mul"
  input: "training/RMSprop/sub"
  input: "training/RMSprop/RMSprop/update_fc1/kernel/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc1/kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_fc1/kernel/add"
  op: "AddV2"
  input: "training/RMSprop/RMSprop/update_fc1/kernel/mul"
  input: "training/RMSprop/RMSprop/update_fc1/kernel/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc1/kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_fc1/kernel/AssignVariableOp"
  op: "AssignVariableOp"
  input: "training/RMSprop/fc1/kernel/rms"
  input: "training/RMSprop/RMSprop/update_fc1/kernel/add"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_fc1/kernel/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/fc1/kernel/rms"
  input: "^training/RMSprop/RMSprop/update_fc1/kernel/AssignVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_fc1/kernel/mul_2"
  op: "Mul"
  input: "training/RMSprop/Identity"
  input: "training/RMSprop/gradients/gradients/fc1/MatMul_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc1/kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_fc1/kernel/Sqrt/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/fc1/kernel/rms"
  input: "^training/RMSprop/RMSprop/update_fc1/kernel/AssignVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_fc1/kernel/Sqrt"
  op: "Sqrt"
  input: "training/RMSprop/RMSprop/update_fc1/kernel/Sqrt/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc1/kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_fc1/kernel/add_1"
  op: "AddV2"
  input: "training/RMSprop/RMSprop/update_fc1/kernel/Sqrt"
  input: "training/RMSprop/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc1/kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_fc1/kernel/truediv"
  op: "RealDiv"
  input: "training/RMSprop/RMSprop/update_fc1/kernel/mul_2"
  input: "training/RMSprop/RMSprop/update_fc1/kernel/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc1/kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_fc1/kernel/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "fc1/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_fc1/kernel/sub"
  op: "Sub"
  input: "training/RMSprop/RMSprop/update_fc1/kernel/ReadVariableOp_1"
  input: "training/RMSprop/RMSprop/update_fc1/kernel/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc1/kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_fc1/kernel/AssignVariableOp_1"
  op: "AssignVariableOp"
  input: "fc1/kernel"
  input: "training/RMSprop/RMSprop/update_fc1/kernel/sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_fc1/kernel/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "fc1/kernel"
  input: "^training/RMSprop/RMSprop/update_fc1/kernel/AssignVariableOp_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_fc1/bias/mul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/fc1/bias/rms"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_fc1/bias/mul"
  op: "Mul"
  input: "training/RMSprop/Identity_1"
  input: "training/RMSprop/RMSprop/update_fc1/bias/mul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc1/bias"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_fc1/bias/Square"
  op: "Square"
  input: "training/RMSprop/gradients/gradients/fc1/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc1/bias"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_fc1/bias/mul_1"
  op: "Mul"
  input: "training/RMSprop/sub"
  input: "training/RMSprop/RMSprop/update_fc1/bias/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc1/bias"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_fc1/bias/add"
  op: "AddV2"
  input: "training/RMSprop/RMSprop/update_fc1/bias/mul"
  input: "training/RMSprop/RMSprop/update_fc1/bias/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc1/bias"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_fc1/bias/AssignVariableOp"
  op: "AssignVariableOp"
  input: "training/RMSprop/fc1/bias/rms"
  input: "training/RMSprop/RMSprop/update_fc1/bias/add"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_fc1/bias/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/fc1/bias/rms"
  input: "^training/RMSprop/RMSprop/update_fc1/bias/AssignVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_fc1/bias/mul_2"
  op: "Mul"
  input: "training/RMSprop/Identity"
  input: "training/RMSprop/gradients/gradients/fc1/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc1/bias"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_fc1/bias/Sqrt/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/fc1/bias/rms"
  input: "^training/RMSprop/RMSprop/update_fc1/bias/AssignVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_fc1/bias/Sqrt"
  op: "Sqrt"
  input: "training/RMSprop/RMSprop/update_fc1/bias/Sqrt/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc1/bias"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_fc1/bias/add_1"
  op: "AddV2"
  input: "training/RMSprop/RMSprop/update_fc1/bias/Sqrt"
  input: "training/RMSprop/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc1/bias"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_fc1/bias/truediv"
  op: "RealDiv"
  input: "training/RMSprop/RMSprop/update_fc1/bias/mul_2"
  input: "training/RMSprop/RMSprop/update_fc1/bias/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc1/bias"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_fc1/bias/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "fc1/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_fc1/bias/sub"
  op: "Sub"
  input: "training/RMSprop/RMSprop/update_fc1/bias/ReadVariableOp_1"
  input: "training/RMSprop/RMSprop/update_fc1/bias/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc1/bias"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_fc1/bias/AssignVariableOp_1"
  op: "AssignVariableOp"
  input: "fc1/bias"
  input: "training/RMSprop/RMSprop/update_fc1/bias/sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_fc1/bias/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "fc1/bias"
  input: "^training/RMSprop/RMSprop/update_fc1/bias/AssignVariableOp_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_fc2/kernel/mul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/fc2/kernel/rms"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_fc2/kernel/mul"
  op: "Mul"
  input: "training/RMSprop/Identity_1"
  input: "training/RMSprop/RMSprop/update_fc2/kernel/mul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2/kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_fc2/kernel/Square"
  op: "Square"
  input: "training/RMSprop/gradients/gradients/fc2/MatMul_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2/kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_fc2/kernel/mul_1"
  op: "Mul"
  input: "training/RMSprop/sub"
  input: "training/RMSprop/RMSprop/update_fc2/kernel/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2/kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_fc2/kernel/add"
  op: "AddV2"
  input: "training/RMSprop/RMSprop/update_fc2/kernel/mul"
  input: "training/RMSprop/RMSprop/update_fc2/kernel/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2/kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_fc2/kernel/AssignVariableOp"
  op: "AssignVariableOp"
  input: "training/RMSprop/fc2/kernel/rms"
  input: "training/RMSprop/RMSprop/update_fc2/kernel/add"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_fc2/kernel/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/fc2/kernel/rms"
  input: "^training/RMSprop/RMSprop/update_fc2/kernel/AssignVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_fc2/kernel/mul_2"
  op: "Mul"
  input: "training/RMSprop/Identity"
  input: "training/RMSprop/gradients/gradients/fc2/MatMul_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2/kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_fc2/kernel/Sqrt/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/fc2/kernel/rms"
  input: "^training/RMSprop/RMSprop/update_fc2/kernel/AssignVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_fc2/kernel/Sqrt"
  op: "Sqrt"
  input: "training/RMSprop/RMSprop/update_fc2/kernel/Sqrt/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2/kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_fc2/kernel/add_1"
  op: "AddV2"
  input: "training/RMSprop/RMSprop/update_fc2/kernel/Sqrt"
  input: "training/RMSprop/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2/kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_fc2/kernel/truediv"
  op: "RealDiv"
  input: "training/RMSprop/RMSprop/update_fc2/kernel/mul_2"
  input: "training/RMSprop/RMSprop/update_fc2/kernel/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2/kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_fc2/kernel/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "fc2/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_fc2/kernel/sub"
  op: "Sub"
  input: "training/RMSprop/RMSprop/update_fc2/kernel/ReadVariableOp_1"
  input: "training/RMSprop/RMSprop/update_fc2/kernel/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2/kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_fc2/kernel/AssignVariableOp_1"
  op: "AssignVariableOp"
  input: "fc2/kernel"
  input: "training/RMSprop/RMSprop/update_fc2/kernel/sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_fc2/kernel/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "fc2/kernel"
  input: "^training/RMSprop/RMSprop/update_fc2/kernel/AssignVariableOp_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_fc2/bias/mul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/fc2/bias/rms"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_fc2/bias/mul"
  op: "Mul"
  input: "training/RMSprop/Identity_1"
  input: "training/RMSprop/RMSprop/update_fc2/bias/mul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2/bias"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_fc2/bias/Square"
  op: "Square"
  input: "training/RMSprop/gradients/gradients/fc2/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2/bias"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_fc2/bias/mul_1"
  op: "Mul"
  input: "training/RMSprop/sub"
  input: "training/RMSprop/RMSprop/update_fc2/bias/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2/bias"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_fc2/bias/add"
  op: "AddV2"
  input: "training/RMSprop/RMSprop/update_fc2/bias/mul"
  input: "training/RMSprop/RMSprop/update_fc2/bias/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2/bias"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_fc2/bias/AssignVariableOp"
  op: "AssignVariableOp"
  input: "training/RMSprop/fc2/bias/rms"
  input: "training/RMSprop/RMSprop/update_fc2/bias/add"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_fc2/bias/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/fc2/bias/rms"
  input: "^training/RMSprop/RMSprop/update_fc2/bias/AssignVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_fc2/bias/mul_2"
  op: "Mul"
  input: "training/RMSprop/Identity"
  input: "training/RMSprop/gradients/gradients/fc2/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2/bias"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_fc2/bias/Sqrt/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/fc2/bias/rms"
  input: "^training/RMSprop/RMSprop/update_fc2/bias/AssignVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_fc2/bias/Sqrt"
  op: "Sqrt"
  input: "training/RMSprop/RMSprop/update_fc2/bias/Sqrt/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2/bias"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_fc2/bias/add_1"
  op: "AddV2"
  input: "training/RMSprop/RMSprop/update_fc2/bias/Sqrt"
  input: "training/RMSprop/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2/bias"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_fc2/bias/truediv"
  op: "RealDiv"
  input: "training/RMSprop/RMSprop/update_fc2/bias/mul_2"
  input: "training/RMSprop/RMSprop/update_fc2/bias/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2/bias"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_fc2/bias/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "fc2/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_fc2/bias/sub"
  op: "Sub"
  input: "training/RMSprop/RMSprop/update_fc2/bias/ReadVariableOp_1"
  input: "training/RMSprop/RMSprop/update_fc2/bias/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2/bias"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_fc2/bias/AssignVariableOp_1"
  op: "AssignVariableOp"
  input: "fc2/bias"
  input: "training/RMSprop/RMSprop/update_fc2/bias/sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_fc2/bias/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "fc2/bias"
  input: "^training/RMSprop/RMSprop/update_fc2/bias/AssignVariableOp_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_predictions/kernel/mul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/predictions/kernel/rms"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_predictions/kernel/mul"
  op: "Mul"
  input: "training/RMSprop/Identity_1"
  input: "training/RMSprop/RMSprop/update_predictions/kernel/mul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@predictions/kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_predictions/kernel/Square"
  op: "Square"
  input: "training/RMSprop/gradients/gradients/predictions/MatMul_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@predictions/kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_predictions/kernel/mul_1"
  op: "Mul"
  input: "training/RMSprop/sub"
  input: "training/RMSprop/RMSprop/update_predictions/kernel/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@predictions/kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_predictions/kernel/add"
  op: "AddV2"
  input: "training/RMSprop/RMSprop/update_predictions/kernel/mul"
  input: "training/RMSprop/RMSprop/update_predictions/kernel/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@predictions/kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_predictions/kernel/AssignVariableOp"
  op: "AssignVariableOp"
  input: "training/RMSprop/predictions/kernel/rms"
  input: "training/RMSprop/RMSprop/update_predictions/kernel/add"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@predictions/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_predictions/kernel/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/predictions/kernel/rms"
  input: "^training/RMSprop/RMSprop/update_predictions/kernel/AssignVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@predictions/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_predictions/kernel/mul_2"
  op: "Mul"
  input: "training/RMSprop/Identity"
  input: "training/RMSprop/gradients/gradients/predictions/MatMul_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@predictions/kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_predictions/kernel/Sqrt/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/predictions/kernel/rms"
  input: "^training/RMSprop/RMSprop/update_predictions/kernel/AssignVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@predictions/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_predictions/kernel/Sqrt"
  op: "Sqrt"
  input: "training/RMSprop/RMSprop/update_predictions/kernel/Sqrt/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@predictions/kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_predictions/kernel/add_1"
  op: "AddV2"
  input: "training/RMSprop/RMSprop/update_predictions/kernel/Sqrt"
  input: "training/RMSprop/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@predictions/kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_predictions/kernel/truediv"
  op: "RealDiv"
  input: "training/RMSprop/RMSprop/update_predictions/kernel/mul_2"
  input: "training/RMSprop/RMSprop/update_predictions/kernel/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@predictions/kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_predictions/kernel/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "predictions/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_predictions/kernel/sub"
  op: "Sub"
  input: "training/RMSprop/RMSprop/update_predictions/kernel/ReadVariableOp_1"
  input: "training/RMSprop/RMSprop/update_predictions/kernel/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@predictions/kernel"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_predictions/kernel/AssignVariableOp_1"
  op: "AssignVariableOp"
  input: "predictions/kernel"
  input: "training/RMSprop/RMSprop/update_predictions/kernel/sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@predictions/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_predictions/kernel/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "predictions/kernel"
  input: "^training/RMSprop/RMSprop/update_predictions/kernel/AssignVariableOp_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@predictions/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_predictions/bias/mul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/predictions/bias/rms"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_predictions/bias/mul"
  op: "Mul"
  input: "training/RMSprop/Identity_1"
  input: "training/RMSprop/RMSprop/update_predictions/bias/mul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@predictions/bias"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_predictions/bias/Square"
  op: "Square"
  input: "training/RMSprop/gradients/gradients/predictions/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@predictions/bias"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_predictions/bias/mul_1"
  op: "Mul"
  input: "training/RMSprop/sub"
  input: "training/RMSprop/RMSprop/update_predictions/bias/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@predictions/bias"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_predictions/bias/add"
  op: "AddV2"
  input: "training/RMSprop/RMSprop/update_predictions/bias/mul"
  input: "training/RMSprop/RMSprop/update_predictions/bias/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@predictions/bias"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_predictions/bias/AssignVariableOp"
  op: "AssignVariableOp"
  input: "training/RMSprop/predictions/bias/rms"
  input: "training/RMSprop/RMSprop/update_predictions/bias/add"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@predictions/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_predictions/bias/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/predictions/bias/rms"
  input: "^training/RMSprop/RMSprop/update_predictions/bias/AssignVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@predictions/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_predictions/bias/mul_2"
  op: "Mul"
  input: "training/RMSprop/Identity"
  input: "training/RMSprop/gradients/gradients/predictions/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@predictions/bias"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_predictions/bias/Sqrt/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/predictions/bias/rms"
  input: "^training/RMSprop/RMSprop/update_predictions/bias/AssignVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@predictions/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_predictions/bias/Sqrt"
  op: "Sqrt"
  input: "training/RMSprop/RMSprop/update_predictions/bias/Sqrt/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@predictions/bias"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_predictions/bias/add_1"
  op: "AddV2"
  input: "training/RMSprop/RMSprop/update_predictions/bias/Sqrt"
  input: "training/RMSprop/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@predictions/bias"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_predictions/bias/truediv"
  op: "RealDiv"
  input: "training/RMSprop/RMSprop/update_predictions/bias/mul_2"
  input: "training/RMSprop/RMSprop/update_predictions/bias/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@predictions/bias"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_predictions/bias/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "predictions/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_predictions/bias/sub"
  op: "Sub"
  input: "training/RMSprop/RMSprop/update_predictions/bias/ReadVariableOp_1"
  input: "training/RMSprop/RMSprop/update_predictions/bias/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@predictions/bias"
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_predictions/bias/AssignVariableOp_1"
  op: "AssignVariableOp"
  input: "predictions/bias"
  input: "training/RMSprop/RMSprop/update_predictions/bias/sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@predictions/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_predictions/bias/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "predictions/bias"
  input: "^training/RMSprop/RMSprop/update_predictions/bias/AssignVariableOp_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@predictions/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/Const"
  op: "Const"
  input: "^training/RMSprop/RMSprop/update_block1_conv1/bias/AssignVariableOp_1"
  input: "^training/RMSprop/RMSprop/update_block1_conv1/kernel/AssignVariableOp_1"
  input: "^training/RMSprop/RMSprop/update_block1_conv2/bias/AssignVariableOp_1"
  input: "^training/RMSprop/RMSprop/update_block1_conv2/kernel/AssignVariableOp_1"
  input: "^training/RMSprop/RMSprop/update_block2_conv1/bias/AssignVariableOp_1"
  input: "^training/RMSprop/RMSprop/update_block2_conv1/kernel/AssignVariableOp_1"
  input: "^training/RMSprop/RMSprop/update_block2_conv2/bias/AssignVariableOp_1"
  input: "^training/RMSprop/RMSprop/update_block2_conv2/kernel/AssignVariableOp_1"
  input: "^training/RMSprop/RMSprop/update_block3_conv1/bias/AssignVariableOp_1"
  input: "^training/RMSprop/RMSprop/update_block3_conv1/kernel/AssignVariableOp_1"
  input: "^training/RMSprop/RMSprop/update_block3_conv2/bias/AssignVariableOp_1"
  input: "^training/RMSprop/RMSprop/update_block3_conv2/kernel/AssignVariableOp_1"
  input: "^training/RMSprop/RMSprop/update_block3_conv3/bias/AssignVariableOp_1"
  input: "^training/RMSprop/RMSprop/update_block3_conv3/kernel/AssignVariableOp_1"
  input: "^training/RMSprop/RMSprop/update_block4_conv1/bias/AssignVariableOp_1"
  input: "^training/RMSprop/RMSprop/update_block4_conv1/kernel/AssignVariableOp_1"
  input: "^training/RMSprop/RMSprop/update_block4_conv2/bias/AssignVariableOp_1"
  input: "^training/RMSprop/RMSprop/update_block4_conv2/kernel/AssignVariableOp_1"
  input: "^training/RMSprop/RMSprop/update_block4_conv3/bias/AssignVariableOp_1"
  input: "^training/RMSprop/RMSprop/update_block4_conv3/kernel/AssignVariableOp_1"
  input: "^training/RMSprop/RMSprop/update_block5_conv1/bias/AssignVariableOp_1"
  input: "^training/RMSprop/RMSprop/update_block5_conv1/kernel/AssignVariableOp_1"
  input: "^training/RMSprop/RMSprop/update_block5_conv2/bias/AssignVariableOp_1"
  input: "^training/RMSprop/RMSprop/update_block5_conv2/kernel/AssignVariableOp_1"
  input: "^training/RMSprop/RMSprop/update_block5_conv3/bias/AssignVariableOp_1"
  input: "^training/RMSprop/RMSprop/update_block5_conv3/kernel/AssignVariableOp_1"
  input: "^training/RMSprop/RMSprop/update_fc1/bias/AssignVariableOp_1"
  input: "^training/RMSprop/RMSprop/update_fc1/kernel/AssignVariableOp_1"
  input: "^training/RMSprop/RMSprop/update_fc2/bias/AssignVariableOp_1"
  input: "^training/RMSprop/RMSprop/update_fc2/kernel/AssignVariableOp_1"
  input: "^training/RMSprop/RMSprop/update_predictions/bias/AssignVariableOp_1"
  input: "^training/RMSprop/RMSprop/update_predictions/kernel/AssignVariableOp_1"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/AssignAddVariableOp"
  op: "AssignAddVariableOp"
  input: "training/RMSprop/iter"
  input: "training/RMSprop/RMSprop/Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/iter"
  input: "^training/RMSprop/RMSprop/AssignAddVariableOp"
  input: "^training/RMSprop/RMSprop/update_block1_conv1/bias/AssignVariableOp_1"
  input: "^training/RMSprop/RMSprop/update_block1_conv1/kernel/AssignVariableOp_1"
  input: "^training/RMSprop/RMSprop/update_block1_conv2/bias/AssignVariableOp_1"
  input: "^training/RMSprop/RMSprop/update_block1_conv2/kernel/AssignVariableOp_1"
  input: "^training/RMSprop/RMSprop/update_block2_conv1/bias/AssignVariableOp_1"
  input: "^training/RMSprop/RMSprop/update_block2_conv1/kernel/AssignVariableOp_1"
  input: "^training/RMSprop/RMSprop/update_block2_conv2/bias/AssignVariableOp_1"
  input: "^training/RMSprop/RMSprop/update_block2_conv2/kernel/AssignVariableOp_1"
  input: "^training/RMSprop/RMSprop/update_block3_conv1/bias/AssignVariableOp_1"
  input: "^training/RMSprop/RMSprop/update_block3_conv1/kernel/AssignVariableOp_1"
  input: "^training/RMSprop/RMSprop/update_block3_conv2/bias/AssignVariableOp_1"
  input: "^training/RMSprop/RMSprop/update_block3_conv2/kernel/AssignVariableOp_1"
  input: "^training/RMSprop/RMSprop/update_block3_conv3/bias/AssignVariableOp_1"
  input: "^training/RMSprop/RMSprop/update_block3_conv3/kernel/AssignVariableOp_1"
  input: "^training/RMSprop/RMSprop/update_block4_conv1/bias/AssignVariableOp_1"
  input: "^training/RMSprop/RMSprop/update_block4_conv1/kernel/AssignVariableOp_1"
  input: "^training/RMSprop/RMSprop/update_block4_conv2/bias/AssignVariableOp_1"
  input: "^training/RMSprop/RMSprop/update_block4_conv2/kernel/AssignVariableOp_1"
  input: "^training/RMSprop/RMSprop/update_block4_conv3/bias/AssignVariableOp_1"
  input: "^training/RMSprop/RMSprop/update_block4_conv3/kernel/AssignVariableOp_1"
  input: "^training/RMSprop/RMSprop/update_block5_conv1/bias/AssignVariableOp_1"
  input: "^training/RMSprop/RMSprop/update_block5_conv1/kernel/AssignVariableOp_1"
  input: "^training/RMSprop/RMSprop/update_block5_conv2/bias/AssignVariableOp_1"
  input: "^training/RMSprop/RMSprop/update_block5_conv2/kernel/AssignVariableOp_1"
  input: "^training/RMSprop/RMSprop/update_block5_conv3/bias/AssignVariableOp_1"
  input: "^training/RMSprop/RMSprop/update_block5_conv3/kernel/AssignVariableOp_1"
  input: "^training/RMSprop/RMSprop/update_fc1/bias/AssignVariableOp_1"
  input: "^training/RMSprop/RMSprop/update_fc1/kernel/AssignVariableOp_1"
  input: "^training/RMSprop/RMSprop/update_fc2/bias/AssignVariableOp_1"
  input: "^training/RMSprop/RMSprop/update_fc2/kernel/AssignVariableOp_1"
  input: "^training/RMSprop/RMSprop/update_predictions/bias/AssignVariableOp_1"
  input: "^training/RMSprop/RMSprop/update_predictions/kernel/AssignVariableOp_1"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "training_1/group_deps"
  op: "NoOp"
  input: "^loss/mul"
  input: "^training/RMSprop/RMSprop/AssignAddVariableOp"
}
node {
  name: "VarIsInitializedOp_34"
  op: "VarIsInitializedOp"
  input: "training/RMSprop/block4_conv1/kernel/rms"
}
node {
  name: "VarIsInitializedOp_35"
  op: "VarIsInitializedOp"
  input: "training/RMSprop/block5_conv2/bias/rms"
}
node {
  name: "VarIsInitializedOp_36"
  op: "VarIsInitializedOp"
  input: "training/RMSprop/learning_rate"
}
node {
  name: "VarIsInitializedOp_37"
  op: "VarIsInitializedOp"
  input: "training/RMSprop/momentum"
}
node {
  name: "VarIsInitializedOp_38"
  op: "VarIsInitializedOp"
  input: "training/RMSprop/block1_conv2/bias/rms"
}
node {
  name: "VarIsInitializedOp_39"
  op: "VarIsInitializedOp"
  input: "training/RMSprop/block3_conv2/kernel/rms"
}
node {
  name: "VarIsInitializedOp_40"
  op: "VarIsInitializedOp"
  input: "training/RMSprop/block4_conv1/bias/rms"
}
node {
  name: "VarIsInitializedOp_41"
  op: "VarIsInitializedOp"
  input: "training/RMSprop/block4_conv3/bias/rms"
}
node {
  name: "VarIsInitializedOp_42"
  op: "VarIsInitializedOp"
  input: "training/RMSprop/block5_conv1/kernel/rms"
}
node {
  name: "VarIsInitializedOp_43"
  op: "VarIsInitializedOp"
  input: "training/RMSprop/fc2/bias/rms"
}
node {
  name: "VarIsInitializedOp_44"
  op: "VarIsInitializedOp"
  input: "training/RMSprop/rho"
}
node {
  name: "VarIsInitializedOp_45"
  op: "VarIsInitializedOp"
  input: "training/RMSprop/block1_conv1/kernel/rms"
}
node {
  name: "VarIsInitializedOp_46"
  op: "VarIsInitializedOp"
  input: "training/RMSprop/block2_conv2/bias/rms"
}
node {
  name: "VarIsInitializedOp_47"
  op: "VarIsInitializedOp"
  input: "training/RMSprop/block4_conv2/bias/rms"
}
node {
  name: "VarIsInitializedOp_48"
  op: "VarIsInitializedOp"
  input: "training/RMSprop/block3_conv3/kernel/rms"
}
node {
  name: "VarIsInitializedOp_49"
  op: "VarIsInitializedOp"
  input: "training/RMSprop/block4_conv2/kernel/rms"
}
node {
  name: "VarIsInitializedOp_50"
  op: "VarIsInitializedOp"
  input: "training/RMSprop/block4_conv3/kernel/rms"
}
node {
  name: "VarIsInitializedOp_51"
  op: "VarIsInitializedOp"
  input: "training/RMSprop/predictions/kernel/rms"
}
node {
  name: "VarIsInitializedOp_52"
  op: "VarIsInitializedOp"
  input: "training/RMSprop/fc1/kernel/rms"
}
node {
  name: "VarIsInitializedOp_53"
  op: "VarIsInitializedOp"
  input: "training/RMSprop/block1_conv2/kernel/rms"
}
node {
  name: "VarIsInitializedOp_54"
  op: "VarIsInitializedOp"
  input: "training/RMSprop/decay"
}
node {
  name: "VarIsInitializedOp_55"
  op: "VarIsInitializedOp"
  input: "training/RMSprop/block2_conv1/kernel/rms"
}
node {
  name: "VarIsInitializedOp_56"
  op: "VarIsInitializedOp"
  input: "training/RMSprop/block3_conv1/kernel/rms"
}
node {
  name: "VarIsInitializedOp_57"
  op: "VarIsInitializedOp"
  input: "training/RMSprop/block2_conv1/bias/rms"
}
node {
  name: "VarIsInitializedOp_58"
  op: "VarIsInitializedOp"
  input: "training/RMSprop/block2_conv2/kernel/rms"
}
node {
  name: "VarIsInitializedOp_59"
  op: "VarIsInitializedOp"
  input: "training/RMSprop/fc1/bias/rms"
}
node {
  name: "VarIsInitializedOp_60"
  op: "VarIsInitializedOp"
  input: "training/RMSprop/fc2/kernel/rms"
}
node {
  name: "VarIsInitializedOp_61"
  op: "VarIsInitializedOp"
  input: "training/RMSprop/block1_conv1/bias/rms"
}
node {
  name: "VarIsInitializedOp_62"
  op: "VarIsInitializedOp"
  input: "training/RMSprop/block3_conv1/bias/rms"
}
node {
  name: "VarIsInitializedOp_63"
  op: "VarIsInitializedOp"
  input: "training/RMSprop/block3_conv3/bias/rms"
}
node {
  name: "VarIsInitializedOp_64"
  op: "VarIsInitializedOp"
  input: "training/RMSprop/block5_conv2/kernel/rms"
}
node {
  name: "VarIsInitializedOp_65"
  op: "VarIsInitializedOp"
  input: "training/RMSprop/block5_conv3/bias/rms"
}
node {
  name: "VarIsInitializedOp_66"
  op: "VarIsInitializedOp"
  input: "training/RMSprop/iter"
}
node {
  name: "VarIsInitializedOp_67"
  op: "VarIsInitializedOp"
  input: "training/RMSprop/block3_conv2/bias/rms"
}
node {
  name: "VarIsInitializedOp_68"
  op: "VarIsInitializedOp"
  input: "training/RMSprop/block5_conv1/bias/rms"
}
node {
  name: "VarIsInitializedOp_69"
  op: "VarIsInitializedOp"
  input: "training/RMSprop/block5_conv3/kernel/rms"
}
node {
  name: "VarIsInitializedOp_70"
  op: "VarIsInitializedOp"
  input: "training/RMSprop/predictions/bias/rms"
}
node {
  name: "init_1"
  op: "NoOp"
  input: "^training/RMSprop/block1_conv1/bias/rms/Assign"
  input: "^training/RMSprop/block1_conv1/kernel/rms/Assign"
  input: "^training/RMSprop/block1_conv2/bias/rms/Assign"
  input: "^training/RMSprop/block1_conv2/kernel/rms/Assign"
  input: "^training/RMSprop/block2_conv1/bias/rms/Assign"
  input: "^training/RMSprop/block2_conv1/kernel/rms/Assign"
  input: "^training/RMSprop/block2_conv2/bias/rms/Assign"
  input: "^training/RMSprop/block2_conv2/kernel/rms/Assign"
  input: "^training/RMSprop/block3_conv1/bias/rms/Assign"
  input: "^training/RMSprop/block3_conv1/kernel/rms/Assign"
  input: "^training/RMSprop/block3_conv2/bias/rms/Assign"
  input: "^training/RMSprop/block3_conv2/kernel/rms/Assign"
  input: "^training/RMSprop/block3_conv3/bias/rms/Assign"
  input: "^training/RMSprop/block3_conv3/kernel/rms/Assign"
  input: "^training/RMSprop/block4_conv1/bias/rms/Assign"
  input: "^training/RMSprop/block4_conv1/kernel/rms/Assign"
  input: "^training/RMSprop/block4_conv2/bias/rms/Assign"
  input: "^training/RMSprop/block4_conv2/kernel/rms/Assign"
  input: "^training/RMSprop/block4_conv3/bias/rms/Assign"
  input: "^training/RMSprop/block4_conv3/kernel/rms/Assign"
  input: "^training/RMSprop/block5_conv1/bias/rms/Assign"
  input: "^training/RMSprop/block5_conv1/kernel/rms/Assign"
  input: "^training/RMSprop/block5_conv2/bias/rms/Assign"
  input: "^training/RMSprop/block5_conv2/kernel/rms/Assign"
  input: "^training/RMSprop/block5_conv3/bias/rms/Assign"
  input: "^training/RMSprop/block5_conv3/kernel/rms/Assign"
  input: "^training/RMSprop/decay/Assign"
  input: "^training/RMSprop/fc1/bias/rms/Assign"
  input: "^training/RMSprop/fc1/kernel/rms/Assign"
  input: "^training/RMSprop/fc2/bias/rms/Assign"
  input: "^training/RMSprop/fc2/kernel/rms/Assign"
  input: "^training/RMSprop/iter/Assign"
  input: "^training/RMSprop/learning_rate/Assign"
  input: "^training/RMSprop/momentum/Assign"
  input: "^training/RMSprop/predictions/bias/rms/Assign"
  input: "^training/RMSprop/predictions/kernel/rms/Assign"
  input: "^training/RMSprop/rho/Assign"
}
node {
  name: "evaluation/group_deps"
  op: "NoOp"
  input: "^loss/mul"
}
versions {
  producer: 134
}
